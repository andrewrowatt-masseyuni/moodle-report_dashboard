{"version":3,"file":"dataTables.select.min.js","sources":["../src/dataTables.select.js"],"sourcesContent":["/*! Select for DataTables 3.0.0\n * Â© SpryMedia Ltd - datatables.net/license/mit\n */\n\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'report_dashboard/dataTables'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tvar jq = require('jquery');\n\t\tvar cjsRequires = function (root, $) {\n\t\t\tif ( ! $.fn.dataTable ) {\n\t\t\t\trequire('report_dashboard/dataTables')(root, $);\n\t\t\t}\n\t\t};\n\n\t\tif (typeof window === 'undefined') {\n\t\t\tmodule.exports = function (root, $) {\n\t\t\t\tif ( ! root ) {\n\t\t\t\t\t// CommonJS environments without a window global must pass a\n\t\t\t\t\t// root. This will give an error otherwise\n\t\t\t\t\troot = window;\n\t\t\t\t}\n\n\t\t\t\tif ( ! $ ) {\n\t\t\t\t\t$ = jq( root );\n\t\t\t\t}\n\n\t\t\t\tcjsRequires( root, $ );\n\t\t\t\treturn factory( $, root, root.document );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tcjsRequires( window, jq );\n\t\t\tmodule.exports = factory( jq, window, window.document );\n\t\t}\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n\n// Version information for debugger\nDataTable.select = {};\n\nDataTable.select.classes = {\n\tcheckbox: 'dt-select-checkbox'\n};\n\nDataTable.select.version = '3.0.0';\n\nDataTable.select.init = function (dt) {\n\tvar ctx = dt.settings()[0];\n\n\tif (!DataTable.versionCheck('2')) {\n\t\tthrow 'Warning: Select requires DataTables 2 or newer';\n\t}\n\n\tif (ctx._select) {\n\t\treturn;\n\t}\n\n\tvar savedSelected = dt.state.loaded();\n\n\tvar selectAndSave = function (e, settings, data) {\n\t\tif (data === null || data.select === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clear any currently selected rows, before restoring state\n\t\t// None will be selected on first initialisation\n\t\tif (dt.rows({ selected: true }).any()) {\n\t\t\tdt.rows().deselect();\n\t\t}\n\t\tif (data.select.rows !== undefined) {\n\t\t\tdt.rows(data.select.rows).select();\n\t\t}\n\n\t\tif (dt.columns({ selected: true }).any()) {\n\t\t\tdt.columns().deselect();\n\t\t}\n\t\tif (data.select.columns !== undefined) {\n\t\t\tdt.columns(data.select.columns).select();\n\t\t}\n\n\t\tif (dt.cells({ selected: true }).any()) {\n\t\t\tdt.cells().deselect();\n\t\t}\n\t\tif (data.select.cells !== undefined) {\n\t\t\tfor (var i = 0; i < data.select.cells.length; i++) {\n\t\t\t\tdt.cell(data.select.cells[i].row, data.select.cells[i].column).select();\n\t\t\t}\n\t\t}\n\n\t\tdt.state.save();\n\t};\n\n\tdt.on('stateSaveParams', function (e, settings, data) {\n\t\tdata.select = {};\n\t\tdata.select.rows = dt.rows({ selected: true }).ids(true).toArray();\n\t\tdata.select.columns = dt.columns({ selected: true })[0];\n\t\tdata.select.cells = dt.cells({ selected: true })[0].map(function (coords) {\n\t\t\treturn { row: dt.row(coords.row).id(true), column: coords.column };\n\t\t});\n\t})\n\t\t.on('stateLoadParams', selectAndSave)\n\t\t.one('init', function () {\n\t\t\tselectAndSave(undefined, undefined, savedSelected);\n\t\t});\n\n\tvar init = ctx.oInit.select;\n\tvar defaults = DataTable.defaults.select;\n\tvar opts = init === undefined ? defaults : init;\n\n\t// Set defaults\n\tvar items = 'row';\n\tvar style = 'api';\n\tvar blurable = false;\n\tvar toggleable = true;\n\tvar selectable = null;\n\tvar info = true;\n\tvar selector = 'td, th';\n\tvar className = 'selected';\n\tvar headerCheckbox = true;\n\tvar setStyle = false;\n\tvar keys = false;\n\n\tctx._select = {\n\t\tinfoEls: []\n\t};\n\n\t// Initialisation customisations\n\tif (opts === true) {\n\t\tstyle = 'os';\n\t\tsetStyle = true;\n\t}\n\telse if (typeof opts === 'string') {\n\t\tstyle = opts;\n\t\tsetStyle = true;\n\t}\n\telse if ($.isPlainObject(opts)) {\n\t\tif (opts.blurable !== undefined) {\n\t\t\tblurable = opts.blurable;\n\t\t}\n\n\t\tif (opts.toggleable !== undefined) {\n\t\t\ttoggleable = opts.toggleable;\n\t\t}\n\n\t\tif (opts.info !== undefined) {\n\t\t\tinfo = opts.info;\n\t\t}\n\n\t\tif (opts.items !== undefined) {\n\t\t\titems = opts.items;\n\t\t}\n\n\t\tif (opts.style !== undefined) {\n\t\t\tstyle = opts.style;\n\t\t\tsetStyle = true;\n\t\t}\n\t\telse {\n\t\t\tstyle = 'os';\n\t\t\tsetStyle = true;\n\t\t}\n\n\t\tif (opts.selector !== undefined) {\n\t\t\tselector = opts.selector;\n\t\t}\n\n\t\tif (opts.className !== undefined) {\n\t\t\tclassName = opts.className;\n\t\t}\n\n\t\tif (opts.headerCheckbox !== undefined) {\n\t\t\theaderCheckbox = opts.headerCheckbox;\n\t\t}\n\n\t\tif (opts.selectable !== undefined) {\n\t\t\tselectable = opts.selectable;\n\t\t}\n\n\t\tif (opts.keys !== undefined) {\n\t\t\tkeys = opts.keys;\n\t\t}\n\t}\n\n\tdt.select.selector(selector);\n\tdt.select.items(items);\n\tdt.select.style(style);\n\tdt.select.blurable(blurable);\n\tdt.select.toggleable(toggleable);\n\tdt.select.info(info);\n\tdt.select.keys(keys);\n\tdt.select.selectable(selectable);\n\tctx._select.className = className;\n\n\t// If the init options haven't enabled select, but there is a selectable\n\t// class name, then enable\n\tif (!setStyle && $(dt.table().node()).hasClass('selectable')) {\n\t\tdt.select.style('os');\n\t}\n\n\t// Insert a checkbox into the header if needed - might need to wait\n\t// for init complete\n\tif (headerCheckbox || headerCheckbox === 'select-page' || headerCheckbox === 'select-all') {\n\t\tdt.ready(function () {\n\t\t\tinitCheckboxHeader(dt, headerCheckbox);\n\t\t});\n\t}\n};\n\n/*\n\nSelect is a collection of API methods, event handlers, event emitters and\nbuttons (for the `Buttons` extension) for DataTables. It provides the following\nfeatures, with an overview of how they are implemented:\n\n## Selection of rows, columns and cells. Whether an item is selected or not is\n   stored in:\n\n* rows: a `_select_selected` property which contains a boolean value of the\n  DataTables' `aoData` object for each row\n* columns: a `_select_selected` property which contains a boolean value of the\n  DataTables' `aoColumns` object for each column\n* cells: a `_selected_cells` property which contains an array of boolean values\n  of the `aoData` object for each row. The array is the same length as the\n  columns array, with each element of it representing a cell.\n\nThis method of using boolean flags allows Select to operate when nodes have not\nbeen created for rows / cells (DataTables' defer rendering feature).\n\n## API methods\n\nA range of API methods are available for triggering selection and de-selection\nof rows. Methods are also available to configure the selection events that can\nbe triggered by an end user (such as which items are to be selected). To a large\nextent, these of API methods *is* Select. It is basically a collection of helper\nfunctions that can be used to select items in a DataTable.\n\nConfiguration of select is held in the object `_select` which is attached to the\nDataTables settings object on initialisation. Select being available on a table\nis not optional when Select is loaded, but its default is for selection only to\nbe available via the API - so the end user wouldn't be able to select rows\nwithout additional configuration.\n\nThe `_select` object contains the following properties:\n\n```\n{\n\titems:string       - Can be `rows`, `columns` or `cells`. Defines what item \n\t                     will be selected if the user is allowed to activate row\n\t                     selection using the mouse.\n\tstyle:string       - Can be `none`, `single`, `multi` or `os`. Defines the\n\t                     interaction style when selecting items\n\tblurable:boolean   - If row selection can be cleared by clicking outside of\n\t                     the table\n\ttoggleable:boolean - If row selection can be cancelled by repeated clicking\n\t                     on the row\n\tinfo:boolean       - If the selection summary should be shown in the table\n\t                     information elements\n\tinfoEls:element[]  - List of HTML elements with info elements for a table\n}\n```\n\nIn addition to the API methods, Select also extends the DataTables selector\noptions for rows, columns and cells adding a `selected` option to the selector\noptions object, allowing the developer to select only selected items or\nunselected items.\n\n## Mouse selection of items\n\nClicking on items can be used to select items. This is done by a simple event\nhandler that will select the items using the API methods.\n\n */\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Local functions\n */\n\n/**\n * Add one or more cells to the selection when shift clicking in OS selection\n * style cell selection.\n *\n * Cell range is more complicated than row and column as we want to select\n * in the visible grid rather than by index in sequence. For example, if you\n * click first in cell 1-1 and then shift click in 2-2 - cells 1-2 and 2-1\n * should also be selected (and not 1-3, 1-4. etc)\n *\n * @param  {DataTable.Api} dt   DataTable\n * @param  {object}        idx  Cell index to select to\n * @param  {object}        last Cell index to select from\n * @private\n */\nfunction cellRange(dt, idx, last) {\n\tvar indexes;\n\tvar columnIndexes;\n\tvar rowIndexes;\n\tvar selectColumns = function (start, end) {\n\t\tif (start > end) {\n\t\t\tvar tmp = end;\n\t\t\tend = start;\n\t\t\tstart = tmp;\n\t\t}\n\n\t\tvar record = false;\n\t\treturn dt\n\t\t\t.columns(':visible')\n\t\t\t.indexes()\n\t\t\t.filter(function (i) {\n\t\t\t\tif (i === start) {\n\t\t\t\t\trecord = true;\n\t\t\t\t}\n\n\t\t\t\tif (i === end) {\n\t\t\t\t\t// not else if, as start might === end\n\t\t\t\t\trecord = false;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn record;\n\t\t\t});\n\t};\n\n\tvar selectRows = function (start, end) {\n\t\tvar indexes = dt.rows({ search: 'applied' }).indexes();\n\n\t\t// Which comes first - might need to swap\n\t\tif (indexes.indexOf(start) > indexes.indexOf(end)) {\n\t\t\tvar tmp = end;\n\t\t\tend = start;\n\t\t\tstart = tmp;\n\t\t}\n\n\t\tvar record = false;\n\t\treturn indexes.filter(function (i) {\n\t\t\tif (i === start) {\n\t\t\t\trecord = true;\n\t\t\t}\n\n\t\t\tif (i === end) {\n\t\t\t\trecord = false;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn record;\n\t\t});\n\t};\n\n\tif (!dt.cells({ selected: true }).any() && !last) {\n\t\t// select from the top left cell to this one\n\t\tcolumnIndexes = selectColumns(0, idx.column);\n\t\trowIndexes = selectRows(0, idx.row);\n\t}\n\telse {\n\t\t// Get column indexes between old and new\n\t\tcolumnIndexes = selectColumns(last.column, idx.column);\n\t\trowIndexes = selectRows(last.row, idx.row);\n\t}\n\n\tindexes = dt.cells(rowIndexes, columnIndexes).flatten();\n\n\tif (!dt.cells(idx, { selected: true }).any()) {\n\t\t// Select range\n\t\tdt.cells(indexes).select();\n\t}\n\telse {\n\t\t// Deselect range\n\t\tdt.cells(indexes).deselect();\n\t}\n}\n\n/**\n * Get the class\n * @returns \n */\nfunction checkboxClass(selector) {\n\tvar name = DataTable.select.classes.checkbox;\n\n\treturn selector\n\t\t? name.replace(/ /g, '.')\n\t\t: name;\n}\n\n/**\n * Disable mouse selection by removing the selectors\n *\n * @param {DataTable.Api} dt DataTable to remove events from\n * @private\n */\nfunction disableMouseSelection(dt) {\n\tvar ctx = dt.settings()[0];\n\tvar selector = ctx._select.selector;\n\n\t$(dt.table().container())\n\t\t.off('mousedown.dtSelect', selector)\n\t\t.off('mouseup.dtSelect', selector)\n\t\t.off('click.dtSelect', selector);\n\n\t$('body').off('click.dtSelect' + _safeId(dt.table().node()));\n}\n\n/**\n * Attach mouse listeners to the table to allow mouse selection of items\n *\n * @param {DataTable.Api} dt DataTable to remove events from\n * @private\n */\nfunction enableMouseSelection(dt) {\n\tvar container = $(dt.table().container());\n\tvar ctx = dt.settings()[0];\n\tvar selector = ctx._select.selector;\n\tvar matchSelection;\n\n\tcontainer\n\t\t.on('mousedown.dtSelect', selector, function (e) {\n\t\t\t// Disallow text selection for shift clicking on the table so multi\n\t\t\t// element selection doesn't look terrible!\n\t\t\tif (e.shiftKey || e.metaKey || e.ctrlKey) {\n\t\t\t\tcontainer\n\t\t\t\t\t.css('-moz-user-select', 'none')\n\t\t\t\t\t.one('selectstart.dtSelect', selector, function () {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (window.getSelection) {\n\t\t\t\tmatchSelection = window.getSelection();\n\t\t\t}\n\t\t})\n\t\t.on('mouseup.dtSelect', selector, function () {\n\t\t\t// Allow text selection to occur again, Mozilla style (tested in FF\n\t\t\t// 35.0.1 - still required)\n\t\t\tcontainer.css('-moz-user-select', '');\n\t\t})\n\t\t.on('click.dtSelect', selector, function (e) {\n\t\t\tvar items = dt.select.items();\n\t\t\tvar idx;\n\n\t\t\t// If text was selected (click and drag), then we shouldn't change\n\t\t\t// the row's selected state\n\t\t\tif (matchSelection) {\n\t\t\t\tvar selection = window.getSelection();\n\n\t\t\t\t// If the element that contains the selection is not in the table, we can ignore it\n\t\t\t\t// This can happen if the developer selects text from the click event\n\t\t\t\tif (\n\t\t\t\t\t!selection.anchorNode ||\n\t\t\t\t\t$(selection.anchorNode).closest('table')[0] === dt.table().node()\n\t\t\t\t) {\n\t\t\t\t\tif (selection !== matchSelection) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar ctx = dt.settings()[0];\n\t\t\tvar container = dt.table().container();\n\n\t\t\t// Ignore clicks inside a sub-table\n\t\t\tif ($(e.target).closest('div.dt-container')[0] != container) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar cell = dt.cell($(e.target).closest('td, th'));\n\n\t\t\t// Check the cell actually belongs to the host DataTable (so child\n\t\t\t// rows, etc, are ignored)\n\t\t\tif (!cell.any()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar event = $.Event('user-select.dt');\n\t\t\teventTrigger(dt, event, [items, cell, e]);\n\n\t\t\tif (event.isDefaultPrevented()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar cellIndex = cell.index();\n\t\t\tif (items === 'row') {\n\t\t\t\tidx = cellIndex.row;\n\t\t\t\ttypeSelect(e, dt, ctx, 'row', idx);\n\t\t\t}\n\t\t\telse if (items === 'column') {\n\t\t\t\tidx = cell.index().column;\n\t\t\t\ttypeSelect(e, dt, ctx, 'column', idx);\n\t\t\t}\n\t\t\telse if (items === 'cell') {\n\t\t\t\tidx = cell.index();\n\t\t\t\ttypeSelect(e, dt, ctx, 'cell', idx);\n\t\t\t}\n\n\t\t\tctx._select_lastCell = cellIndex;\n\t\t});\n\n\t// Blurable\n\t$('body').on('click.dtSelect' + _safeId(dt.table().node()), function (e) {\n\t\tif (ctx._select.blurable) {\n\t\t\t// If the click was inside the DataTables container, don't blur\n\t\t\tif ($(e.target).parents().filter(dt.table().container()).length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ignore elements which have been removed from the DOM (i.e. paging\n\t\t\t// buttons)\n\t\t\tif ($(e.target).parents('html').length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Don't blur in Editor form\n\t\t\tif ($(e.target).parents('div.DTE').length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar event = $.Event('select-blur.dt');\n\t\t\teventTrigger(dt, event, [e.target, e]);\n\n\t\t\tif (event.isDefaultPrevented()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclear(ctx, true);\n\t\t}\n\t});\n}\n\n/**\n * Trigger an event on a DataTable\n *\n * @param {DataTable.Api} api      DataTable to trigger events on\n * @param  {boolean}      selected true if selected, false if deselected\n * @param  {string}       type     Item type acting on\n * @param  {boolean}      any      Require that there are values before\n *     triggering\n * @private\n */\nfunction eventTrigger(api, type, args, any) {\n\tif (any && !api.flatten().length) {\n\t\treturn;\n\t}\n\n\tif (typeof type === 'string') {\n\t\ttype = type + '.dt';\n\t}\n\n\targs.unshift(api);\n\n\t$(api.table().node()).trigger(type, args);\n}\n\n/**\n * Determine if a column is a checkbox column\n * @param {*} col DataTables column object\n * @returns \n */\nfunction isCheckboxColumn(col) {\n\treturn col.mRender && col.mRender._name === 'selectCheckbox';\n}\n\n/**\n * Update the information element of the DataTable showing information about the\n * items selected. This is done by adding tags to the existing text\n *\n * @param {DataTable.Api} api DataTable to update\n * @private\n */\nfunction info(api, node) {\n\tif (api.select.style() === 'api' || api.select.info() === false) {\n\t\treturn;\n\t}\n\n\tvar ctx = api.settings()[0];\n\tvar rowSetLength = ctx._select_set.length;\n\tvar rows = rowSetLength ? rowSetLength : api.rows({ selected: true }).count();\n\tvar columns = api.columns({ selected: true }).count();\n\tvar cells = api.cells({ selected: true }).count();\n\n\t// If subtractive selection, then we need to take the number of rows and\n\t// subtract those that have been deselected\n\tif (ctx._select_mode === 'subtractive') {\n\t\trows = api.page.info().recordsDisplay - rowSetLength;\n\t}\n\n\tvar add = function (el, name, num) {\n\t\tel.append(\n\t\t\t$('<span class=\"select-item\"/>').append(\n\t\t\t\tapi.i18n(\n\t\t\t\t\t'select.' + name + 's',\n\t\t\t\t\t{ _: '%d ' + name + 's selected', 0: '', 1: '1 ' + name + ' selected' },\n\t\t\t\t\tnum\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t};\n\n\tvar el = $(node);\n\tvar output = $('<span class=\"select-info\"/>');\n\n\tadd(output, 'row', rows);\n\tadd(output, 'column', columns);\n\tadd(output, 'cell', cells);\n\n\tvar existing = el.children('span.select-info');\n\n\tif (existing.length) {\n\t\texisting.remove();\n\t}\n\n\tif (output.text() !== '') {\n\t\tel.append(output);\n\t}\n}\n\n/**\n * Add a checkbox to the header for checkbox columns, allowing all rows to\n * be selected, deselected or just to show the state.\n *\n * @param {*} dt API\n * @param {*} headerCheckbox the header checkbox option\n */\nfunction initCheckboxHeader( dt, headerCheckbox ) {\n\tvar dtSettings = dt.settings()[0];\n\tvar dtInternalColumns = dtSettings.aoColumns;\n\n\t// Find any checkbox column(s)\n\tdt.columns().iterator('column', function (s, idx) {\n\t\tvar col = dtInternalColumns[idx];\n\n\t\t// Checkbox columns have a rendering function with a given name\n\t\tif (! isCheckboxColumn(col)) {\n\t\t\treturn;\n\t\t}\n\t\tvar header = dt.column(idx).header();\n\n\t\tif (! $('input', header).length) {\n\t\t\t// If no checkbox yet, insert one\n\t\t\tvar input = $('<input>')\n\t\t\t\t.attr({\n\t\t\t\t\tclass: checkboxClass(true),\n\t\t\t\t\ttype: 'checkbox',\n\t\t\t\t\t'aria-label': dt.i18n('select.aria.headerCheckbox') || 'Select all rows'\n\t\t\t\t})\n\t\t\t\t.appendTo(header)\n\t\t\t\t.on('change', function () {\n\t\t\t\t\tif (this.checked) {\n\t\t\t\t\t\tif (headerCheckbox == 'select-page') {\n\t\t\t\t\t\t\tdt.rows({page: 'current'}).select();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdt.rows({search: 'applied'}).select();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (headerCheckbox == 'select-page') {\n\t\t\t\t\t\t\tdt.rows({page: 'current', selected: true}).deselect();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdt.rows({selected: true}).deselect();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on('click', function (e) {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t});\n\n\t\t\t// Update the header checkbox's state when the selection in the\n\t\t\t// table changes\n\t\t\tdt.on('draw select deselect', function (e, pass, type) {\n\t\t\t\tif (type === 'row' || ! type) {\n\t\t\t\t\tvar nums = headerCheckboxState(dt, headerCheckbox);\n\n\t\t\t\t\tif (nums.search && nums.search <= nums.count && nums.search === nums.available) {\n\t\t\t\t\t\tinput\n\t\t\t\t\t\t\t.prop('checked', true)\n\t\t\t\t\t\t\t.prop('indeterminate', false);\n\t\t\t\t\t}\n\t\t\t\t\telse if (nums.search === 0 && nums.count === 0) {\n\t\t\t\t\t\tinput\n\t\t\t\t\t\t\t.prop('checked', false)\n\t\t\t\t\t\t\t.prop('indeterminate', false);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinput\n\t\t\t\t\t\t\t.prop('checked', false)\n\t\t\t\t\t\t\t.prop('indeterminate', true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction keysSet(dt) {\n\tvar ctx = dt.settings()[0];\n\tvar flag = ctx._select.keys;\n\tvar namespace = 'dts-keys-' + ctx.sTableId;\n\n\tif (flag) {\n\t\t// Need a tabindex of the `tr` elements to make them focusable by the browser\n\t\t$(dt.rows({page: 'current'}).nodes()).attr('tabindex', 0);\n\n\t\tdt.on('draw.' + namespace, function () {\n\t\t\t$(dt.rows({page: 'current'}).nodes()).attr('tabindex', 0);\n\t\t});\n\n\t\t// Listen on document for tab, up and down\n\t\t$(document).on('keydown.' + namespace, function (e) {\n\t\t\tvar key = e.keyCode;\n\t\t\tvar active = document.activeElement;\n\n\t\t\t// Can't use e.key as it wasn't widely supported until 2017\n\t\t\t// 9 Tab\n\t\t\t// 13 Return\n\t\t\t// 32 Space\n\t\t\t// 38 ArrowUp\n\t\t\t// 40 ArrowDown\n\t\t\tif (! [9, 13, 32, 38, 40].includes(key)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar nodes = dt.rows({page: 'current'}).nodes().toArray();\n\t\t\tvar idx = nodes.indexOf(active);\n\t\t\tvar preventDefault = true;\n\n\t\t\t// Only take an action if a row has focus\n\t\t\tif (idx === -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (key === 9) {\n\t\t\t\t// Tab focus change\n\t\t\t\tif (e.shift === false && idx === nodes.length - 1) {\n\t\t\t\t\tkeysPageDown(dt);\n\t\t\t\t}\n\t\t\t\telse if (e.shift === true && idx === 0) {\n\t\t\t\t\tkeysPageUp(dt);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Browser will do it for us\n\t\t\t\t\tpreventDefault = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (key === 13 || key === 32) {\n\t\t\t\t// Row selection / deselection\n\t\t\t\tvar row = dt.row(active);\n\n\t\t\t\tif (row.selected()) {\n\t\t\t\t\trow.deselect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\trow.select();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (key === 38) {\n\t\t\t\t// Move up\n\t\t\t\tif (idx > 0) {\n\t\t\t\t\tnodes[idx-1].focus();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tkeysPageUp(dt);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Move down\n\t\t\t\tif (idx < nodes.length -1) {\n\t\t\t\t\tnodes[idx+1].focus();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tkeysPageDown(dt);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (preventDefault) {\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t});\n\t}\n\telse {\n\t\t// Stop the rows from being able to gain focus\n\t\t$(dt.rows().nodes()).removeAttr('tabindex');\n\n\t\t// Nuke events\n\t\tdt.off('draw.' + namespace);\n\t\t$(document).off('keydown.' + namespace);\n\t}\n}\n\n/**\n * Change to the next page and focus on the first row\n *\n * @param {DataTable.Api} dt DataTable instance\n */\nfunction keysPageDown(dt) {\n\t// Is there another page to turn to?\n\tvar info = dt.page.info();\n\n\tif (info.page < info.pages - 1) {\n\t\tdt\n\t\t\t.one('draw', function () {\n\t\t\t\tdt.row(':first-child').node().focus();\n\t\t\t})\n\t\t\t.page('next')\n\t\t\t.draw(false);\n\t}\n}\n\n/**\n * Change to the previous page and focus on the last row\n *\n * @param {DataTable.Api} dt DataTable instance\n */\nfunction keysPageUp(dt) {\n\t// Is there another page to turn to?\n\tvar info = dt.page.info();\n\n\tif (info.page > 0) {\n\t\tdt\n\t\t\t.one('draw', function () {\n\t\t\t\tdt.row(':last-child').node().focus();\n\t\t\t})\n\t\t\t.page('previous')\n\t\t\t.draw(false);\n\t}\n}\n\n/**\n * Determine the counts used to define the header checkbox's state\n *\n * @param {*} dt DT API\n * @param {*} headerCheckbox Configuration for what the header checkbox does\n * @returns Counts object\n */\nfunction headerCheckboxState(dt, headerCheckbox) {\n\tvar ctx = dt.settings()[0];\n\tvar selectable = ctx._select.selectable;\n\tvar available = 0;\n\tvar count = headerCheckbox == 'select-page'\n\t\t? dt.rows({page: 'current', selected: true}).count()\n\t\t: dt.rows({selected: true}).count();\n\tvar search = headerCheckbox == 'select-page'\n\t\t? dt.rows({page: 'current', selected: true}).count()\n\t\t: dt.rows({search: 'applied', selected: true}).count();\n\n\tif (! selectable) {\n\t\tavailable = headerCheckbox == 'select-page'\n\t\t\t? dt.rows({page: 'current'}).count()\n\t\t\t: dt.rows({search: 'applied'}).count();\t\n\t}\n\telse {\n\t\t// Need to count how many rows are actually selectable to know if all selectable\n\t\t// rows are selected or not\n\t\tvar indexes = headerCheckbox == 'select-page'\n\t\t\t? dt.rows({page: 'current'}).indexes()\n\t\t\t: dt.rows({search: 'applied'}).indexes();\n\n\t\tfor (var i=0 ; i<indexes.length ; i++) {\n\t\t\t// For speed I use the internal DataTables object.\n\t\t\tvar rowInternal = ctx.aoData[indexes[i]];\n\t\t\tvar result = selectable(rowInternal._aData, rowInternal.nTr, indexes[i]);\n\n\t\t\tif (result) {\n\t\t\t\tavailable++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tavailable: available,\n\t\tcount: count,\n\t\tsearch: search\n\t}\n}\n\n/**\n * Initialisation of a new table. Attach event handlers and callbacks to allow\n * Select to operate correctly.\n *\n * This will occur _after_ the initial DataTables initialisation, although\n * before Ajax data is rendered, if there is ajax data\n *\n * @param  {DataTable.settings} ctx Settings object to operate on\n * @private\n */\nfunction init(ctx) {\n\tvar api = new DataTable.Api(ctx);\n\tctx._select_init = true;\n\n\t// When `additive` then `_select_set` contains a list of the row ids that\n\t// are selected. If `subtractive` then all rows are selected, except those\n\t// in `_select_set`, which is a list of ids.\n\tctx._select_mode = 'additive';\n\tctx._select_set = [];\n\n\t// Row callback so that classes can be added to rows and cells if the item\n\t// was selected before the element was created. This will happen with the\n\t// `deferRender` option enabled.\n\t//\n\t// This method of attaching to `aoRowCreatedCallback` is a hack until\n\t// DataTables has proper events for row manipulation If you are reviewing\n\t// this code to create your own plug-ins, please do not do this!\n\tctx.aoRowCreatedCallback.push(function (row, data, index) {\n\t\t\tvar i, ien;\n\t\t\tvar d = ctx.aoData[index];\n\t\t\tvar id = api.row(index).id();\n\n\t\t\t// Row\n\t\t\tif (\n\t\t\t\td._select_selected ||\n\t\t\t\t(ctx._select_mode === 'additive' && ctx._select_set.includes(id)) ||\n\t\t\t\t(ctx._select_mode === 'subtractive' && ! ctx._select_set.includes(id))\n\t\t\t) {\n\t\t\t\td._select_selected = true;\n\n\t\t\t\t$(row)\n\t\t\t\t\t.addClass(ctx._select.className)\n\t\t\t\t\t.find('input.' + checkboxClass(true)).prop('checked', true);\n\t\t\t}\n\n\t\t\t// Cells and columns - if separated out, we would need to do two\n\t\t\t// loops, so it makes sense to combine them into a single one\n\t\t\tfor (i = 0, ien = ctx.aoColumns.length; i < ien; i++) {\n\t\t\t\tif (\n\t\t\t\t\tctx.aoColumns[i]._select_selected ||\n\t\t\t\t\t(d._selected_cells && d._selected_cells[i])\n\t\t\t\t) {\n\t\t\t\t\t$(d.anCells[i]).addClass(ctx._select.className)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t);\n\n\t_cumulativeEvents(api);\n\n\t// Update the table information element with selected item summary\n\tapi.on('info.dt', function (e, ctx, node) {\n\t\t// Store the info node for updating on select / deselect\n\t\tif (!ctx._select.infoEls.includes(node)) {\n\t\t\tctx._select.infoEls.push(node);\n\t\t}\n\n\t\tinfo(api, node);\n\t});\n\n\tapi.on('select.dtSelect.dt deselect.dtSelect.dt', function () {\n\t\tctx._select.infoEls.forEach(function (el) {\n\t\t\tinfo(api, el);\n\t\t});\n\n\t\tapi.state.save();\n\t});\n\n\t// Clean up and release\n\tapi.on('destroy.dtSelect', function () {\n\t\t// Remove class directly rather than calling deselect - which would trigger events\n\t\t$(api.rows({ selected: true }).nodes()).removeClass(api.settings()[0]._select.className);\n\n\t\t$('input.' + checkboxClass(true), api.table().header()).remove();\n\n\t\tdisableMouseSelection(api);\n\t\tapi.off('.dtSelect');\n\t\t$('body').off('.dtSelect' + _safeId(api.table().node()));\n\t});\n}\n\n/**\n * Add one or more items (rows or columns) to the selection when shift clicking\n * in OS selection style\n *\n * @param  {DataTable.Api} dt   DataTable\n * @param  {string}        type Row or column range selector\n * @param  {object}        idx  Item index to select to\n * @param  {object}        last Item index to select from\n * @private\n */\nfunction rowColumnRange(dt, type, idx, last) {\n\t// Add a range of rows from the last selected row to this one\n\tvar indexes = dt[type + 's']({ search: 'applied' }).indexes();\n\tvar idx1 = indexes.indexOf(last);\n\tvar idx2 = indexes.indexOf(idx);\n\n\tif (!dt[type + 's']({ selected: true }).any() && idx1 === -1) {\n\t\t// select from top to here - slightly odd, but both Windows and Mac OS\n\t\t// do this\n\t\tindexes.splice(indexes.indexOf(idx) + 1, indexes.length);\n\t}\n\telse {\n\t\t// reverse so we can shift click 'up' as well as down\n\t\tif (idx1 > idx2) {\n\t\t\tvar tmp = idx2;\n\t\t\tidx2 = idx1;\n\t\t\tidx1 = tmp;\n\t\t}\n\n\t\tindexes.splice(idx2 + 1, indexes.length);\n\t\tindexes.splice(0, idx1);\n\t}\n\n\tif (!dt[type](idx, { selected: true }).any()) {\n\t\t// Select range\n\t\tdt[type + 's'](indexes).select();\n\t}\n\telse {\n\t\t// Deselect range - need to keep the clicked on row selected\n\t\tindexes.splice(indexes.indexOf(idx), 1);\n\t\tdt[type + 's'](indexes).deselect();\n\t}\n}\n\n/**\n * Clear all selected items\n *\n * @param  {DataTable.settings} ctx Settings object of the host DataTable\n * @param  {boolean} [force=false] Force the de-selection to happen, regardless\n *     of selection style\n * @private\n */\nfunction clear(ctx, force) {\n\tif (force || ctx._select.style === 'single') {\n\t\tvar api = new DataTable.Api(ctx);\n\n\t\tapi.rows({ selected: true }).deselect();\n\t\tapi.columns({ selected: true }).deselect();\n\t\tapi.cells({ selected: true }).deselect();\n\t}\n}\n\n/**\n * Select items based on the current configuration for style and items.\n *\n * @param  {object}             e    Mouse event object\n * @param  {DataTables.Api}     dt   DataTable\n * @param  {DataTable.settings} ctx  Settings object of the host DataTable\n * @param  {string}             type Items to select\n * @param  {int|object}         idx  Index of the item to select\n * @private\n */\nfunction typeSelect(e, dt, ctx, type, idx) {\n\tvar style = dt.select.style();\n\tvar toggleable = dt.select.toggleable();\n\tvar isSelected = dt[type](idx, { selected: true }).any();\n\n\tif (isSelected && !toggleable) {\n\t\treturn;\n\t}\n\n\tif (style === 'os') {\n\t\tif (e.ctrlKey || e.metaKey) {\n\t\t\t// Add or remove from the selection\n\t\t\tdt[type](idx).select(!isSelected);\n\t\t}\n\t\telse if (e.shiftKey) {\n\t\t\tif (type === 'cell') {\n\t\t\t\tcellRange(dt, idx, ctx._select_lastCell || null);\n\t\t\t}\n\t\t\telse {\n\t\t\t\trowColumnRange(\n\t\t\t\t\tdt,\n\t\t\t\t\ttype,\n\t\t\t\t\tidx,\n\t\t\t\t\tctx._select_lastCell ? ctx._select_lastCell[type] : null\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// No cmd or shift click - deselect if selected, or select\n\t\t\t// this row only\n\t\t\tvar selected = dt[type + 's']({ selected: true });\n\n\t\t\tif (isSelected && selected.flatten().length === 1) {\n\t\t\t\tdt[type](idx).deselect();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tselected.deselect();\n\t\t\t\tdt[type](idx).select();\n\t\t\t}\n\t\t}\n\t}\n\telse if (style == 'multi+shift') {\n\t\tif (e.shiftKey) {\n\t\t\tif (type === 'cell') {\n\t\t\t\tcellRange(dt, idx, ctx._select_lastCell || null);\n\t\t\t}\n\t\t\telse {\n\t\t\t\trowColumnRange(\n\t\t\t\t\tdt,\n\t\t\t\t\ttype,\n\t\t\t\t\tidx,\n\t\t\t\t\tctx._select_lastCell ? ctx._select_lastCell[type] : null\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdt[type](idx).select(!isSelected);\n\t\t}\n\t}\n\telse {\n\t\tdt[type](idx).select(!isSelected);\n\t}\n}\n\nfunction _safeId(node) {\n\treturn node.id.replace(/[^a-zA-Z0-9\\-\\_]/g, '-');\n}\n\n/**\n * Set up event handlers for cumulative selection\n *\n * @param {*} api DT API instance\n */\nfunction _cumulativeEvents(api) {\n\t// Add event listeners to add / remove from the _select_set\n\tapi.on('select', function (e, dt, type, indexes) {\n\t\t// Only support for rows at the moment\n\t\tif (type !== 'row') {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = api.settings()[0];\n\n\t\tif (ctx._select_mode === 'additive') {\n\t\t\t// Add row to the selection list if it isn't already there\n\t\t\t_add(api, ctx._select_set, indexes);\n\t\t}\n\t\telse {\n\t\t\t// Subtractive - if a row is selected it should not in the list\n\t\t\t// as in subtractive mode the list gives the rows which are not\n\t\t\t// selected\n\t\t\t_remove(api, ctx._select_set, indexes);\n\t\t}\n\t});\n\n\tapi.on('deselect', function (e, dt, type, indexes) {\n\t\t// Only support for rows at the moment\n\t\tif (type !== 'row') {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = api.settings()[0];\n\n\t\tif (ctx._select_mode === 'additive') {\n\t\t\t// List is of those rows selected, so remove it\n\t\t\t_remove(api, ctx._select_set, indexes);\n\t\t}\n\t\telse {\n\t\t\t// List is of rows which are deselected, so add it!\n\t\t\t_add(api, ctx._select_set, indexes);\n\t\t}\n\t});\n}\n\nfunction _add(api, arr, indexes) {\n\tfor (var i=0 ; i<indexes.length ; i++) {\n\t\tvar id = api.row(indexes[i]).id();\n\n\t\tif (id && id !== 'undefined' && ! arr.includes(id)) {\n\t\t\tarr.push(id);\n\t\t}\n\t}\n}\n\nfunction _remove(api, arr, indexes) {\n\tfor (var i=0 ; i<indexes.length ; i++) {\n\t\tvar id = api.row(indexes[i]).id();\n\t\tvar idx = arr.indexOf(id);\n\n\t\tif (idx !== -1) {\n\t\t\tarr.splice(idx, 1);\n\t\t}\n\t}\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables selectors\n */\n\n// row and column are basically identical just assigned to different properties\n// and checking a different array, so we can dynamically create the functions to\n// reduce the code size\n$.each(\n\t[\n\t\t{ type: 'row', prop: 'aoData' },\n\t\t{ type: 'column', prop: 'aoColumns' }\n\t],\n\tfunction (i, o) {\n\t\tDataTable.ext.selector[o.type].push(function (settings, opts, indexes) {\n\t\t\tvar selected = opts.selected;\n\t\t\tvar data;\n\t\t\tvar out = [];\n\n\t\t\tif (selected !== true && selected !== false) {\n\t\t\t\treturn indexes;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ien = indexes.length; i < ien; i++) {\n\t\t\t\tdata = settings[o.prop][indexes[i]];\n\n\t\t\t\tif (\n\t\t\t\t\tdata && (\n\t\t\t\t\t\t(selected === true && data._select_selected === true) ||\n\t\t\t\t\t\t(selected === false && !data._select_selected)\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tout.push(indexes[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn out;\n\t\t});\n\t}\n);\n\nDataTable.ext.selector.cell.push(function (settings, opts, cells) {\n\tvar selected = opts.selected;\n\tvar rowData;\n\tvar out = [];\n\n\tif (selected === undefined) {\n\t\treturn cells;\n\t}\n\n\tfor (var i = 0, ien = cells.length; i < ien; i++) {\n\t\trowData = settings.aoData[cells[i].row];\n\n\t\tif (\n\t\t\trowData && (\n\t\t\t\t(selected === true &&\n\t\t\t\t\trowData._selected_cells &&\n\t\t\t\t\trowData._selected_cells[cells[i].column] === true) ||\n\t\t\t\t(selected === false &&\n\t\t\t\t\t(!rowData._selected_cells || !rowData._selected_cells[cells[i].column]))\n\t\t\t)\n\t\t) {\n\t\t\tout.push(cells[i]);\n\t\t}\n\t}\n\n\treturn out;\n});\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables API\n *\n * For complete documentation, please refer to the docs/api directory or the\n * DataTables site\n */\n\n// Local variables to improve compression\nvar apiRegister = DataTable.Api.register;\nvar apiRegisterPlural = DataTable.Api.registerPlural;\n\napiRegister('select()', function () {\n\treturn this.iterator('table', function (ctx) {\n\t\tDataTable.select.init(new DataTable.Api(ctx));\n\t});\n});\n\napiRegister('select.blurable()', function (flag) {\n\tif (flag === undefined) {\n\t\treturn this.context[0]._select.blurable;\n\t}\n\n\treturn this.iterator('table', function (ctx) {\n\t\tctx._select.blurable = flag;\n\t});\n});\n\napiRegister('select.toggleable()', function (flag) {\n\tif (flag === undefined) {\n\t\treturn this.context[0]._select.toggleable;\n\t}\n\n\treturn this.iterator('table', function (ctx) {\n\t\tctx._select.toggleable = flag;\n\t});\n});\n\napiRegister('select.info()', function (flag) {\n\tif (flag === undefined) {\n\t\treturn this.context[0]._select.info;\n\t}\n\n\treturn this.iterator('table', function (ctx) {\n\t\tctx._select.info = flag;\n\t});\n});\n\napiRegister('select.items()', function (items) {\n\tif (items === undefined) {\n\t\treturn this.context[0]._select.items;\n\t}\n\n\treturn this.iterator('table', function (ctx) {\n\t\tctx._select.items = items;\n\n\t\teventTrigger(new DataTable.Api(ctx), 'selectItems', [items]);\n\t});\n});\n\napiRegister('select.keys()', function (flag) {\n\tif (flag === undefined) {\n\t\treturn this.context[0]._select.keys;\n\t}\n\n\treturn this.iterator('table', function (ctx) {\n\t\tif (!ctx._select) {\n\t\t\tDataTable.select.init(new DataTable.Api(ctx));\n\t\t}\n\n\t\tctx._select.keys = flag;\n\n\t\tkeysSet(new DataTable.Api(ctx));\n\t});\n});\n\n// Takes effect from the _next_ selection. None disables future selection, but\n// does not clear the current selection. Use the `deselect` methods for that\napiRegister('select.style()', function (style) {\n\tif (style === undefined) {\n\t\treturn this.context[0]._select.style;\n\t}\n\n\treturn this.iterator('table', function (ctx) {\n\t\tif (!ctx._select) {\n\t\t\tDataTable.select.init(new DataTable.Api(ctx));\n\t\t}\n\n\t\tif (!ctx._select_init) {\n\t\t\tinit(ctx);\n\t\t}\n\n\t\tctx._select.style = style;\n\n\t\t// Add / remove mouse event handlers. They aren't required when only\n\t\t// API selection is available\n\t\tvar dt = new DataTable.Api(ctx);\n\n\t\tif (style !== 'api') {\n\t\t\tdt.ready(function () {\n\t\t\t\tdisableMouseSelection(dt);\n\t\t\t\tenableMouseSelection(dt);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tdisableMouseSelection(dt);\n\t\t}\n\n\t\teventTrigger(new DataTable.Api(ctx), 'selectStyle', [style]);\n\t});\n});\n\napiRegister('select.selector()', function (selector) {\n\tif (selector === undefined) {\n\t\treturn this.context[0]._select.selector;\n\t}\n\n\treturn this.iterator('table', function (ctx) {\n\t\tvar dt = new DataTable.Api(ctx);\n\t\tvar style = ctx._select.style;\n\n\t\tdisableMouseSelection(dt);\n\n\t\tctx._select.selector = selector;\n\n\t\tif (style && style !== 'api') {\n\t\t\tdt.ready(function () {\n\t\t\t\tdisableMouseSelection(dt);\n\t\t\t\tenableMouseSelection(dt);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tdisableMouseSelection(dt);\n\t\t}\n\t});\n});\n\napiRegister('select.selectable()', function (set) {\n\tlet ctx = this.context[0];\n\n\tif (set) {\n\t\tctx._select.selectable = set;\n\t\treturn this;\n\t}\n\n\treturn ctx._select.selectable;\n});\n\napiRegister('select.last()', function (set) {\n\tlet ctx = this.context[0];\n\n\tif (set) {\n\t\tctx._select_lastCell = set;\n\t\treturn this;\n\t}\n\n\treturn ctx._select_lastCell;\n});\n\napiRegister('select.cumulative()', function (mode) {\n\tif (mode) {\n\t\treturn this.iterator('table', function (ctx) {\n\t\t\tif (ctx._select_mode === mode) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar dt = new DataTable.Api(ctx);\n\n\t\t\t// Convert from the current mode, to the new\n\t\t\tif (mode === 'subtractive') {\n\t\t\t\t// For subtractive mode we track the row ids which are not selected\n\t\t\t\tvar unselected = dt.rows({selected: false}).ids().toArray();\n\n\t\t\t\tctx._select_mode = mode;\n\t\t\t\tctx._select_set.length = 0;\n\t\t\t\tctx._select_set.push.apply(ctx._select_set, unselected);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Switching to additive, so selected rows are to be used\n\t\t\t\tvar selected = dt.rows({selected: true}).ids().toArray();\n\n\t\t\t\tctx._select_mode = mode;\n\t\t\t\tctx._select_set.length = 0;\n\t\t\t\tctx._select_set.push.apply(ctx._select_set, selected);\n\t\t\t}\n\t\t}).draw(false);\n\t}\n\n\tlet ctx = this.context[0];\n\n\tif (ctx && ctx._select_set) {\n\t\treturn {\n\t\t\tmode: ctx._select_mode,\n\t\t\trows: ctx._select_set\n\t\t};\n\t}\n\n\treturn null;\n});\n\napiRegisterPlural('rows().select()', 'row().select()', function (select) {\n\tvar api = this;\n\tvar selectedIndexes = [];\n\n\tif (select === false) {\n\t\treturn this.deselect();\n\t}\n\n\tthis.iterator('row', function (ctx, idx) {\n\t\tclear(ctx);\n\n\t\t// There is a good amount of knowledge of DataTables internals in\n\t\t// this function. It _could_ be done without that, but it would hurt\n\t\t// performance (or DT would need new APIs for this work)\n\t\tvar dtData = ctx.aoData[idx];\n\t\tvar dtColumns = ctx.aoColumns;\n\n\t\tif (ctx._select.selectable) {\n\t\t\tvar result = ctx._select.selectable(dtData._aData, dtData.nTr, idx);\n\n\t\t\tif (result === false) {\n\t\t\t\t// Not selectable - do nothing\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t$(dtData.nTr).addClass(ctx._select.className);\n\t\tdtData._select_selected = true;\n\n\t\tselectedIndexes.push(idx);\n\n\t\tfor (var i=0 ; i<dtColumns.length ; i++) {\n\t\t\tvar col = dtColumns[i];\n\n\t\t\t// Regenerate the column type if not present\n\t\t\tif (col.sType === null) {\n\t\t\t\tapi.columns().types()\n\t\t\t}\n\t\t\t\n\t\t\tif (isCheckboxColumn(col)) {\n\t\t\t\tvar cells = dtData.anCells;\n\n\t\t\t\t// Make sure the checkbox shows the right state\n\t\t\t\tif (cells && cells[i]) {\n\t\t\t\t\t$('input.' + checkboxClass(true), cells[i]).prop('checked', true);\n\t\t\t\t}\n\n\t\t\t\t// Invalidate the sort data for this column, if not already done\n\t\t\t\tif (dtData._aSortData !== null) {\n\t\t\t\t\tdtData._aSortData[i] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tthis.iterator('table', function (ct) {\n\t\teventTrigger(api, 'select', ['row', selectedIndexes], true);\n\t});\n\n\treturn this;\n});\n\napiRegister('row().selected()', function () {\n\tvar ctx = this.context[0];\n\n\tif (ctx && this.length && ctx.aoData[this[0]] && ctx.aoData[this[0]]._select_selected) {\n\t\treturn true;\n\t}\n\n\treturn false;\n});\n\napiRegister('row().focus()', function () {\n\tvar ctx = this.context[0];\n\n\tif (ctx && this.length && ctx.aoData[this[0]] && ctx.aoData[this[0]].nTr) {\n\t\tctx.aoData[this[0]].nTr.focus();\n\t}\n});\n\napiRegister('row().blur()', function () {\n\tvar ctx = this.context[0];\n\n\tif (ctx && this.length && ctx.aoData[this[0]] && ctx.aoData[this[0]].nTr) {\n\t\tctx.aoData[this[0]].nTr.blur();\n\t}\n});\n\napiRegisterPlural('columns().select()', 'column().select()', function (select) {\n\tvar api = this;\n\n\tif (select === false) {\n\t\treturn this.deselect();\n\t}\n\n\tthis.iterator('column', function (ctx, idx) {\n\t\tclear(ctx);\n\n\t\tctx.aoColumns[idx]._select_selected = true;\n\n\t\tvar column = new DataTable.Api(ctx).column(idx);\n\n\t\t$(column.header()).addClass(ctx._select.className);\n\t\t$(column.footer()).addClass(ctx._select.className);\n\n\t\tcolumn.nodes().to$().addClass(ctx._select.className);\n\t});\n\n\tthis.iterator('table', function (ctx, i) {\n\t\teventTrigger(api, 'select', ['column', api[i]], true);\n\t});\n\n\treturn this;\n});\n\napiRegister('column().selected()', function () {\n\tvar ctx = this.context[0];\n\n\tif (ctx && this.length && ctx.aoColumns[this[0]] && ctx.aoColumns[this[0]]._select_selected) {\n\t\treturn true;\n\t}\n\n\treturn false;\n});\n\napiRegisterPlural('cells().select()', 'cell().select()', function (select) {\n\tvar api = this;\n\n\tif (select === false) {\n\t\treturn this.deselect();\n\t}\n\n\tthis.iterator('cell', function (ctx, rowIdx, colIdx) {\n\t\tclear(ctx);\n\n\t\tvar data = ctx.aoData[rowIdx];\n\n\t\tif (data._selected_cells === undefined) {\n\t\t\tdata._selected_cells = [];\n\t\t}\n\n\t\tdata._selected_cells[colIdx] = true;\n\n\t\tif (data.anCells) {\n\t\t\t$(data.anCells[colIdx]).addClass(ctx._select.className);\n\t\t}\n\t});\n\n\tthis.iterator('table', function (ctx, i) {\n\t\teventTrigger(api, 'select', ['cell', api.cells(api[i]).indexes().toArray()], true);\n\t});\n\n\treturn this;\n});\n\napiRegister('cell().selected()', function () {\n\tvar ctx = this.context[0];\n\n\tif (ctx && this.length) {\n\t\tvar row = ctx.aoData[this[0][0].row];\n\n\t\tif (row && row._selected_cells && row._selected_cells[this[0][0].column]) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n});\n\napiRegisterPlural('rows().deselect()', 'row().deselect()', function () {\n\tvar api = this;\n\n\tthis.iterator('row', function (ctx, idx) {\n\t\t// Like the select action, this has a lot of knowledge about DT internally\n\t\tvar dtData = ctx.aoData[idx];\n\t\tvar dtColumns = ctx.aoColumns;\n\n\t\t$(dtData.nTr).removeClass(ctx._select.className);\n\t\tdtData._select_selected = false;\n\t\tctx._select_lastCell = null;\n\n\t\tfor (var i=0 ; i<dtColumns.length ; i++) {\n\t\t\tvar col = dtColumns[i];\n\n\t\t\t// Regenerate the column type if not present\n\t\t\tif (col.sType === null) {\n\t\t\t\tapi.columns().types()\n\t\t\t}\n\t\t\t\n\t\t\tif (isCheckboxColumn(col)) {\n\t\t\t\tvar cells = dtData.anCells;\n\n\t\t\t\t// Make sure the checkbox shows the right state\n\t\t\t\tif (cells && cells[i]) {\n\t\t\t\t\t$('input.' + checkboxClass(true), dtData.anCells[i]).prop('checked', false);\n\t\t\t\t}\n\n\t\t\t\t// Invalidate the sort data for this column, if not already done\n\t\t\t\tif (dtData._aSortData !== null) {\n\t\t\t\t\tdtData._aSortData[i] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tthis.iterator('table', function (ctx, i) {\n\t\teventTrigger(api, 'deselect', ['row', api[i]], true);\n\t});\n\n\treturn this;\n});\n\napiRegisterPlural('columns().deselect()', 'column().deselect()', function () {\n\tvar api = this;\n\n\tthis.iterator('column', function (ctx, idx) {\n\t\tctx.aoColumns[idx]._select_selected = false;\n\n\t\tvar api = new DataTable.Api(ctx);\n\t\tvar column = api.column(idx);\n\n\t\t$(column.header()).removeClass(ctx._select.className);\n\t\t$(column.footer()).removeClass(ctx._select.className);\n\n\t\t// Need to loop over each cell, rather than just using\n\t\t// `column().nodes()` as cells which are individually selected should\n\t\t// not have the `selected` class removed from them\n\t\tapi.cells(null, idx)\n\t\t\t.indexes()\n\t\t\t.each(function (cellIdx) {\n\t\t\t\tvar data = ctx.aoData[cellIdx.row];\n\t\t\t\tvar cellSelected = data._selected_cells;\n\n\t\t\t\tif (data.anCells && (!cellSelected || !cellSelected[cellIdx.column])) {\n\t\t\t\t\t$(data.anCells[cellIdx.column]).removeClass(ctx._select.className);\n\t\t\t\t}\n\t\t\t});\n\t});\n\n\tthis.iterator('table', function (ctx, i) {\n\t\teventTrigger(api, 'deselect', ['column', api[i]], true);\n\t});\n\n\treturn this;\n});\n\napiRegisterPlural('cells().deselect()', 'cell().deselect()', function () {\n\tvar api = this;\n\n\tthis.iterator('cell', function (ctx, rowIdx, colIdx) {\n\t\tvar data = ctx.aoData[rowIdx];\n\n\t\tif (data._selected_cells !== undefined) {\n\t\t\tdata._selected_cells[colIdx] = false;\n\t\t}\n\n\t\t// Remove class only if the cells exist, and the cell is not column\n\t\t// selected, in which case the class should remain (since it is selected\n\t\t// in the column)\n\t\tif (data.anCells && !ctx.aoColumns[colIdx]._select_selected) {\n\t\t\t$(data.anCells[colIdx]).removeClass(ctx._select.className);\n\t\t}\n\t});\n\n\tthis.iterator('table', function (ctx, i) {\n\t\teventTrigger(api, 'deselect', ['cell', api[i]], true);\n\t});\n\n\treturn this;\n});\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Buttons\n */\nfunction i18n(label, def) {\n\treturn function (dt) {\n\t\treturn dt.i18n('buttons.' + label, def);\n\t};\n}\n\n// Common events with suitable namespaces\nfunction namespacedEvents(config) {\n\tvar unique = config._eventNamespace;\n\n\treturn 'draw.dt.DT' + unique + ' select.dt.DT' + unique + ' deselect.dt.DT' + unique;\n}\n\nfunction enabled(dt, config) {\n\tif (config.limitTo.indexOf('rows') !== -1 && dt.rows({ selected: true }).any()) {\n\t\treturn true;\n\t}\n\n\tif (config.limitTo.indexOf('columns') !== -1 && dt.columns({ selected: true }).any()) {\n\t\treturn true;\n\t}\n\n\tif (config.limitTo.indexOf('cells') !== -1 && dt.cells({ selected: true }).any()) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nvar _buttonNamespace = 0;\n\n$.extend(DataTable.ext.buttons, {\n\tselected: {\n\t\ttext: i18n('selected', 'Selected'),\n\t\tclassName: 'buttons-selected',\n\t\tlimitTo: ['rows', 'columns', 'cells'],\n\t\tinit: function (dt, node, config) {\n\t\t\tvar that = this;\n\t\t\tconfig._eventNamespace = '.select' + _buttonNamespace++;\n\n\t\t\t// .DT namespace listeners are removed by DataTables automatically\n\t\t\t// on table destroy\n\t\t\tdt.on(namespacedEvents(config), function () {\n\t\t\t\tthat.enable(enabled(dt, config));\n\t\t\t});\n\n\t\t\tthis.disable();\n\t\t},\n\t\tdestroy: function (dt, node, config) {\n\t\t\tdt.off(config._eventNamespace);\n\t\t}\n\t},\n\tselectedSingle: {\n\t\ttext: i18n('selectedSingle', 'Selected single'),\n\t\tclassName: 'buttons-selected-single',\n\t\tinit: function (dt, node, config) {\n\t\t\tvar that = this;\n\t\t\tconfig._eventNamespace = '.select' + _buttonNamespace++;\n\n\t\t\tdt.on(namespacedEvents(config), function () {\n\t\t\t\tvar count =\n\t\t\t\t\tdt.rows({ selected: true }).flatten().length +\n\t\t\t\t\tdt.columns({ selected: true }).flatten().length +\n\t\t\t\t\tdt.cells({ selected: true }).flatten().length;\n\n\t\t\t\tthat.enable(count === 1);\n\t\t\t});\n\n\t\t\tthis.disable();\n\t\t},\n\t\tdestroy: function (dt, node, config) {\n\t\t\tdt.off(config._eventNamespace);\n\t\t}\n\t},\n\tselectAll: {\n\t\ttext: i18n('selectAll', 'Select all'),\n\t\tclassName: 'buttons-select-all',\n\t\taction: function (e, dt, node, config) {\n\t\t\tvar items = this.select.items();\n\t\t\tvar mod = config.selectorModifier;\n\t\t\t\n\t\t\tif (mod) {\n\t\t\t\tif (typeof mod === 'function') {\n\t\t\t\t\tmod = mod.call(dt, e, dt, node, config);\n\t\t\t\t}\n\n\t\t\t\tthis[items + 's'](mod).select();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis[items + 's']().select();\n\t\t\t}\n\t\t}\n\t\t// selectorModifier can be specified\n\t},\n\tselectNone: {\n\t\ttext: i18n('selectNone', 'Deselect all'),\n\t\tclassName: 'buttons-select-none',\n\t\taction: function () {\n\t\t\tclear(this.settings()[0], true);\n\t\t},\n\t\tinit: function (dt, node, config) {\n\t\t\tvar that = this;\n\t\t\tconfig._eventNamespace = '.select' + _buttonNamespace++;\n\n\t\t\tdt.on(namespacedEvents(config), function () {\n\t\t\t\tvar count =\n\t\t\t\t\tdt.rows({ selected: true }).flatten().length +\n\t\t\t\t\tdt.columns({ selected: true }).flatten().length +\n\t\t\t\t\tdt.cells({ selected: true }).flatten().length;\n\n\t\t\t\tthat.enable(count > 0);\n\t\t\t});\n\n\t\t\tthis.disable();\n\t\t},\n\t\tdestroy: function (dt, node, config) {\n\t\t\tdt.off(config._eventNamespace);\n\t\t}\n\t},\n\tshowSelected: {\n\t\ttext: i18n('showSelected', 'Show only selected'),\n\t\tclassName: 'buttons-show-selected',\n\t\taction: function (e, dt) {\n\t\t\tif (dt.search.fixed('dt-select')) {\n\t\t\t\t// Remove existing function\n\t\t\t\tdt.search.fixed('dt-select', null);\n\n\t\t\t\tthis.active(false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Use a fixed filtering function to match on selected rows\n\t\t\t\t// This needs to reference the internal aoData since that is\n\t\t\t\t// where Select stores its reference for the selected state\n\t\t\t\tvar dataSrc = dt.settings()[0].aoData;\n\n\t\t\t\tdt.search.fixed('dt-select', function (text, data, idx) {\n\t\t\t\t\t// _select_selected is set by Select on the data object for the row\n\t\t\t\t\treturn dataSrc[idx]._select_selected;\n\t\t\t\t});\n\n\t\t\t\tthis.active(true);\n\t\t\t}\n\n\t\t\tdt.draw();\n\t\t}\n\t}\n});\n\n$.each(['Row', 'Column', 'Cell'], function (i, item) {\n\tvar lc = item.toLowerCase();\n\n\tDataTable.ext.buttons['select' + item + 's'] = {\n\t\ttext: i18n('select' + item + 's', 'Select ' + lc + 's'),\n\t\tclassName: 'buttons-select-' + lc + 's',\n\t\taction: function () {\n\t\t\tthis.select.items(lc);\n\t\t},\n\t\tinit: function (dt) {\n\t\t\tvar that = this;\n\n\t\t\tthis.active(dt.select.items() === lc);\n\n\t\t\tdt.on('selectItems.dt.DT', function (e, ctx, items) {\n\t\t\t\tthat.active(items === lc);\n\t\t\t});\n\t\t}\n\t};\n});\n\n// Note that DataTables 2.1 has more robust type detection, but we retain\n// backwards compatibility with 2.0 for the moment.\nDataTable.type('select-checkbox', {\n\tclassName: 'dt-select',\n\tdetect: DataTable.versionCheck('2.1')\n\t\t? {\n\t\t\toneOf: function () {\n\t\t\t\treturn false; // no op\n\t\t\t},\n\t\t\tallOf: function () {\n\t\t\t\treturn false; // no op\n\t\t\t},\n\t\t\tinit: function (settings, col, idx) {\n\t\t\t\treturn isCheckboxColumn(col);\n\t\t\t}\n\t\t}\n\t\t: function (data) {\n\t\t\t// Rendering function will tell us if it is a checkbox type\n\t\t\treturn data === 'select-checkbox' ? data : false;\n\t\t},\n\torder: {\n\t\tpre: function (d) {\n\t\t\treturn d === 'X' ? -1 : 0;\n\t\t}\n\t}\n});\n\n$.extend(true, DataTable.defaults.oLanguage, {\n\tselect: {\n\t\taria: {\n\t\t\trowCheckbox: 'Select row'\n\t\t}\n\t}\n});\n\nDataTable.render.select = function (valueProp, nameProp) {\n\tvar valueFn = valueProp ? DataTable.util.get(valueProp) : null;\n\tvar nameFn = nameProp ? DataTable.util.get(nameProp) : null;\n\n\tvar fn = function (data, type, row, meta) {\n\t\tvar dtRow = meta.settings.aoData[meta.row];\n\t\tvar selected = dtRow._select_selected;\n\t\tvar ariaLabel = meta.settings.oLanguage.select.aria.rowCheckbox;\n\t\tvar selectable = meta.settings._select.selectable;\n\n\t\tif (type === 'display') {\n\t\t\t// Check if the row is selectable before showing the checkbox\n\t\t\tif (selectable) {\n\t\t\t\tvar result = selectable(row, dtRow.nTr, meta.row);\n\t\n\t\t\t\tif (result === false) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $('<input>')\n\t\t\t\t.attr({\n\t\t\t\t\t'aria-label': ariaLabel,\n\t\t\t\t\tclass: checkboxClass(),\n\t\t\t\t\tname: nameFn ? nameFn(row) : null,\n\t\t\t\t\ttype: 'checkbox',\n\t\t\t\t\tvalue: valueFn ? valueFn(row) : null,\n\t\t\t\t\tchecked: selected\n\t\t\t\t})\n\t\t\t\t.on('input', function (e) {\n\t\t\t\t\t// Let Select 100% control the state of the checkbox\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t// And make sure this checkbox matches it's row as it is possible\n\t\t\t\t\t// to check out of sync if this was clicked on to deselect a range\n\t\t\t\t\t// but remains selected itself\n\t\t\t\t\tthis.checked = $(this).closest('tr').hasClass('selected');\n\t\t\t\t})[0];\n\t\t}\n\t\telse if (type === 'type') {\n\t\t\treturn 'select-checkbox';\n\t\t}\n\t\telse if (type === 'filter') {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn selected ? 'X' : '';\n\t}\n\n\t// Workaround so uglify doesn't strip the function name. It is used\n\t// for the column type detection.\n\tfn._name = 'selectCheckbox';\n\n\treturn fn;\n}\n\n// Legacy checkbox ordering\nDataTable.ext.order['select-checkbox'] = function (settings, col) {\n\treturn this.api()\n\t\t.column(col, { order: 'index' })\n\t\t.nodes()\n\t\t.map(function (td) {\n\t\t\tif (settings._select.items === 'row') {\n\t\t\t\treturn $(td).parent().hasClass(settings._select.className).toString();\n\t\t\t}\n\t\t\telse if (settings._select.items === 'cell') {\n\t\t\t\treturn $(td).hasClass(settings._select.className).toString();\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n};\n\n$.fn.DataTable.select = DataTable.select;\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Initialisation\n */\n\n// DataTables creation - we need this to run _before_ data is read in, but\n// for backwards compat. we also run again on preInit. If it happens twice\n// it will simply do nothing the second time around.\n$(document).on('i18n.dt.dtSelect preInit.dt.dtSelect', function (e, ctx) {\n\tif (e.namespace !== 'dt') {\n\t\treturn;\n\t}\n\n\tDataTable.select.init(new DataTable.Api(ctx));\n});\n\n\nreturn DataTable;\n}));\n"],"names":["factory","define","amd","$","window","document","exports","jq","require","cjsRequires","root","fn","dataTable","module","jQuery","DataTable","cellRange","dt","idx","last","indexes","columnIndexes","rowIndexes","selectColumns","start","end","tmp","record","columns","filter","i","selectRows","rows","search","indexOf","cells","selected","any","column","row","flatten","deselect","select","checkboxClass","selector","name","classes","checkbox","replace","disableMouseSelection","settings","_select","table","container","off","_safeId","node","enableMouseSelection","matchSelection","ctx","on","e","shiftKey","metaKey","ctrlKey","css","one","getSelection","items","selection","anchorNode","closest","target","cell","event","Event","eventTrigger","isDefaultPrevented","cellIndex","index","typeSelect","_select_lastCell","blurable","parents","length","clear","api","type","args","unshift","trigger","isCheckboxColumn","col","mRender","_name","info","style","rowSetLength","_select_set","count","_select_mode","page","recordsDisplay","add","el","num","append","i18n","_","output","existing","children","remove","text","keysPageDown","pages","focus","draw","keysPageUp","init","Api","_select_init","aoRowCreatedCallback","push","data","ien","d","aoData","id","_select_selected","includes","addClass","className","find","prop","aoColumns","_selected_cells","anCells","_add","_remove","_cumulativeEvents","infoEls","forEach","state","save","nodes","removeClass","header","rowColumnRange","idx1","idx2","splice","force","toggleable","isSelected","arr","version","versionCheck","savedSelected","loaded","selectAndSave","undefined","ids","toArray","map","coords","oInit","defaults","opts","selectable","headerCheckbox","setStyle","keys","isPlainObject","hasClass","ready","dtInternalColumns","iterator","s","input","attr","class","appendTo","this","checked","stopPropagation","pass","nums","available","rowInternal","_aData","nTr","headerCheckboxState","initCheckboxHeader","each","o","ext","out","rowData","apiRegister","register","apiRegisterPlural","registerPlural","label","def","namespacedEvents","config","unique","_eventNamespace","flag","context","namespace","sTableId","key","keyCode","active","activeElement","preventDefault","shift","removeAttr","keysSet","set","mode","unselected","apply","selectedIndexes","dtData","dtColumns","sType","types","_aSortData","ct","blur","footer","to$","rowIdx","colIdx","cellIdx","cellSelected","_buttonNamespace","extend","buttons","limitTo","that","enable","enabled","disable","destroy","selectedSingle","selectAll","action","mod","selectorModifier","call","selectNone","showSelected","fixed","dataSrc","item","lc","toLowerCase","detect","oneOf","allOf","order","pre","oLanguage","aria","rowCheckbox","render","valueProp","nameProp","valueFn","util","get","nameFn","meta","dtRow","ariaLabel","value","td","parent","toString"],"mappings":"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"}