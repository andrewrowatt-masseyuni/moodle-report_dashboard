{"version":3,"file":"dataTables.min.js","sources":["../src/dataTables.js"],"sourcesContent":["/*! DataTables 2.2.2\n * Â© SpryMedia Ltd - datatables.net/license\n */\n\n(function( factory ) {\n\t\"use strict\";\n\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\t// jQuery's factory checks for a global window - if it isn't present then it\n\t\t// returns a factory function that expects the window object\n\t\tvar jq = require('jquery');\n\n\t\tif (typeof window === 'undefined') {\n\t\t\tmodule.exports = function (root, $) {\n\t\t\t\tif ( ! root ) {\n\t\t\t\t\t// CommonJS environments without a window global must pass a\n\t\t\t\t\t// root. This will give an error otherwise\n\t\t\t\t\troot = window;\n\t\t\t\t}\n\n\t\t\t\tif ( ! $ ) {\n\t\t\t\t\t$ = jq( root );\n\t\t\t\t}\n\n\t\t\t\treturn factory( $, root, root.document );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tmodule.exports = factory( jq, window, window.document );\n\t\t}\n\t}\n\telse {\n\t\t// Browser\n\t\twindow.DataTable = factory( jQuery, window, document );\n\t}\n}(function( $, window, document ) {\n\t\"use strict\";\n\n\t\n\tvar DataTable = function ( selector, options )\n\t{\n\t\t// Check if called with a window or jQuery object for DOM less applications\n\t\t// This is for backwards compatibility\n\t\tif (DataTable.factory(selector, options)) {\n\t\t\treturn DataTable;\n\t\t}\n\t\n\t\t// When creating with `new`, create a new DataTable, returning the API instance\n\t\tif (this instanceof DataTable) {\n\t\t\treturn $(selector).DataTable(options);\n\t\t}\n\t\telse {\n\t\t\t// Argument switching\n\t\t\toptions = selector;\n\t\t}\n\t\n\t\tvar _that = this;\n\t\tvar emptyInit = options === undefined;\n\t\tvar len = this.length;\n\t\n\t\tif ( emptyInit ) {\n\t\t\toptions = {};\n\t\t}\n\t\n\t\t// Method to get DT API instance from jQuery object\n\t\tthis.api = function ()\n\t\t{\n\t\t\treturn new _Api( this );\n\t\t};\n\t\n\t\tthis.each(function() {\n\t\t\t// For each initialisation we want to give it a clean initialisation\n\t\t\t// object that can be bashed around\n\t\t\tvar o = {};\n\t\t\tvar oInit = len > 1 ? // optimisation for single table case\n\t\t\t\t_fnExtend( o, options, true ) :\n\t\t\t\toptions;\n\t\n\t\t\t\n\t\t\tvar i=0, iLen;\n\t\t\tvar sId = this.getAttribute( 'id' );\n\t\t\tvar defaults = DataTable.defaults;\n\t\t\tvar $this = $(this);\n\t\t\t\n\t\t\t\n\t\t\t/* Sanity check */\n\t\t\tif ( this.nodeName.toLowerCase() != 'table' )\n\t\t\t{\n\t\t\t\t_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t$(this).trigger( 'options.dt', oInit );\n\t\t\t\n\t\t\t/* Backwards compatibility for the defaults */\n\t\t\t_fnCompatOpts( defaults );\n\t\t\t_fnCompatCols( defaults.column );\n\t\t\t\n\t\t\t/* Convert the camel-case defaults to Hungarian */\n\t\t\t_fnCamelToHungarian( defaults, defaults, true );\n\t\t\t_fnCamelToHungarian( defaults.column, defaults.column, true );\n\t\t\t\n\t\t\t/* Setting up the initialisation object */\n\t\t\t_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ), true );\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t/* Check to see if we are re-initialising a table */\n\t\t\tvar allSettings = DataTable.settings;\n\t\t\tfor ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tvar s = allSettings[i];\n\t\t\t\n\t\t\t\t/* Base check on table node */\n\t\t\t\tif (\n\t\t\t\t\ts.nTable == this ||\n\t\t\t\t\t(s.nTHead && s.nTHead.parentNode == this) ||\n\t\t\t\t\t(s.nTFoot && s.nTFoot.parentNode == this)\n\t\t\t\t) {\n\t\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n\t\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\t\t\t\n\t\t\t\t\tif ( emptyInit || bRetrieve )\n\t\t\t\t\t{\n\t\t\t\t\t\treturn s.oInstance;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( bDestroy )\n\t\t\t\t\t{\n\t\t\t\t\t\tnew DataTable.Api(s).destroy();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* If the element we are initialising has the same ID as a table which was previously\n\t\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\n\t\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\n\t\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n\t\t\t\t */\n\t\t\t\tif ( s.sTableId == this.id )\n\t\t\t\t{\n\t\t\t\t\tallSettings.splice( i, 1 );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Ensure the table has an ID - required for accessibility */\n\t\t\tif ( sId === null || sId === \"\" )\n\t\t\t{\n\t\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._unique++);\n\t\t\t\tthis.id = sId;\n\t\t\t}\n\t\t\t\n\t\t\t/* Create the settings object for this table and set some of the default parameters */\n\t\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\n\t\t\t\t\"sDestroyWidth\": $this[0].style.width,\n\t\t\t\t\"sInstance\":     sId,\n\t\t\t\t\"sTableId\":      sId,\n\t\t\t\tcolgroup: $('<colgroup>').prependTo(this),\n\t\t\t\tfastData: function (row, column, type) {\n\t\t\t\t\treturn _fnGetCellData(oSettings, row, column, type);\n\t\t\t\t}\n\t\t\t} );\n\t\t\toSettings.nTable = this;\n\t\t\toSettings.oInit  = oInit;\n\t\t\t\n\t\t\tallSettings.push( oSettings );\n\t\t\t\n\t\t\t// Make a single API instance available for internal handling\n\t\t\toSettings.api = new _Api( oSettings );\n\t\t\t\n\t\t\t// Need to add the instance after the instance after the settings object has been added\n\t\t\t// to the settings array, so we can self reference the table instance if more than one\n\t\t\toSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\n\t\t\t\n\t\t\t// Backwards compatibility, before we apply all the defaults\n\t\t\t_fnCompatOpts( oInit );\n\t\t\t\n\t\t\t// If the length menu is given, but the init display length is not, use the length menu\n\t\t\tif ( oInit.aLengthMenu && ! oInit.iDisplayLength )\n\t\t\t{\n\t\t\t\toInit.iDisplayLength = Array.isArray(oInit.aLengthMenu[0])\n\t\t\t\t\t? oInit.aLengthMenu[0][0]\n\t\t\t\t\t: $.isPlainObject( oInit.aLengthMenu[0] )\n\t\t\t\t\t\t? oInit.aLengthMenu[0].value\n\t\t\t\t\t\t: oInit.aLengthMenu[0];\n\t\t\t}\n\t\t\t\n\t\t\t// Apply the defaults and init options to make a single init object will all\n\t\t\t// options defined from defaults and instance options.\n\t\t\toInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\n\t\t\t\n\t\t\t\n\t\t\t// Map the initialisation options onto the settings object\n\t\t\t_fnMap( oSettings.oFeatures, oInit, [\n\t\t\t\t\"bPaginate\",\n\t\t\t\t\"bLengthChange\",\n\t\t\t\t\"bFilter\",\n\t\t\t\t\"bSort\",\n\t\t\t\t\"bSortMulti\",\n\t\t\t\t\"bInfo\",\n\t\t\t\t\"bProcessing\",\n\t\t\t\t\"bAutoWidth\",\n\t\t\t\t\"bSortClasses\",\n\t\t\t\t\"bServerSide\",\n\t\t\t\t\"bDeferRender\"\n\t\t\t] );\n\t\t\t_fnMap( oSettings, oInit, [\n\t\t\t\t\"ajax\",\n\t\t\t\t\"fnFormatNumber\",\n\t\t\t\t\"sServerMethod\",\n\t\t\t\t\"aaSorting\",\n\t\t\t\t\"aaSortingFixed\",\n\t\t\t\t\"aLengthMenu\",\n\t\t\t\t\"sPaginationType\",\n\t\t\t\t\"iStateDuration\",\n\t\t\t\t\"bSortCellsTop\",\n\t\t\t\t\"iTabIndex\",\n\t\t\t\t\"sDom\",\n\t\t\t\t\"fnStateLoadCallback\",\n\t\t\t\t\"fnStateSaveCallback\",\n\t\t\t\t\"renderer\",\n\t\t\t\t\"searchDelay\",\n\t\t\t\t\"rowId\",\n\t\t\t\t\"caption\",\n\t\t\t\t\"layout\",\n\t\t\t\t\"orderDescReverse\",\n\t\t\t\t\"typeDetect\",\n\t\t\t\t[ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\n\t\t\t\t[ \"oSearch\", \"oPreviousSearch\" ],\n\t\t\t\t[ \"aoSearchCols\", \"aoPreSearchCols\" ],\n\t\t\t\t[ \"iDisplayLength\", \"_iDisplayLength\" ]\n\t\t\t] );\n\t\t\t_fnMap( oSettings.oScroll, oInit, [\n\t\t\t\t[ \"sScrollX\", \"sX\" ],\n\t\t\t\t[ \"sScrollXInner\", \"sXInner\" ],\n\t\t\t\t[ \"sScrollY\", \"sY\" ],\n\t\t\t\t[ \"bScrollCollapse\", \"bCollapse\" ]\n\t\t\t] );\n\t\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\n\t\t\t\n\t\t\t/* Callback functions which are array driven */\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded );\n\t\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback );\n\t\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow );\n\t\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback );\n\t\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback );\n\t\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete );\n\t\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback );\n\t\t\t\n\t\t\toSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\n\t\t\t\n\t\t\t/* Browser support detection */\n\t\t\t_fnBrowserDetect( oSettings );\n\t\t\t\n\t\t\tvar oClasses = oSettings.oClasses;\n\t\t\t\n\t\t\t$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\n\t\t\t$this.addClass( oClasses.table );\n\t\t\t\n\t\t\tif (! oSettings.oFeatures.bPaginate) {\n\t\t\t\toInit.iDisplayStart = 0;\n\t\t\t}\n\t\t\t\n\t\t\tif ( oSettings.iInitDisplayStart === undefined )\n\t\t\t{\n\t\t\t\t/* Display start point, taking into account the save saving */\n\t\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\n\t\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\n\t\t\t}\n\t\t\t\n\t\t\tvar defer = oInit.iDeferLoading;\n\t\t\tif ( defer !== null )\n\t\t\t{\n\t\t\t\toSettings.deferLoading = true;\n\t\t\t\n\t\t\t\tvar tmp = Array.isArray(defer);\n\t\t\t\toSettings._iRecordsDisplay = tmp ? defer[0] : defer;\n\t\t\t\toSettings._iRecordsTotal = tmp ? defer[1] : defer;\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * Columns\n\t\t\t * See if we should load columns automatically or use defined ones\n\t\t\t */\n\t\t\tvar columnsInit = [];\n\t\t\tvar thead = this.getElementsByTagName('thead');\n\t\t\tvar initHeaderLayout = _fnDetectHeader( oSettings, thead[0] );\n\t\t\t\n\t\t\t// If we don't have a columns array, then generate one with nulls\n\t\t\tif ( oInit.aoColumns ) {\n\t\t\t\tcolumnsInit = oInit.aoColumns;\n\t\t\t}\n\t\t\telse if ( initHeaderLayout.length ) {\n\t\t\t\tfor ( i=0, iLen=initHeaderLayout[0].length ; i<iLen ; i++ ) {\n\t\t\t\t\tcolumnsInit.push( null );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Add the columns\n\t\t\tfor ( i=0, iLen=columnsInit.length ; i<iLen ; i++ ) {\n\t\t\t\t_fnAddColumn( oSettings );\n\t\t\t}\n\t\t\t\n\t\t\t// Apply the column definitions\n\t\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, columnsInit, initHeaderLayout, function (iCol, oDef) {\n\t\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\n\t\t\t} );\n\t\t\t\n\t\t\t/* HTML5 attribute detection - build an mData object automatically if the\n\t\t\t * attributes are found\n\t\t\t */\n\t\t\tvar rowOne = $this.children('tbody').find('tr').eq(0);\n\t\t\t\n\t\t\tif ( rowOne.length ) {\n\t\t\t\tvar a = function ( cell, name ) {\n\t\t\t\t\treturn cell.getAttribute( 'data-'+name ) !== null ? name : null;\n\t\t\t\t};\n\t\t\t\n\t\t\t\t$( rowOne[0] ).children('th, td').each( function (i, cell) {\n\t\t\t\t\tvar col = oSettings.aoColumns[i];\n\t\t\t\n\t\t\t\t\tif (! col) {\n\t\t\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\tif ( col.mData === i ) {\n\t\t\t\t\t\tvar sort = a( cell, 'sort' ) || a( cell, 'order' );\n\t\t\t\t\t\tvar filter = a( cell, 'filter' ) || a( cell, 'search' );\n\t\t\t\n\t\t\t\t\t\tif ( sort !== null || filter !== null ) {\n\t\t\t\t\t\t\tcol.mData = {\n\t\t\t\t\t\t\t\t_:      i+'.display',\n\t\t\t\t\t\t\t\tsort:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\t\ttype:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\t\tfilter: filter !== null ? i+'.@data-'+filter : undefined\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcol._isArrayHost = true;\n\t\t\t\n\t\t\t\t\t\t\t_fnColumnOptions( oSettings, i );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\t\n\t\t\t// Must be done after everything which can be overridden by the state saving!\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState );\n\t\t\t\n\t\t\tvar features = oSettings.oFeatures;\n\t\t\tif ( oInit.bStateSave )\n\t\t\t{\n\t\t\t\tfeatures.bStateSave = true;\n\t\t\t}\n\t\t\t\n\t\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\n\t\t\t// in case that has been altered, so the default sort reflects that option\n\t\t\tif ( oInit.aaSorting === undefined ) {\n\t\t\t\tvar sorting = oSettings.aaSorting;\n\t\t\t\tfor ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {\n\t\t\t\t\tsorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Do a first pass on the sorting classes (allows any size changes to be taken into\n\t\t\t// account, and also will apply sorting disabled classes if disabled\n\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\tif ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\n\t\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\t}\n\t\t\t} );\n\t\t\t\n\t\t\t\n\t\t\t/*\n\t\t\t * Table HTML init\n\t\t\t * Cache the header, body and footer as required, creating them if needed\n\t\t\t */\n\t\t\tvar caption = $this.children('caption');\n\t\t\t\n\t\t\tif ( oSettings.caption ) {\n\t\t\t\tif ( caption.length === 0 ) {\n\t\t\t\t\tcaption = $('<caption/>').appendTo( $this );\n\t\t\t\t}\n\t\t\t\n\t\t\t\tcaption.html( oSettings.caption );\n\t\t\t}\n\t\t\t\n\t\t\t// Store the caption side, so we can remove the element from the document\n\t\t\t// when creating the element\n\t\t\tif (caption.length) {\n\t\t\t\tcaption[0]._captionSide = caption.css('caption-side');\n\t\t\t\toSettings.captionNode = caption[0];\n\t\t\t}\n\t\t\t\n\t\t\tif ( thead.length === 0 ) {\n\t\t\t\tthead = $('<thead/>').appendTo($this);\n\t\t\t}\n\t\t\toSettings.nTHead = thead[0];\n\t\t\t\n\t\t\tvar tbody = $this.children('tbody');\n\t\t\tif ( tbody.length === 0 ) {\n\t\t\t\ttbody = $('<tbody/>').insertAfter(thead);\n\t\t\t}\n\t\t\toSettings.nTBody = tbody[0];\n\t\t\t\n\t\t\tvar tfoot = $this.children('tfoot');\n\t\t\tif ( tfoot.length === 0 ) {\n\t\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\n\t\t\t\t// a tfoot element for the caption element to be appended to\n\t\t\t\ttfoot = $('<tfoot/>').appendTo($this);\n\t\t\t}\n\t\t\toSettings.nTFoot = tfoot[0];\n\t\t\t\n\t\t\t// Copy the data index array\n\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\t\n\t\t\t// Initialisation complete - table can be drawn\n\t\t\toSettings.bInitialised = true;\n\t\t\t\n\t\t\t// Language definitions\n\t\t\tvar oLanguage = oSettings.oLanguage;\n\t\t\t$.extend( true, oLanguage, oInit.oLanguage );\n\t\t\t\n\t\t\tif ( oLanguage.sUrl ) {\n\t\t\t\t// Get the language definitions from a file\n\t\t\t\t$.ajax( {\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\turl: oLanguage.sUrl,\n\t\t\t\t\tsuccess: function ( json ) {\n\t\t\t\t\t\t_fnCamelToHungarian( defaults.oLanguage, json );\n\t\t\t\t\t\t$.extend( true, oLanguage, json, oSettings.oInit.oLanguage );\n\t\t\t\n\t\t\t\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings], true);\n\t\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t\t},\n\t\t\t\t\terror: function () {\n\t\t\t\t\t\t// Error occurred loading language file\n\t\t\t\t\t\t_fnLog( oSettings, 0, 'i18n file loading error', 21 );\n\t\t\t\n\t\t\t\t\t\t// Continue on as best we can\n\t\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings], true);\n\t\t\t\t_fnInitialise( oSettings );\n\t\t\t}\n\t\t} );\n\t\t_that = null;\n\t\treturn this;\n\t};\n\t\n\t\n\t\n\t/**\n\t * DataTables extensions\n\t * \n\t * This namespace acts as a collection area for plug-ins that can be used to\n\t * extend DataTables capabilities. Indeed many of the build in methods\n\t * use this method to provide their own capabilities (sorting methods for\n\t * example).\n\t *\n\t * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n\t * reasons\n\t *\n\t *  @namespace\n\t */\n\tDataTable.ext = _ext = {\n\t\t/**\n\t\t * Buttons. For use with the Buttons extension for DataTables. This is\n\t\t * defined here so other extensions can define buttons regardless of load\n\t\t * order. It is _not_ used by DataTables core.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tbuttons: {},\n\t\n\t\n\t\t/**\n\t\t * Element class names\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tclasses: {},\n\t\n\t\n\t\t/**\n\t\t * DataTables build type (expanded by the download builder)\n\t\t *\n\t\t *  @type string\n\t\t */\n\t\tbuilder: \"-source-\",\n\t\n\t\n\t\t/**\n\t\t * Error reporting.\n\t\t * \n\t\t * How should DataTables report an error. Can take the value 'alert',\n\t\t * 'throw', 'none' or a function.\n\t\t *\n\t\t *  @type string|function\n\t\t *  @default alert\n\t\t */\n\t\terrMode: \"alert\",\n\t\n\t\n\t\t/**\n\t\t * Legacy so v1 plug-ins don't throw js errors on load\n\t\t */\n\t\tfeature: [],\n\t\n\t\t/**\n\t\t * Feature plug-ins.\n\t\t * \n\t\t * This is an object of callbacks which provide the features for DataTables\n\t\t * to be initialised via the `layout` option.\n\t\t */\n\t\tfeatures: {},\n\t\n\t\n\t\t/**\n\t\t * Row searching.\n\t\t * \n\t\t * This method of searching is complimentary to the default type based\n\t\t * searching, and a lot more comprehensive as it allows you complete control\n\t\t * over the searching logic. Each element in this array is a function\n\t\t * (parameters described below) that is called for every row in the table,\n\t\t * and your logic decides if it should be included in the searching data set\n\t\t * or not.\n\t\t *\n\t\t * Searching functions have the following input parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t * 2. `{array|object}` Data for the row to be processed (same as the\n\t\t *    original format that was passed in as the data source, or an array\n\t\t *    from a DOM data source\n\t\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n\t\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\n\t\t *\n\t\t * And the following return is expected:\n\t\t *\n\t\t * * {boolean} Include the row in the searched result set (true) or not\n\t\t *   (false)\n\t\t *\n\t\t * Note that as with the main search ability in DataTables, technically this\n\t\t * is \"filtering\", since it is subtractive. However, for consistency in\n\t\t * naming we call it searching here.\n\t\t *\n\t\t *  @type array\n\t\t *  @default []\n\t\t *\n\t\t *  @example\n\t\t *    // The following example shows custom search being applied to the\n\t\t *    // fourth column (i.e. the data[3] index) based on two input values\n\t\t *    // from the end-user, matching the data in a certain range.\n\t\t *    $.fn.dataTable.ext.search.push(\n\t\t *      function( settings, data, dataIndex ) {\n\t\t *        var min = document.getElementById('min').value * 1;\n\t\t *        var max = document.getElementById('max').value * 1;\n\t\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n\t\t *\n\t\t *        if ( min == \"\" && max == \"\" ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min == \"\" && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && \"\" == max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        return false;\n\t\t *      }\n\t\t *    );\n\t\t */\n\t\tsearch: [],\n\t\n\t\n\t\t/**\n\t\t * Selector extensions\n\t\t *\n\t\t * The `selector` option can be used to extend the options available for the\n\t\t * selector modifier options (`selector-modifier` object data type) that\n\t\t * each of the three built in selector types offer (row, column and cell +\n\t\t * their plural counterparts). For example the Select extension uses this\n\t\t * mechanism to provide an option to select only rows, columns and cells\n\t\t * that have been marked as selected by the end user (`{selected: true}`),\n\t\t * which can be used in conjunction with the existing built in selector\n\t\t * options.\n\t\t *\n\t\t * Each property is an array to which functions can be pushed. The functions\n\t\t * take three attributes:\n\t\t *\n\t\t * * Settings object for the host table\n\t\t * * Options object (`selector-modifier` object type)\n\t\t * * Array of selected item indexes\n\t\t *\n\t\t * The return is an array of the resulting item indexes after the custom\n\t\t * selector has been applied.\n\t\t *\n\t\t *  @type object\n\t\t */\n\t\tselector: {\n\t\t\tcell: [],\n\t\t\tcolumn: [],\n\t\t\trow: []\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Legacy configuration options. Enable and disable legacy options that\n\t\t * are available in DataTables.\n\t\t *\n\t\t *  @type object\n\t\t */\n\t\tlegacy: {\n\t\t\t/**\n\t\t\t * Enable / disable DataTables 1.9 compatible server-side processing\n\t\t\t * requests\n\t\t\t *\n\t\t\t *  @type boolean\n\t\t\t *  @default null\n\t\t\t */\n\t\t\tajax: null\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Pagination plug-in methods.\n\t\t * \n\t\t * Each entry in this object is a function and defines which buttons should\n\t\t * be shown by the pagination rendering method that is used for the table:\n\t\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n\t\t * buttons are displayed in the document, while the functions here tell it\n\t\t * what buttons to display. This is done by returning an array of button\n\t\t * descriptions (what each button will do).\n\t\t *\n\t\t * Pagination types (the four built in options and any additional plug-in\n\t\t * options defined here) can be used through the `paginationType`\n\t\t * initialisation parameter.\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t\t * 1. `{int} page` The current page index\n\t\t * 2. `{int} pages` The number of pages in the table\n\t\t *\n\t\t * Each function is expected to return an array where each element of the\n\t\t * array can be one of:\n\t\t *\n\t\t * * `first` - Jump to first page when activated\n\t\t * * `last` - Jump to last page when activated\n\t\t * * `previous` - Show previous page when activated\n\t\t * * `next` - Show next page when activated\n\t\t * * `{int}` - Show page of the index given\n\t\t * * `{array}` - A nested array containing the above elements to add a\n\t\t *   containing 'DIV' element (might be useful for styling).\n\t\t *\n\t\t * Note that DataTables v1.9- used this object slightly differently whereby\n\t\t * an object with two functions would be defined for each plug-in. That\n\t\t * ability is still supported by DataTables 1.10+ to provide backwards\n\t\t * compatibility, but this option of use is now decremented and no longer\n\t\t * documented in DataTables 1.10+.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    // Show previous, next and current page buttons only\n\t\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n\t\t *      return [ 'previous', page, 'next' ];\n\t\t *    };\n\t\t */\n\t\tpager: {},\n\t\n\t\n\t\trenderer: {\n\t\t\tpageButton: {},\n\t\t\theader: {}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Ordering plug-ins - custom data source\n\t\t * \n\t\t * The extension options for ordering of data available here is complimentary\n\t\t * to the default type based ordering that DataTables typically uses. It\n\t\t * allows much greater control over the the data that is being used to\n\t\t * order a column, but is necessarily therefore more complex.\n\t\t * \n\t\t * This type of ordering is useful if you want to do ordering based on data\n\t\t * live from the DOM (for example the contents of an 'input' element) rather\n\t\t * than just the static string that DataTables knows of.\n\t\t * \n\t\t * The way these plug-ins work is that you create an array of the values you\n\t\t * wish to be ordering for the column in question and then return that\n\t\t * array. The data in the array much be in the index order of the rows in\n\t\t * the table (not the currently ordering order!). Which order data gathering\n\t\t * function is run here depends on the `dt-init columns.orderDataType`\n\t\t * parameter that is used for the column (if any).\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t * 2. `{int}` Target column index\n\t\t *\n\t\t * Each function is expected to return an array:\n\t\t *\n\t\t * * `{array}` Data for the column to be ordering upon\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    // Ordering using `input` node values\n\t\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n\t\t *    {\n\t\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n\t\t *        return $('input', td).val();\n\t\t *      } );\n\t\t *    }\n\t\t */\n\t\torder: {},\n\t\n\t\n\t\t/**\n\t\t * Type based plug-ins.\n\t\t *\n\t\t * Each column in DataTables has a type assigned to it, either by automatic\n\t\t * detection or by direct assignment using the `type` option for the column.\n\t\t * The type of a column will effect how it is ordering and search (plug-ins\n\t\t * can also make use of the column type if required).\n\t\t *\n\t\t * @namespace\n\t\t */\n\t\ttype: {\n\t\t\t/**\n\t\t\t * Automatic column class assignment\n\t\t\t */\n\t\t\tclassName: {},\n\t\n\t\t\t/**\n\t\t\t * Type detection functions.\n\t\t\t *\n\t\t\t * The functions defined in this object are used to automatically detect\n\t\t\t * a column's type, making initialisation of DataTables super easy, even\n\t\t\t * when complex data is in the table.\n\t\t\t *\n\t\t\t * The functions defined take two parameters:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be analysed\n\t\t     *  2. `{settings}` DataTables settings object. This can be used to\n\t\t     *     perform context specific type detection - for example detection\n\t\t     *     based on language settings such as using a comma for a decimal\n\t\t     *     place. Generally speaking the options from the settings will not\n\t\t     *     be required\n\t\t\t *\n\t\t\t * Each function is expected to return:\n\t\t\t *\n\t\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\n\t\t\t *   pass it on to the other type detection functions.\n\t\t\t *\n\t\t\t *  @type array\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Currency type detection plug-in:\n\t\t\t *    $.fn.dataTable.ext.type.detect.push(\n\t\t\t *      function ( data, settings ) {\n\t\t\t *        // Check the numeric part\n\t\t\t *        if ( ! data.substring(1).match(/[0-9]/) ) {\n\t\t\t *          return null;\n\t\t\t *        }\n\t\t\t *\n\t\t\t *        // Check prefixed by currency\n\t\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n\t\t\t *          return 'currency';\n\t\t\t *        }\n\t\t\t *        return null;\n\t\t\t *      }\n\t\t\t *    );\n\t\t\t */\n\t\t\tdetect: [],\n\t\n\t\t\t/**\n\t\t\t * Automatic renderer assignment\n\t\t\t */\n\t\t\trender: {},\n\t\n\t\n\t\t\t/**\n\t\t\t * Type based search formatting.\n\t\t\t *\n\t\t\t * The type based searching functions can be used to pre-format the\n\t\t\t * data to be search on. For example, it can be used to strip HTML\n\t\t\t * tags or to de-format telephone numbers for numeric only searching.\n\t\t\t *\n\t\t\t * Note that is a search is not defined for a column of a given type,\n\t\t\t * no search formatting will be performed.\n\t\t\t * \n\t\t\t * Pre-processing of searching data plug-ins - When you assign the sType\n\t\t\t * for a column (or have it automatically detected for you by DataTables\n\t\t\t * or a type detection plug-in), you will typically be using this for\n\t\t\t * custom sorting, but it can also be used to provide custom searching\n\t\t\t * by allowing you to pre-processing the data and returning the data in\n\t\t\t * the format that should be searched upon. This is done by adding\n\t\t\t * functions this object with a parameter name which matches the sType\n\t\t\t * for that target column. This is the corollary of <i>afnSortData</i>\n\t\t\t * for searching data.\n\t\t\t *\n\t\t\t * The functions defined take a single parameter:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be prepared for searching\n\t\t\t *\n\t\t\t * Each function is expected to return:\n\t\t\t *\n\t\t\t * * `{string|null}` Formatted string that will be used for the searching.\n\t\t\t *\n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n\t\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t\t *    }\n\t\t\t */\n\t\t\tsearch: {},\n\t\n\t\n\t\t\t/**\n\t\t\t * Type based ordering.\n\t\t\t *\n\t\t\t * The column type tells DataTables what ordering to apply to the table\n\t\t\t * when a column is sorted upon. The order for each type that is defined,\n\t\t\t * is defined by the functions available in this object.\n\t\t\t *\n\t\t\t * Each ordering option can be described by three properties added to\n\t\t\t * this object:\n\t\t\t *\n\t\t\t * * `{type}-pre` - Pre-formatting function\n\t\t\t * * `{type}-asc` - Ascending order function\n\t\t\t * * `{type}-desc` - Descending order function\n\t\t\t *\n\t\t\t * All three can be used together, only `{type}-pre` or only\n\t\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\n\t\t\t * that only `{type}-pre` is used, as this provides the optimal\n\t\t\t * implementation in terms of speed, although the others are provided\n\t\t\t * for compatibility with existing Javascript sort functions.\n\t\t\t *\n\t\t\t * `{type}-pre`: Functions defined take a single parameter:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be prepared for ordering\n\t\t\t *\n\t\t\t * And return:\n\t\t\t *\n\t\t\t * * `{*}` Data to be sorted upon\n\t\t\t *\n\t\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n\t\t\t * functions, taking two parameters:\n\t\t\t *\n\t\t     *  1. `{*}` Data to compare to the second parameter\n\t\t     *  2. `{*}` Data to compare to the first parameter\n\t\t\t *\n\t\t\t * And returning:\n\t\t\t *\n\t\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n\t\t\t *   than the second parameter, ===0 if the two parameters are equal and\n\t\t\t *   >0 if the first parameter should be sorted height than the second\n\t\t\t *   parameter.\n\t\t\t * \n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\n\t\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\n\t\t\t *      \"string-pre\": function(x) {\n\t\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n\t\t\t *        return parseFloat( a );\n\t\t\t *      }\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Case-sensitive string ordering, with no pre-formatting method\n\t\t\t *    $.extend( $.fn.dataTable.ext.order, {\n\t\t\t *      \"string-case-asc\": function(x,y) {\n\t\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t\t *      },\n\t\t\t *      \"string-case-desc\": function(x,y) {\n\t\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t\t *      }\n\t\t\t *    } );\n\t\t\t */\n\t\t\torder: {}\n\t\t},\n\t\n\t\t/**\n\t\t * Unique DataTables instance counter\n\t\t *\n\t\t * @type int\n\t\t * @private\n\t\t */\n\t\t_unique: 0,\n\t\n\t\n\t\t//\n\t\t// Depreciated\n\t\t// The following properties are retained for backwards compatibility only.\n\t\t// The should not be used in new projects and will be removed in a future\n\t\t// version\n\t\t//\n\t\n\t\t/**\n\t\t * Version check function.\n\t\t *  @type function\n\t\t *  @depreciated Since 1.10\n\t\t */\n\t\tfnVersionCheck: DataTable.fnVersionCheck,\n\t\n\t\n\t\t/**\n\t\t * Index for what 'this' index API functions should use\n\t\t *  @type int\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\tiApiIndex: 0,\n\t\n\t\n\t\t/**\n\t\t * Software version\n\t\t *  @type string\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\tsVersion: DataTable.version\n\t};\n\t\n\t\n\t//\n\t// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n\t//\n\t$.extend( _ext, {\n\t\tafnFiltering: _ext.search,\n\t\taTypes:       _ext.type.detect,\n\t\tofnSearch:    _ext.type.search,\n\t\toSort:        _ext.type.order,\n\t\tafnSortData:  _ext.order,\n\t\taoFeatures:   _ext.feature,\n\t\toStdClasses:  _ext.classes,\n\t\toPagination:  _ext.pager\n\t} );\n\t\n\t\n\t$.extend( DataTable.ext.classes, {\n\t\tcontainer: 'dt-container',\n\t\tempty: {\n\t\t\trow: 'dt-empty'\n\t\t},\n\t\tinfo: {\n\t\t\tcontainer: 'dt-info'\n\t\t},\n\t\tlayout: {\n\t\t\trow: 'dt-layout-row',\n\t\t\tcell: 'dt-layout-cell',\n\t\t\ttableRow: 'dt-layout-table',\n\t\t\ttableCell: '',\n\t\t\tstart: 'dt-layout-start',\n\t\t\tend: 'dt-layout-end',\n\t\t\tfull: 'dt-layout-full'\n\t\t},\n\t\tlength: {\n\t\t\tcontainer: 'dt-length',\n\t\t\tselect: 'dt-input'\n\t\t},\n\t\torder: {\n\t\t\tcanAsc: 'dt-orderable-asc',\n\t\t\tcanDesc: 'dt-orderable-desc',\n\t\t\tisAsc: 'dt-ordering-asc',\n\t\t\tisDesc: 'dt-ordering-desc',\n\t\t\tnone: 'dt-orderable-none',\n\t\t\tposition: 'sorting_'\n\t\t},\n\t\tprocessing: {\n\t\t\tcontainer: 'dt-processing'\n\t\t},\n\t\tscrolling: {\n\t\t\tbody: 'dt-scroll-body',\n\t\t\tcontainer: 'dt-scroll',\n\t\t\tfooter: {\n\t\t\t\tself: 'dt-scroll-foot',\n\t\t\t\tinner: 'dt-scroll-footInner'\n\t\t\t},\n\t\t\theader: {\n\t\t\t\tself: 'dt-scroll-head',\n\t\t\t\tinner: 'dt-scroll-headInner'\n\t\t\t}\n\t\t},\n\t\tsearch: {\n\t\t\tcontainer: 'dt-search',\n\t\t\tinput: 'dt-input'\n\t\t},\n\t\ttable: 'dataTable',\t\n\t\ttbody: {\n\t\t\tcell: '',\n\t\t\trow: ''\n\t\t},\n\t\tthead: {\n\t\t\tcell: '',\n\t\t\trow: ''\n\t\t},\n\t\ttfoot: {\n\t\t\tcell: '',\n\t\t\trow: ''\n\t\t},\n\t\tpaging: {\n\t\t\tactive: 'current',\n\t\t\tbutton: 'dt-paging-button',\n\t\t\tcontainer: 'dt-paging',\n\t\t\tdisabled: 'disabled',\n\t\t\tnav: ''\n\t\t}\n\t} );\n\t\n\t\n\t/*\n\t * It is useful to have variables which are scoped locally so only the\n\t * DataTables functions can access them and they don't leak into global space.\n\t * At the same time these functions are often useful over multiple files in the\n\t * core and API, so we list, or at least document, all variables which are used\n\t * by DataTables as private variables here. This also ensures that there is no\n\t * clashing of variable names and that they can easily referenced for reuse.\n\t */\n\t\n\t\n\t// Defined else where\n\t//  _selector_run\n\t//  _selector_opts\n\t//  _selector_row_indexes\n\t\n\tvar _ext; // DataTable.ext\n\tvar _Api; // DataTable.Api\n\tvar _api_register; // DataTable.Api.register\n\tvar _api_registerPlural; // DataTable.Api.registerPlural\n\t\n\tvar _re_dic = {};\n\tvar _re_new_lines = /[\\r\\n\\u2028]/g;\n\tvar _re_html = /<([^>]*>)/g;\n\tvar _max_str_len = Math.pow(2, 28);\n\t\n\t// This is not strict ISO8601 - Date.parse() is quite lax, although\n\t// implementations differ between browsers.\n\tvar _re_date = /^\\d{2,4}[./-]\\d{1,2}[./-]\\d{1,2}([T ]{1}\\d{1,2}[:.]\\d{2}([.:]\\d{2})?)?$/;\n\t\n\t// Escape regular expression special characters\n\tvar _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\n\t\n\t// https://en.wikipedia.org/wiki/Foreign_exchange_market\n\t// - \\u20BD - Russian ruble.\n\t// - \\u20a9 - South Korean Won\n\t// - \\u20BA - Turkish Lira\n\t// - \\u20B9 - Indian Rupee\n\t// - R - Brazil (R$) and South Africa\n\t// - fr - Swiss Franc\n\t// - kr - Swedish krona, Norwegian krone and Danish krone\n\t// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n\t// - É - Bitcoin\n\t// - Î - Ethereum\n\t//   standards as thousands separators.\n\tvar _re_formatted_numeric = /['\\u00A0,$Â£â¬Â¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkÉÎ]/gi;\n\t\n\t\n\tvar _empty = function ( d ) {\n\t\treturn !d || d === true || d === '-' ? true : false;\n\t};\n\t\n\t\n\tvar _intVal = function ( s ) {\n\t\tvar integer = parseInt( s, 10 );\n\t\treturn !isNaN(integer) && isFinite(s) ? integer : null;\n\t};\n\t\n\t// Convert from a formatted number with characters other than `.` as the\n\t// decimal place, to a Javascript number\n\tvar _numToDecimal = function ( num, decimalPoint ) {\n\t\t// Cache created regular expressions for speed as this function is called often\n\t\tif ( ! _re_dic[ decimalPoint ] ) {\n\t\t\t_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\n\t\t}\n\t\treturn typeof num === 'string' && decimalPoint !== '.' ?\n\t\t\tnum.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\n\t\t\tnum;\n\t};\n\t\n\t\n\tvar _isNumber = function ( d, decimalPoint, formatted, allowEmpty ) {\n\t\tvar type = typeof d;\n\t\tvar strType = type === 'string';\n\t\n\t\tif ( type === 'number' || type === 'bigint') {\n\t\t\treturn true;\n\t\t}\n\t\n\t\t// If empty return immediately so there must be a number if it is a\n\t\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\n\t\t// as a formatted number for currency\n\t\tif ( allowEmpty && _empty( d ) ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tif ( decimalPoint && strType ) {\n\t\t\td = _numToDecimal( d, decimalPoint );\n\t\t}\n\t\n\t\tif ( formatted && strType ) {\n\t\t\td = d.replace( _re_formatted_numeric, '' );\n\t\t}\n\t\n\t\treturn !isNaN( parseFloat(d) ) && isFinite( d );\n\t};\n\t\n\t\n\t// A string without HTML in it can be considered to be HTML still\n\tvar _isHtml = function ( d ) {\n\t\treturn _empty( d ) || typeof d === 'string';\n\t};\n\t\n\t// Is a string a number surrounded by HTML?\n\tvar _htmlNumeric = function ( d, decimalPoint, formatted, allowEmpty ) {\n\t\tif ( allowEmpty && _empty( d ) ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\t// input and select strings mean that this isn't just a number\n\t\tif (typeof d === 'string' && d.match(/<(input|select)/i)) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tvar html = _isHtml( d );\n\t\treturn ! html ?\n\t\t\tnull :\n\t\t\t_isNumber( _stripHtml( d ), decimalPoint, formatted, allowEmpty ) ?\n\t\t\t\ttrue :\n\t\t\t\tnull;\n\t};\n\t\n\t\n\tvar _pluck = function ( a, prop, prop2 ) {\n\t\tvar out = [];\n\t\tvar i=0, ien=a.length;\n\t\n\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t// is essential here\n\t\tif ( prop2 !== undefined ) {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[i] && a[i][ prop ] ) {\n\t\t\t\t\tout.push( a[i][ prop ][ prop2 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[i] ) {\n\t\t\t\t\tout.push( a[i][ prop ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\t// Basically the same as _pluck, but rather than looping over `a` we use `order`\n\t// as the indexes to pick from `a`\n\tvar _pluck_order = function ( a, order, prop, prop2 )\n\t{\n\t\tvar out = [];\n\t\tvar i=0, ien=order.length;\n\t\n\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t// is essential here\n\t\tif ( prop2 !== undefined ) {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[ order[i] ] && a[ order[i] ][ prop ] ) {\n\t\t\t\t\tout.push( a[ order[i] ][ prop ][ prop2 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[ order[i] ] ) {\n\t\t\t\t\tout.push( a[ order[i] ][ prop ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _range = function ( len, start )\n\t{\n\t\tvar out = [];\n\t\tvar end;\n\t\n\t\tif ( start === undefined ) {\n\t\t\tstart = 0;\n\t\t\tend = len;\n\t\t}\n\t\telse {\n\t\t\tend = start;\n\t\t\tstart = len;\n\t\t}\n\t\n\t\tfor ( var i=start ; i<end ; i++ ) {\n\t\t\tout.push( i );\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _removeEmpty = function ( a )\n\t{\n\t\tvar out = [];\n\t\n\t\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\t\tif ( a[i] ) { // careful - will remove all falsy values!\n\t\t\t\tout.push( a[i] );\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t// Replaceable function in api.util\n\tvar _stripHtml = function (input) {\n\t\tif (! input || typeof input !== 'string') {\n\t\t\treturn input;\n\t\t}\n\t\n\t\t// Irrelevant check to workaround CodeQL's false positive on the regex\n\t\tif (input.length > _max_str_len) {\n\t\t\tthrow new Error('Exceeded max str len');\n\t\t}\n\t\n\t\tvar previous;\n\t\n\t\tinput = input.replace(_re_html, ''); // Complete tags\n\t\n\t\t// Safety for incomplete script tag - use do / while to ensure that\n\t\t// we get all instances\n\t\tdo {\n\t\t\tprevious = input;\n\t\t\tinput = input.replace(/<script/i, '');\n\t\t} while (input !== previous);\n\t\n\t\treturn previous;\n\t};\n\t\n\t// Replaceable function in api.util\n\tvar _escapeHtml = function ( d ) {\n\t\tif (Array.isArray(d)) {\n\t\t\td = d.join(',');\n\t\t}\n\t\n\t\treturn typeof d === 'string' ?\n\t\t\td\n\t\t\t\t.replace(/&/g, '&amp;')\n\t\t\t\t.replace(/</g, '&lt;')\n\t\t\t\t.replace(/>/g, '&gt;')\n\t\t\t\t.replace(/\"/g, '&quot;') :\n\t\t\td;\n\t};\n\t\n\t// Remove diacritics from a string by decomposing it and then removing\n\t// non-ascii characters\n\tvar _normalize = function (str, both) {\n\t\tif (typeof str !== 'string') {\n\t\t\treturn str;\n\t\t}\n\t\n\t\t// It is faster to just run `normalize` than it is to check if\n\t\t// we need to with a regex! (Check as it isn't available in old\n\t\t// Safari)\n\t\tvar res = str.normalize\n\t\t\t? str.normalize(\"NFD\")\n\t\t\t: str;\n\t\n\t\t// Equally, here we check if a regex is needed or not\n\t\treturn res.length !== str.length\n\t\t\t? (both === true ? str + ' ' : '' ) + res.replace(/[\\u0300-\\u036f]/g, \"\")\n\t\t\t: res;\n\t}\n\t\n\t/**\n\t * Determine if all values in the array are unique. This means we can short\n\t * cut the _unique method at the cost of a single loop. A sorted array is used\n\t * to easily check the values.\n\t *\n\t * @param  {array} src Source array\n\t * @return {boolean} true if all unique, false otherwise\n\t * @ignore\n\t */\n\tvar _areAllUnique = function ( src ) {\n\t\tif ( src.length < 2 ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tvar sorted = src.slice().sort();\n\t\tvar last = sorted[0];\n\t\n\t\tfor ( var i=1, ien=sorted.length ; i<ien ; i++ ) {\n\t\t\tif ( sorted[i] === last ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tlast = sorted[i];\n\t\t}\n\t\n\t\treturn true;\n\t};\n\t\n\t\n\t/**\n\t * Find the unique elements in a source array.\n\t *\n\t * @param  {array} src Source array\n\t * @return {array} Array of unique items\n\t * @ignore\n\t */\n\tvar _unique = function ( src )\n\t{\n\t\tif (Array.from && Set) {\n\t\t\treturn Array.from(new Set(src));\n\t\t}\n\t\n\t\tif ( _areAllUnique( src ) ) {\n\t\t\treturn src.slice();\n\t\t}\n\t\n\t\t// A faster unique method is to use object keys to identify used values,\n\t\t// but this doesn't work with arrays or objects, which we must also\n\t\t// consider. See jsperf.app/compare-array-unique-versions/4 for more\n\t\t// information.\n\t\tvar\n\t\t\tout = [],\n\t\t\tval,\n\t\t\ti, ien=src.length,\n\t\t\tj, k=0;\n\t\n\t\tagain: for ( i=0 ; i<ien ; i++ ) {\n\t\t\tval = src[i];\n\t\n\t\t\tfor ( j=0 ; j<k ; j++ ) {\n\t\t\t\tif ( out[j] === val ) {\n\t\t\t\t\tcontinue again;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tout.push( val );\n\t\t\tk++;\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t// Surprisingly this is faster than [].concat.apply\n\t// https://jsperf.com/flatten-an-array-loop-vs-reduce/2\n\tvar _flatten = function (out, val) {\n\t\tif (Array.isArray(val)) {\n\t\t\tfor (var i=0 ; i<val.length ; i++) {\n\t\t\t\t_flatten(out, val[i]);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tout.push(val);\n\t\t}\n\t\n\t\treturn out;\n\t}\n\t\n\t// Similar to jQuery's addClass, but use classList.add\n\tfunction _addClass(el, name) {\n\t\tif (name) {\n\t\t\tname.split(' ').forEach(function (n) {\n\t\t\t\tif (n) {\n\t\t\t\t\t// `add` does deduplication, so no need to check `contains`\n\t\t\t\t\tel.classList.add(n);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\t\n\t/**\n\t * DataTables utility methods\n\t * \n\t * This namespace provides helper methods that DataTables uses internally to\n\t * create a DataTable, but which are not exclusively used only for DataTables.\n\t * These methods can be used by extension authors to save the duplication of\n\t * code.\n\t *\n\t *  @namespace\n\t */\n\tDataTable.util = {\n\t\t/**\n\t\t * Return a string with diacritic characters decomposed\n\t\t * @param {*} mixed Function or string to normalize\n\t\t * @param {*} both Return original string and the normalized string\n\t\t * @returns String or undefined\n\t\t */\n\t\tdiacritics: function (mixed, both) {\n\t\t\tvar type = typeof mixed;\n\t\n\t\t\tif (type !== 'function') {\n\t\t\t\treturn _normalize(mixed, both);\n\t\t\t}\n\t\t\t_normalize = mixed;\n\t\t},\n\t\n\t\t/**\n\t\t * Debounce a function\n\t\t *\n\t\t * @param {function} fn Function to be called\n\t\t * @param {integer} freq Call frequency in mS\n\t\t * @return {function} Wrapped function\n\t\t */\n\t\tdebounce: function ( fn, timeout ) {\n\t\t\tvar timer;\n\t\n\t\t\treturn function () {\n\t\t\t\tvar that = this;\n\t\t\t\tvar args = arguments;\n\t\n\t\t\t\tclearTimeout(timer);\n\t\n\t\t\t\ttimer = setTimeout( function () {\n\t\t\t\t\tfn.apply(that, args);\n\t\t\t\t}, timeout || 250 );\n\t\t\t};\n\t\t},\n\t\n\t\t/**\n\t\t * Throttle the calls to a function. Arguments and context are maintained\n\t\t * for the throttled function.\n\t\t *\n\t\t * @param {function} fn Function to be called\n\t\t * @param {integer} freq Call frequency in mS\n\t\t * @return {function} Wrapped function\n\t\t */\n\t\tthrottle: function ( fn, freq ) {\n\t\t\tvar\n\t\t\t\tfrequency = freq !== undefined ? freq : 200,\n\t\t\t\tlast,\n\t\t\t\ttimer;\n\t\n\t\t\treturn function () {\n\t\t\t\tvar\n\t\t\t\t\tthat = this,\n\t\t\t\t\tnow  = +new Date(),\n\t\t\t\t\targs = arguments;\n\t\n\t\t\t\tif ( last && now < last + frequency ) {\n\t\t\t\t\tclearTimeout( timer );\n\t\n\t\t\t\t\ttimer = setTimeout( function () {\n\t\t\t\t\t\tlast = undefined;\n\t\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t\t}, frequency );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlast = now;\n\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\n\t\t/**\n\t\t * Escape a string such that it can be used in a regular expression\n\t\t *\n\t\t *  @param {string} val string to escape\n\t\t *  @returns {string} escaped string\n\t\t */\n\t\tescapeRegex: function ( val ) {\n\t\t\treturn val.replace( _re_escape_regex, '\\\\$1' );\n\t\t},\n\t\n\t\t/**\n\t\t * Create a function that will write to a nested object or array\n\t\t * @param {*} source JSON notation string\n\t\t * @returns Write function\n\t\t */\n\t\tset: function ( source ) {\n\t\t\tif ( $.isPlainObject( source ) ) {\n\t\t\t\t/* Unlike get, only the underscore (global) option is used for for\n\t\t\t\t * setting data since we don't know the type here. This is why an object\n\t\t\t\t * option is not documented for `mData` (which is read/write), but it is\n\t\t\t\t * for `mRender` which is read only.\n\t\t\t\t */\n\t\t\t\treturn DataTable.util.set( source._ );\n\t\t\t}\n\t\t\telse if ( source === null ) {\n\t\t\t\t// Nothing to do when the data source is null\n\t\t\t\treturn function () {};\n\t\t\t}\n\t\t\telse if ( typeof source === 'function' ) {\n\t\t\t\treturn function (data, val, meta) {\n\t\t\t\t\tsource( data, 'set', val, meta );\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (\n\t\t\t\ttypeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\t\tsource.indexOf('[') !== -1 || source.indexOf('(') !== -1)\n\t\t\t) {\n\t\t\t\t// Like the get, we need to get data from a nested object\n\t\t\t\tvar setData = function (data, val, src) {\n\t\t\t\t\tvar a = _fnSplitObjNotation( src ), b;\n\t\t\t\t\tvar aLast = a[a.length-1];\n\t\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\n\t\t\n\t\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ ) {\n\t\t\t\t\t\t// Protect against prototype pollution\n\t\t\t\t\t\tif (a[i] === '__proto__' || a[i] === 'constructor') {\n\t\t\t\t\t\t\tthrow new Error('Cannot set prototype values');\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\t\n\t\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\t\t\t\t\tdata[ a[i] ] = [];\n\t\t\n\t\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\n\t\t\t\t\t\t\tb = a.slice();\n\t\t\t\t\t\t\tb.splice( 0, i+1 );\n\t\t\t\t\t\t\tinnerSrc = b.join('.');\n\t\t\n\t\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\n\t\t\t\t\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\t\to = {};\n\t\t\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\n\t\t\t\t\t\t\t\t\tdata[ a[i] ].push( o );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\n\t\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\n\t\t\t\t\t\t\t\t// is to just save the value.\n\t\t\t\t\t\t\t\tdata[ a[i] ] = val;\n\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\n\t\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( funcNotation ) {\n\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\tdata = data[ a[i] ]( val );\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t// If the nested object doesn't currently exist - since we are\n\t\t\t\t\t\t// trying to set the value - create it\n\t\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined ) {\n\t\t\t\t\t\t\tdata[ a[i] ] = {};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\t// Last item in the input - i.e, the actual set\n\t\t\t\t\tif ( aLast.match(__reFn ) ) {\n\t\t\t\t\t\t// Function call\n\t\t\t\t\t\tdata = data[ aLast.replace(__reFn, '') ]( val );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\n\t\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\n\t\t\t\t\t\tdata[ aLast.replace(__reArray, '') ] = val;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\n\t\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\t\treturn setData( data, val, source );\n\t\t\t\t};\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Array or flat object mapping\n\t\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\t\tdata[source] = val;\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * Create a function that will read nested objects from arrays, based on JSON notation\n\t\t * @param {*} source JSON notation string\n\t\t * @returns Value read\n\t\t */\n\t\tget: function ( source ) {\n\t\t\tif ( $.isPlainObject( source ) ) {\n\t\t\t\t// Build an object of get functions, and wrap them in a single call\n\t\t\t\tvar o = {};\n\t\t\t\t$.each( source, function (key, val) {\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\to[key] = DataTable.util.get( val );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\n\t\t\t\treturn function (data, type, row, meta) {\n\t\t\t\t\tvar t = o[type] || o._;\n\t\t\t\t\treturn t !== undefined ?\n\t\t\t\t\t\tt(data, type, row, meta) :\n\t\t\t\t\t\tdata;\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if ( source === null ) {\n\t\t\t\t// Give an empty string for rendering / sorting etc\n\t\t\t\treturn function (data) { // type, row and meta also passed, but not used\n\t\t\t\t\treturn data;\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if ( typeof source === 'function' ) {\n\t\t\t\treturn function (data, type, row, meta) {\n\t\t\t\t\treturn source( data, type, row, meta );\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (\n\t\t\t\ttypeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\t\tsource.indexOf('[') !== -1 || source.indexOf('(') !== -1)\n\t\t\t) {\n\t\t\t\t/* If there is a . in the source string then the data source is in a\n\t\t\t\t * nested object so we loop over the data for each level to get the next\n\t\t\t\t * level down. On each loop we test for undefined, and if found immediately\n\t\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\n\t\t\t\t * be used if defined, rather than throwing an error\n\t\t\t\t */\n\t\t\t\tvar fetchData = function (data, type, src) {\n\t\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\n\t\t\n\t\t\t\t\tif ( src !== \"\" ) {\n\t\t\t\t\t\tvar a = _fnSplitObjNotation( src );\n\t\t\n\t\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ ) {\n\t\t\t\t\t\t\t// Check if we are dealing with special notation\n\t\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\t\n\t\t\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\t\t\t// Array notation\n\t\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\n\t\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\n\t\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\n\t\t\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tout = [];\n\t\t\n\t\t\t\t\t\t\t\t// Get the remainder of the nested object to get\n\t\t\t\t\t\t\t\ta.splice( 0, i+1 );\n\t\t\t\t\t\t\t\tinnerSrc = a.join('.');\n\t\t\n\t\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\n\t\t\t\t\t\t\t\tif ( Array.isArray( data ) ) {\n\t\t\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\n\t\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\n\t\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\n\t\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\n\t\t\n\t\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\n\t\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ( funcNotation ) {\n\t\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\t\tdata = data[ a[i] ]();\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\tif (data === null || data[ a[i] ] === null) {\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ( data === undefined || data[ a[i] ] === undefined ) {\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\treturn data;\n\t\t\t\t};\n\t\t\n\t\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\t\treturn fetchData( data, type, source );\n\t\t\t\t};\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Array or flat object mapping\n\t\t\t\treturn function (data) { // row and meta also passed, but not used\n\t\t\t\t\treturn data[source];\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\t\n\t\tstripHtml: function (mixed) {\n\t\t\tvar type = typeof mixed;\n\t\n\t\t\tif (type === 'function') {\n\t\t\t\t_stripHtml = mixed;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (type === 'string') {\n\t\t\t\treturn _stripHtml(mixed);\n\t\t\t}\n\t\t\treturn mixed;\n\t\t},\n\t\n\t\tescapeHtml: function (mixed) {\n\t\t\tvar type = typeof mixed;\n\t\n\t\t\tif (type === 'function') {\n\t\t\t\t_escapeHtml = mixed;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (type === 'string' || Array.isArray(mixed)) {\n\t\t\t\treturn _escapeHtml(mixed);\n\t\t\t}\n\t\t\treturn mixed;\n\t\t},\n\t\n\t\tunique: _unique\n\t};\n\t\n\t\n\t\n\t/**\n\t * Create a mapping object that allows camel case parameters to be looked up\n\t * for their Hungarian counterparts. The mapping is stored in a private\n\t * parameter called `_hungarianMap` which can be accessed on the source object.\n\t *  @param {object} o\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnHungarianMap ( o )\n\t{\n\t\tvar\n\t\t\thungarian = 'a aa ai ao as b fn i m o s ',\n\t\t\tmatch,\n\t\t\tnewKey,\n\t\t\tmap = {};\n\t\n\t\t$.each( o, function (key) {\n\t\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\n\t\n\t\t\tif ( match && hungarian.indexOf(match[1]+' ') !== -1 )\n\t\t\t{\n\t\t\t\tnewKey = key.replace( match[0], match[2].toLowerCase() );\n\t\t\t\tmap[ newKey ] = key;\n\t\n\t\t\t\tif ( match[1] === 'o' )\n\t\t\t\t{\n\t\t\t\t\t_fnHungarianMap( o[key] );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t\n\t\to._hungarianMap = map;\n\t}\n\t\n\t\n\t/**\n\t * Convert from camel case parameters to Hungarian, based on a Hungarian map\n\t * created by _fnHungarianMap.\n\t *  @param {object} src The model object which holds all parameters that can be\n\t *    mapped.\n\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t *  @param {boolean} force When set to `true`, properties which already have a\n\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t *    won't be.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCamelToHungarian ( src, user, force )\n\t{\n\t\tif ( ! src._hungarianMap ) {\n\t\t\t_fnHungarianMap( src );\n\t\t}\n\t\n\t\tvar hungarianKey;\n\t\n\t\t$.each( user, function (key) {\n\t\t\thungarianKey = src._hungarianMap[ key ];\n\t\n\t\t\tif ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\n\t\t\t{\n\t\t\t\t// For objects, we need to buzz down into the object to copy parameters\n\t\t\t\tif ( hungarianKey.charAt(0) === 'o' )\n\t\t\t\t{\n\t\t\t\t\t// Copy the camelCase options over to the hungarian\n\t\t\t\t\tif ( ! user[ hungarianKey ] ) {\n\t\t\t\t\t\tuser[ hungarianKey ] = {};\n\t\t\t\t\t}\n\t\t\t\t\t$.extend( true, user[hungarianKey], user[key] );\n\t\n\t\t\t\t\t_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tuser[hungarianKey] = user[ key ];\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\t\n\t/**\n\t * Map one parameter onto another\n\t *  @param {object} o Object to map\n\t *  @param {*} knew The new parameter name\n\t *  @param {*} old The old parameter name\n\t */\n\tvar _fnCompatMap = function ( o, knew, old ) {\n\t\tif ( o[ knew ] !== undefined ) {\n\t\t\to[ old ] = o[ knew ];\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Provide backwards compatibility for the main DT options. Note that the new\n\t * options are mapped onto the old parameters, so this is an external interface\n\t * change only.\n\t *  @param {object} init Object to map\n\t */\n\tfunction _fnCompatOpts ( init )\n\t{\n\t\t_fnCompatMap( init, 'ordering',      'bSort' );\n\t\t_fnCompatMap( init, 'orderMulti',    'bSortMulti' );\n\t\t_fnCompatMap( init, 'orderClasses',  'bSortClasses' );\n\t\t_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\n\t\t_fnCompatMap( init, 'order',         'aaSorting' );\n\t\t_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\n\t\t_fnCompatMap( init, 'paging',        'bPaginate' );\n\t\t_fnCompatMap( init, 'pagingType',    'sPaginationType' );\n\t\t_fnCompatMap( init, 'pageLength',    'iDisplayLength' );\n\t\t_fnCompatMap( init, 'searching',     'bFilter' );\n\t\n\t\t// Boolean initialisation of x-scrolling\n\t\tif ( typeof init.sScrollX === 'boolean' ) {\n\t\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\n\t\t}\n\t\tif ( typeof init.scrollX === 'boolean' ) {\n\t\t\tinit.scrollX = init.scrollX ? '100%' : '';\n\t\t}\n\t\n\t\t// Column search objects are in an array, so it needs to be converted\n\t\t// element by element\n\t\tvar searchCols = init.aoSearchCols;\n\t\n\t\tif ( searchCols ) {\n\t\t\tfor ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\n\t\t\t\tif ( searchCols[i] ) {\n\t\t\t\t\t_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Enable search delay if server-side processing is enabled\n\t\tif (init.serverSide && ! init.searchDelay) {\n\t\t\tinit.searchDelay = 400;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Provide backwards compatibility for column options. Note that the new options\n\t * are mapped onto the old parameters, so this is an external interface change\n\t * only.\n\t *  @param {object} init Object to map\n\t */\n\tfunction _fnCompatCols ( init )\n\t{\n\t\t_fnCompatMap( init, 'orderable',     'bSortable' );\n\t\t_fnCompatMap( init, 'orderData',     'aDataSort' );\n\t\t_fnCompatMap( init, 'orderSequence', 'asSorting' );\n\t\t_fnCompatMap( init, 'orderDataType', 'sortDataType' );\n\t\n\t\t// orderData can be given as an integer\n\t\tvar dataSort = init.aDataSort;\n\t\tif ( typeof dataSort === 'number' && ! Array.isArray( dataSort ) ) {\n\t\t\tinit.aDataSort = [ dataSort ];\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Browser feature detection for capabilities, quirks\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBrowserDetect( settings )\n\t{\n\t\t// We don't need to do this every time DataTables is constructed, the values\n\t\t// calculated are specific to the browser and OS configuration which we\n\t\t// don't expect to change between initialisations\n\t\tif ( ! DataTable.__browser ) {\n\t\t\tvar browser = {};\n\t\t\tDataTable.__browser = browser;\n\t\n\t\t\t// Scrolling feature / quirks detection\n\t\t\tvar n = $('<div/>')\n\t\t\t\t.css( {\n\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: -1 * window.pageXOffset, // allow for scrolling\n\t\t\t\t\theight: 1,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\t\tleft: 1,\n\t\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\theight: 10\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t.appendTo( 'body' );\n\t\n\t\t\tvar outer = n.children();\n\t\t\tvar inner = outer.children();\n\t\n\t\t\t// Get scrollbar width\n\t\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\t\n\t\t\t// In rtl text layout, some browsers (most, but not all) will place the\n\t\t\t// scrollbar on the left, rather than the right.\n\t\t\tbrowser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\n\t\n\t\t\tn.remove();\n\t\t}\n\t\n\t\t$.extend( settings.oBrowser, DataTable.__browser );\n\t\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n\t}\n\t\n\t/**\n\t * Add a column to the list used for the table with default values\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddColumn( oSettings )\n\t{\n\t\t// Add column to aoColumns array\n\t\tvar oDefaults = DataTable.defaults.column;\n\t\tvar iCol = oSettings.aoColumns.length;\n\t\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\n\t\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n\t\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n\t\t\tidx: iCol,\n\t\t\tsearchFixed: {},\n\t\t\tcolEl: $('<col>').attr('data-dt-column', iCol)\n\t\t} );\n\t\toSettings.aoColumns.push( oCol );\n\t\n\t\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\n\t\t// passed into extend can be undefined. This allows the user to give a default\n\t\t// with only some of the parameters defined, and also not give a default\n\t\tvar searchCols = oSettings.aoPreSearchCols;\n\t\tsearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\n\t}\n\t\n\t\n\t/**\n\t * Apply options for a column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iCol column index to consider\n\t *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnOptions( oSettings, iCol, oOptions )\n\t{\n\t\tvar oCol = oSettings.aoColumns[ iCol ];\n\t\n\t\t/* User specified column options */\n\t\tif ( oOptions !== undefined && oOptions !== null )\n\t\t{\n\t\t\t// Backwards compatibility\n\t\t\t_fnCompatCols( oOptions );\n\t\n\t\t\t// Map camel case parameters to their Hungarian counterparts\n\t\t\t_fnCamelToHungarian( DataTable.defaults.column, oOptions, true );\n\t\n\t\t\t/* Backwards compatibility for mDataProp */\n\t\t\tif ( oOptions.mDataProp !== undefined && !oOptions.mData )\n\t\t\t{\n\t\t\t\toOptions.mData = oOptions.mDataProp;\n\t\t\t}\n\t\n\t\t\tif ( oOptions.sType )\n\t\t\t{\n\t\t\t\toCol._sManualType = oOptions.sType;\n\t\t\t}\n\t\t\n\t\t\t// `class` is a reserved word in Javascript, so we need to provide\n\t\t\t// the ability to use a valid name for the camel case input\n\t\t\tif ( oOptions.className && ! oOptions.sClass )\n\t\t\t{\n\t\t\t\toOptions.sClass = oOptions.className;\n\t\t\t}\n\t\n\t\t\tvar origClass = oCol.sClass;\n\t\n\t\t\t$.extend( oCol, oOptions );\n\t\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\n\t\n\t\t\t// Merge class from previously defined classes with this one, rather than just\n\t\t\t// overwriting it in the extend above\n\t\t\tif (origClass !== oCol.sClass) {\n\t\t\t\toCol.sClass = origClass + ' ' + oCol.sClass;\n\t\t\t}\n\t\n\t\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\n\t\t\t * priority if defined\n\t\t\t */\n\t\t\tif ( oOptions.iDataSort !== undefined )\n\t\t\t{\n\t\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\n\t\t\t}\n\t\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\n\t\t}\n\t\n\t\t/* Cache the data get and set functions for speed */\n\t\tvar mDataSrc = oCol.mData;\n\t\tvar mData = _fnGetObjectDataFn( mDataSrc );\n\t\n\t\t// The `render` option can be given as an array to access the helper rendering methods.\n\t\t// The first element is the rendering method to use, the rest are the parameters to pass\n\t\tif ( oCol.mRender && Array.isArray( oCol.mRender ) ) {\n\t\t\tvar copy = oCol.mRender.slice();\n\t\t\tvar name = copy.shift();\n\t\n\t\t\toCol.mRender = DataTable.render[name].apply(window, copy);\n\t\t}\n\t\n\t\toCol._render = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\n\t\n\t\tvar attrTest = function( src ) {\n\t\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\n\t\t};\n\t\toCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\n\t\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\n\t\t);\n\t\toCol._setter = null;\n\t\n\t\toCol.fnGetData = function (rowData, type, meta) {\n\t\t\tvar innerData = mData( rowData, type, undefined, meta );\n\t\n\t\t\treturn oCol._render && type ?\n\t\t\t\toCol._render( innerData, type, rowData, meta ) :\n\t\t\t\tinnerData;\n\t\t};\n\t\toCol.fnSetData = function ( rowData, val, meta ) {\n\t\t\treturn _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\n\t\t};\n\t\n\t\t// Indicate if DataTables should read DOM data as an object or array\n\t\t// Used in _fnGetRowElements\n\t\tif ( typeof mDataSrc !== 'number' && ! oCol._isArrayHost ) {\n\t\t\toSettings._rowReadObject = true;\n\t\t}\n\t\n\t\t/* Feature sorting overrides column specific when off */\n\t\tif ( !oSettings.oFeatures.bSort )\n\t\t{\n\t\t\toCol.bSortable = false;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Adjust the table column widths for new data. Note: you would probably want to\n\t * do a redraw after calling this function!\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAdjustColumnSizing ( settings )\n\t{\n\t\t_fnCalculateColumnWidths( settings );\n\t\t_fnColumnSizes( settings );\n\t\n\t\tvar scroll = settings.oScroll;\n\t\tif ( scroll.sY !== '' || scroll.sX !== '') {\n\t\t\t_fnScrollDraw( settings );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'column-sizing', [settings] );\n\t}\n\t\n\t/**\n\t * Apply column sizes\n\t *\n\t * @param {*} settings DataTables settings object\n\t */\n\tfunction _fnColumnSizes ( settings )\n\t{\n\t\tvar cols = settings.aoColumns;\n\t\n\t\tfor (var i=0 ; i<cols.length ; i++) {\n\t\t\tvar width = _fnColumnsSumWidth(settings, [i], false, false);\n\t\n\t\t\tcols[i].colEl.css('width', width);\n\t\n\t\t\tif (settings.oScroll.sX) {\n\t\t\t\tcols[i].colEl.css('min-width', width);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Convert the index of a visible column to the index in the data array (take account\n\t * of hidden columns)\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iMatch Visible column index to lookup\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisibleToColumnIndex( oSettings, iMatch )\n\t{\n\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\t\n\t\treturn typeof aiVis[iMatch] === 'number' ?\n\t\t\taiVis[iMatch] :\n\t\t\tnull;\n\t}\n\t\n\t\n\t/**\n\t * Convert the index of an index in the data array and convert it to the visible\n\t *   column index (take account of hidden columns)\n\t *  @param {int} iMatch Column index to lookup\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnIndexToVisible( oSettings, iMatch )\n\t{\n\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\t\tvar iPos = aiVis.indexOf(iMatch);\n\t\n\t\treturn iPos !== -1 ? iPos : null;\n\t}\n\t\n\t\n\t/**\n\t * Get the number of visible columns\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the number of visible columns\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisbleColumns( settings )\n\t{\n\t\tvar layout = settings.aoHeader;\n\t\tvar columns = settings.aoColumns;\n\t\tvar vis = 0;\n\t\n\t\tif ( layout.length ) {\n\t\t\tfor ( var i=0, ien=layout[0].length ; i<ien ; i++ ) {\n\t\t\t\tif ( columns[i].bVisible && $(layout[0][i].cell).css('display') !== 'none' ) {\n\t\t\t\t\tvis++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn vis;\n\t}\n\t\n\t\n\t/**\n\t * Get an array of column indexes that match a given property\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sParam Parameter in aoColumns to look for - typically\n\t *    bVisible or bSearchable\n\t *  @returns {array} Array of indexes with matched properties\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetColumns( oSettings, sParam )\n\t{\n\t\tvar a = [];\n\t\n\t\toSettings.aoColumns.map( function(val, i) {\n\t\t\tif ( val[sParam] ) {\n\t\t\t\ta.push( i );\n\t\t\t}\n\t\t} );\n\t\n\t\treturn a;\n\t}\n\t\n\t/**\n\t * Allow the result from a type detection function to be `true` while\n\t * translating that into a string. Old type detection functions will\n\t * return the type name if it passes. An obect store would be better,\n\t * but not backwards compatible.\n\t *\n\t * @param {*} typeDetect Object or function for type detection\n\t * @param {*} res Result from the type detection function\n\t * @returns Type name or false\n\t */\n\tfunction _typeResult (typeDetect, res) {\n\t\treturn res === true\n\t\t\t? typeDetect._name\n\t\t\t: res;\n\t}\n\t\n\t/**\n\t * Calculate the 'type' of a column\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnTypes ( settings )\n\t{\n\t\tvar columns = settings.aoColumns;\n\t\tvar data = settings.aoData;\n\t\tvar types = DataTable.ext.type.detect;\n\t\tvar i, ien, j, jen, k, ken;\n\t\tvar col, detectedType, cache;\n\t\n\t\t// For each column, spin over the data type detection functions, seeing if one matches\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tcol = columns[i];\n\t\t\tcache = [];\n\t\n\t\t\tif ( ! col.sType && col._sManualType ) {\n\t\t\t\tcol.sType = col._sManualType;\n\t\t\t}\n\t\t\telse if ( ! col.sType ) {\n\t\t\t\t// With SSP type detection can be unreliable and error prone, so we provide a way\n\t\t\t\t// to turn it off.\n\t\t\t\tif (! settings.typeDetect) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tfor ( j=0, jen=types.length ; j<jen ; j++ ) {\n\t\t\t\t\tvar typeDetect = types[j];\n\t\n\t\t\t\t\t// There can be either one, or three type detection functions\n\t\t\t\t\tvar oneOf = typeDetect.oneOf;\n\t\t\t\t\tvar allOf = typeDetect.allOf || typeDetect;\n\t\t\t\t\tvar init = typeDetect.init;\n\t\t\t\t\tvar one = false;\n\t\n\t\t\t\t\tdetectedType = null;\n\t\n\t\t\t\t\t// Fast detect based on column assignment\n\t\t\t\t\tif (init) {\n\t\t\t\t\t\tdetectedType = _typeResult(typeDetect, init(settings, col, i));\n\t\n\t\t\t\t\t\tif (detectedType) {\n\t\t\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfor ( k=0, ken=data.length ; k<ken ; k++ ) {\n\t\t\t\t\t\tif (! data[k]) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Use a cache array so we only need to get the type data\n\t\t\t\t\t\t// from the formatter once (when using multiple detectors)\n\t\t\t\t\t\tif ( cache[k] === undefined ) {\n\t\t\t\t\t\t\tcache[k] = _fnGetCellData( settings, k, i, 'type' );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Only one data point in the column needs to match this function\n\t\t\t\t\t\tif (oneOf && ! one) {\n\t\t\t\t\t\t\tone = _typeResult(typeDetect, oneOf( cache[k], settings ));\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// All data points need to match this function\n\t\t\t\t\t\tdetectedType = _typeResult(typeDetect, allOf( cache[k], settings ));\n\t\n\t\t\t\t\t\t// If null, then this type can't apply to this column, so\n\t\t\t\t\t\t// rather than testing all cells, break out. There is an\n\t\t\t\t\t\t// exception for the last type which is `html`. We need to\n\t\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\n\t\t\t\t\t\t// types\n\t\t\t\t\t\tif ( ! detectedType && j !== types.length-3 ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Only a single match is needed for html type since it is\n\t\t\t\t\t\t// bottom of the pile and very similar to string - but it\n\t\t\t\t\t\t// must not be empty\n\t\t\t\t\t\tif ( detectedType === 'html' && ! _empty(cache[k]) ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Type is valid for all data points in the column - use this\n\t\t\t\t\t// type\n\t\t\t\t\tif ( (oneOf && one && detectedType) || (!oneOf && detectedType) ) {\n\t\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Fall back - if no type was detected, always use string\n\t\t\t\tif ( ! col.sType ) {\n\t\t\t\t\tcol.sType = 'string';\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Set class names for header / footer for auto type classes\n\t\t\tvar autoClass = _ext.type.className[col.sType];\n\t\n\t\t\tif (autoClass) {\n\t\t\t\t_columnAutoClass(settings.aoHeader, i, autoClass);\n\t\t\t\t_columnAutoClass(settings.aoFooter, i, autoClass);\n\t\t\t}\n\t\n\t\t\tvar renderer = _ext.type.render[col.sType];\n\t\n\t\t\t// This can only happen once! There is no way to remove\n\t\t\t// a renderer. After the first time the renderer has\n\t\t\t// already been set so createTr will run the renderer itself.\n\t\t\tif (renderer && ! col._render) {\n\t\t\t\tcol._render = DataTable.util.get(renderer);\n\t\n\t\t\t\t_columnAutoRender(settings, i);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Apply an auto detected renderer to data which doesn't yet have\n\t * a renderer\n\t */\n\tfunction _columnAutoRender(settings, colIdx) {\n\t\tvar data = settings.aoData;\n\t\n\t\tfor (var i=0 ; i<data.length ; i++) {\n\t\t\tif (data[i].nTr) {\n\t\t\t\t// We have to update the display here since there is no\n\t\t\t\t// invalidation check for the data\n\t\t\t\tvar display = _fnGetCellData( settings, i, colIdx, 'display' );\n\t\n\t\t\t\tdata[i].displayData[colIdx] = display;\n\t\t\t\t_fnWriteCell(data[i].anCells[colIdx], display);\n\t\n\t\t\t\t// No need to update sort / filter data since it has\n\t\t\t\t// been invalidated and will be re-read with the\n\t\t\t\t// renderer now applied\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Apply a class name to a column's header cells\n\t */\n\tfunction _columnAutoClass(container, colIdx, className) {\n\t\tcontainer.forEach(function (row) {\n\t\t\tif (row[colIdx] && row[colIdx].unique) {\n\t\t\t\t_addClass(row[colIdx].cell, className);\n\t\t\t}\n\t\t});\n\t}\n\t\n\t/**\n\t * Take the column definitions and static columns arrays and calculate how\n\t * they relate to column indexes. The callback function will then apply the\n\t * definition found for a column to a suitable configuration object.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n\t *  @param {array} aoCols The aoColumns array that defines columns individually\n\t *  @param {array} headerLayout Layout for header as it was loaded\n\t *  @param {function} fn Callback function - takes two parameters, the calculated\n\t *    column index and the definition for that column.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, headerLayout, fn )\n\t{\n\t\tvar i, iLen, j, jLen, k, kLen, def;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\tif ( aoCols ) {\n\t\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ ) {\n\t\t\t\tif (aoCols[i] && aoCols[i].name) {\n\t\t\t\t\tcolumns[i].sName = aoCols[i].name;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Column definitions with aTargets\n\t\tif ( aoColDefs )\n\t\t{\n\t\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\n\t\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\n\t\t\t{\n\t\t\t\tdef = aoColDefs[i];\n\t\n\t\t\t\t/* Each definition can target multiple columns, as it is an array */\n\t\t\t\tvar aTargets = def.target !== undefined\n\t\t\t\t\t? def.target\n\t\t\t\t\t: def.targets !== undefined\n\t\t\t\t\t\t? def.targets\n\t\t\t\t\t\t: def.aTargets;\n\t\n\t\t\t\tif ( ! Array.isArray( aTargets ) )\n\t\t\t\t{\n\t\t\t\t\taTargets = [ aTargets ];\n\t\t\t\t}\n\t\n\t\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\n\t\t\t\t{\n\t\t\t\t\tvar target = aTargets[j];\n\t\n\t\t\t\t\tif ( typeof target === 'number' && target >= 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Add columns that we don't yet know about */\n\t\t\t\t\t\twhile( columns.length <= target )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_fnAddColumn( oSettings );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t/* Integer, basic index */\n\t\t\t\t\t\tfn( target, def );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( typeof target === 'number' && target < 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Negative integer, right to left column counting */\n\t\t\t\t\t\tfn( columns.length+target, def );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( typeof target === 'string' )\n\t\t\t\t\t{\n\t\t\t\t\t\tfor ( k=0, kLen=columns.length ; k<kLen ; k++ ) {\n\t\t\t\t\t\t\tif (target === '_all') {\n\t\t\t\t\t\t\t\t// Apply to all columns\n\t\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (target.indexOf(':name') !== -1) {\n\t\t\t\t\t\t\t\t// Column selector\n\t\t\t\t\t\t\t\tif (columns[k].sName === target.replace(':name', '')) {\n\t\t\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// Cell selector\n\t\t\t\t\t\t\t\theaderLayout.forEach(function (row) {\n\t\t\t\t\t\t\t\t\tif (row[k]) {\n\t\t\t\t\t\t\t\t\t\tvar cell = $(row[k].cell);\n\t\n\t\t\t\t\t\t\t\t\t\t// Legacy support. Note that it means that we don't support\n\t\t\t\t\t\t\t\t\t\t// an element name selector only, since they are treated as\n\t\t\t\t\t\t\t\t\t\t// class names for 1.x compat.\n\t\t\t\t\t\t\t\t\t\tif (target.match(/^[a-z][\\w-]*$/i)) {\n\t\t\t\t\t\t\t\t\t\t\ttarget = '.' + target;\n\t\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\t\tif (cell.is( target )) {\n\t\t\t\t\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Statically defined columns array\n\t\tif ( aoCols ) {\n\t\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ ) {\n\t\t\t\tfn( i, aoCols[i] );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Get the width for a given set of columns\n\t *\n\t * @param {*} settings DataTables settings object\n\t * @param {*} targets Columns - comma separated string or array of numbers\n\t * @param {*} original Use the original width (true) or calculated (false)\n\t * @param {*} incVisible Include visible columns (true) or not (false)\n\t * @returns Combined CSS value\n\t */\n\tfunction _fnColumnsSumWidth( settings, targets, original, incVisible ) {\n\t\tif ( ! Array.isArray( targets ) ) {\n\t\t\ttargets = _fnColumnsFromHeader( targets );\n\t\t}\n\t\n\t\tvar sum = 0;\n\t\tvar unit;\n\t\tvar columns = settings.aoColumns;\n\t\t\n\t\tfor ( var i=0, ien=targets.length ; i<ien ; i++ ) {\n\t\t\tvar column = columns[ targets[i] ];\n\t\t\tvar definedWidth = original ?\n\t\t\t\tcolumn.sWidthOrig :\n\t\t\t\tcolumn.sWidth;\n\t\n\t\t\tif ( ! incVisible && column.bVisible === false ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\tif ( definedWidth === null || definedWidth === undefined ) {\n\t\t\t\treturn null; // can't determine a defined width - browser defined\n\t\t\t}\n\t\t\telse if ( typeof definedWidth === 'number' ) {\n\t\t\t\tunit = 'px';\n\t\t\t\tsum += definedWidth;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar matched = definedWidth.match(/([\\d\\.]+)([^\\d]*)/);\n\t\n\t\t\t\tif ( matched ) {\n\t\t\t\t\tsum += matched[1] * 1;\n\t\t\t\t\tunit = matched.length === 3 ?\n\t\t\t\t\t\tmatched[2] :\n\t\t\t\t\t\t'px';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn sum + unit;\n\t}\n\t\n\tfunction _fnColumnsFromHeader( cell )\n\t{\n\t\tvar attr = $(cell).closest('[data-dt-column]').attr('data-dt-column');\n\t\n\t\tif ( ! attr ) {\n\t\t\treturn [];\n\t\t}\n\t\n\t\treturn attr.split(',').map( function (val) {\n\t\t\treturn val * 1;\n\t\t} );\n\t}\n\t/**\n\t * Add a data array to the table, creating DOM node etc. This is the parallel to\n\t * _fnGatherData, but for adding rows from a Javascript source, rather than a\n\t * DOM source.\n\t *  @param {object} settings dataTables settings object\n\t *  @param {array} data data array to be added\n\t *  @param {node} [tr] TR element to add to the table - optional. If not given,\n\t *    DataTables will create a row automatically\n\t *  @param {array} [tds] Array of TD|TH elements for the row - must be given\n\t *    if nTr is.\n\t *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddData ( settings, dataIn, tr, tds )\n\t{\n\t\t/* Create the object for storing information about this new row */\n\t\tvar rowIdx = settings.aoData.length;\n\t\tvar rowModel = $.extend( true, {}, DataTable.models.oRow, {\n\t\t\tsrc: tr ? 'dom' : 'data',\n\t\t\tidx: rowIdx\n\t\t} );\n\t\n\t\trowModel._aData = dataIn;\n\t\tsettings.aoData.push( rowModel );\n\t\n\t\tvar columns = settings.aoColumns;\n\t\n\t\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\t// Invalidate the column types as the new data needs to be revalidated\n\t\t\tcolumns[i].sType = null;\n\t\t}\n\t\n\t\t/* Add to the display array */\n\t\tsettings.aiDisplayMaster.push( rowIdx );\n\t\n\t\tvar id = settings.rowIdFn( dataIn );\n\t\tif ( id !== undefined ) {\n\t\t\tsettings.aIds[ id ] = rowModel;\n\t\t}\n\t\n\t\t/* Create the DOM information, or register it if already present */\n\t\tif ( tr || ! settings.oFeatures.bDeferRender )\n\t\t{\n\t\t\t_fnCreateTr( settings, rowIdx, tr, tds );\n\t\t}\n\t\n\t\treturn rowIdx;\n\t}\n\t\n\t\n\t/**\n\t * Add one or more TR elements to the table. Generally we'd expect to\n\t * use this for reading data from a DOM sourced table, but it could be\n\t * used for an TR element. Note that if a TR is given, it is used (i.e.\n\t * it is not cloned).\n\t *  @param {object} settings dataTables settings object\n\t *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n\t *  @returns {array} Array of indexes for the added rows\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddTr( settings, trs )\n\t{\n\t\tvar row;\n\t\n\t\t// Allow an individual node to be passed in\n\t\tif ( ! (trs instanceof $) ) {\n\t\t\ttrs = $(trs);\n\t\t}\n\t\n\t\treturn trs.map( function (i, el) {\n\t\t\trow = _fnGetRowElements( settings, el );\n\t\t\treturn _fnAddData( settings, row.data, el, row.cells );\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Get the data for a given cell from the internal cache, taking into account data mapping\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} rowIdx aoData row id\n\t *  @param {int} colIdx Column index\n\t *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')\n\t *  @returns {*} Cell data\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetCellData( settings, rowIdx, colIdx, type )\n\t{\n\t\tif (type === 'search') {\n\t\t\ttype = 'filter';\n\t\t}\n\t\telse if (type === 'order') {\n\t\t\ttype = 'sort';\n\t\t}\n\t\n\t\tvar row = settings.aoData[rowIdx];\n\t\n\t\tif (! row) {\n\t\t\treturn undefined;\n\t\t}\n\t\n\t\tvar draw           = settings.iDraw;\n\t\tvar col            = settings.aoColumns[colIdx];\n\t\tvar rowData        = row._aData;\n\t\tvar defaultContent = col.sDefaultContent;\n\t\tvar cellData       = col.fnGetData( rowData, type, {\n\t\t\tsettings: settings,\n\t\t\trow:      rowIdx,\n\t\t\tcol:      colIdx\n\t\t} );\n\t\n\t\t// Allow for a node being returned for non-display types\n\t\tif (type !== 'display' && cellData && typeof cellData === 'object' && cellData.nodeName) {\n\t\t\tcellData = cellData.innerHTML;\n\t\t}\n\t\n\t\tif ( cellData === undefined ) {\n\t\t\tif ( settings.iDrawError != draw && defaultContent === null ) {\n\t\t\t\t_fnLog( settings, 0, \"Requested unknown parameter \"+\n\t\t\t\t\t(typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\n\t\t\t\t\t\" for row \"+rowIdx+\", column \"+colIdx, 4 );\n\t\t\t\tsettings.iDrawError = draw;\n\t\t\t}\n\t\t\treturn defaultContent;\n\t\t}\n\t\n\t\t// When the data source is null and a specific data type is requested (i.e.\n\t\t// not the original data), we can use default column data\n\t\tif ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\n\t\t\tcellData = defaultContent;\n\t\t}\n\t\telse if ( typeof cellData === 'function' ) {\n\t\t\t// If the data source is a function, then we run it and use the return,\n\t\t\t// executing in the scope of the data object (for instances)\n\t\t\treturn cellData.call( rowData );\n\t\t}\n\t\n\t\tif ( cellData === null && type === 'display' ) {\n\t\t\treturn '';\n\t\t}\n\t\n\t\tif ( type === 'filter' ) {\n\t\t\tvar fomatters = DataTable.ext.type.search;\n\t\n\t\t\tif ( fomatters[ col.sType ] ) {\n\t\t\t\tcellData = fomatters[ col.sType ]( cellData );\n\t\t\t}\n\t\t}\n\t\n\t\treturn cellData;\n\t}\n\t\n\t\n\t/**\n\t * Set the value for a specific cell, into the internal data cache\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} rowIdx aoData row id\n\t *  @param {int} colIdx Column index\n\t *  @param {*} val Value to set\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSetCellData( settings, rowIdx, colIdx, val )\n\t{\n\t\tvar col     = settings.aoColumns[colIdx];\n\t\tvar rowData = settings.aoData[rowIdx]._aData;\n\t\n\t\tcol.fnSetData( rowData, val, {\n\t\t\tsettings: settings,\n\t\t\trow:      rowIdx,\n\t\t\tcol:      colIdx\n\t\t}  );\n\t}\n\t\n\t/**\n\t * Write a value to a cell\n\t * @param {*} td Cell\n\t * @param {*} val Value\n\t */\n\tfunction _fnWriteCell(td, val)\n\t{\n\t\tif (val && typeof val === 'object' && val.nodeName) {\n\t\t\t$(td)\n\t\t\t\t.empty()\n\t\t\t\t.append(val);\n\t\t}\n\t\telse {\n\t\t\ttd.innerHTML = val;\n\t\t}\n\t}\n\t\n\t\n\t// Private variable that is used to match action syntax in the data property object\n\tvar __reArray = /\\[.*?\\]$/;\n\tvar __reFn = /\\(\\)$/;\n\t\n\t/**\n\t * Split string on periods, taking into account escaped periods\n\t * @param  {string} str String to split\n\t * @return {array} Split string\n\t */\n\tfunction _fnSplitObjNotation( str )\n\t{\n\t\tvar parts = str.match(/(\\\\.|[^.])+/g) || [''];\n\t\n\t\treturn parts.map( function ( s ) {\n\t\t\treturn s.replace(/\\\\\\./g, '.');\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Return a function that can be used to get data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data get function\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnGetObjectDataFn = DataTable.util.get;\n\t\n\t\n\t/**\n\t * Return a function that can be used to set data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data set function\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnSetObjectDataFn = DataTable.util.set;\n\t\n\t\n\t/**\n\t * Return an array with the full table data\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns array {array} aData Master data array\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetDataMaster ( settings )\n\t{\n\t\treturn _pluck( settings.aoData, '_aData' );\n\t}\n\t\n\t\n\t/**\n\t * Nuke the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnClearTable( settings )\n\t{\n\t\tsettings.aoData.length = 0;\n\t\tsettings.aiDisplayMaster.length = 0;\n\t\tsettings.aiDisplay.length = 0;\n\t\tsettings.aIds = {};\n\t}\n\t\n\t\n\t/**\n\t * Mark cached data as invalid such that a re-read of the data will occur when\n\t * the cached data is next requested. Also update from the data source object.\n\t *\n\t * @param {object} settings DataTables settings object\n\t * @param {int}    rowIdx   Row index to invalidate\n\t * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n\t *     or 'data'\n\t * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n\t *     row will be invalidated\n\t * @memberof DataTable#oApi\n\t *\n\t * @todo For the modularisation of v1.11 this will need to become a callback, so\n\t *   the sort and filter methods can subscribe to it. That will required\n\t *   initialisation options for sorting, which is why it is not already baked in\n\t */\n\tfunction _fnInvalidate( settings, rowIdx, src, colIdx )\n\t{\n\t\tvar row = settings.aoData[ rowIdx ];\n\t\tvar i, ien;\n\t\n\t\t// Remove the cached data for the row\n\t\trow._aSortData = null;\n\t\trow._aFilterData = null;\n\t\trow.displayData = null;\n\t\n\t\t// Are we reading last data from DOM or the data object?\n\t\tif ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\n\t\t\t// Read the data from the DOM\n\t\t\trow._aData = _fnGetRowElements(\n\t\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\n\t\t\t\t)\n\t\t\t\t.data;\n\t\t}\n\t\telse {\n\t\t\t// Reading from data object, update the DOM\n\t\t\tvar cells = row.anCells;\n\t\t\tvar display = _fnGetRowDisplay(settings, rowIdx);\n\t\n\t\t\tif ( cells ) {\n\t\t\t\tif ( colIdx !== undefined ) {\n\t\t\t\t\t_fnWriteCell(cells[colIdx], display[colIdx]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\t\t\t_fnWriteCell(cells[i], display[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Column specific invalidation\n\t\tvar cols = settings.aoColumns;\n\t\tif ( colIdx !== undefined ) {\n\t\t\t// Type - the data might have changed\n\t\t\tcols[ colIdx ].sType = null;\n\t\n\t\t\t// Max length string. Its a fairly cheep recalculation, so not worth\n\t\t\t// something more complicated\n\t\t\tcols[ colIdx ].maxLenString = null;\n\t\t}\n\t\telse {\n\t\t\tfor ( i=0, ien=cols.length ; i<ien ; i++ ) {\n\t\t\t\tcols[i].sType = null;\n\t\t\t\tcols[i].maxLenString = null;\n\t\t\t}\n\t\n\t\t\t// Update DataTables special `DT_*` attributes for the row\n\t\t\t_fnRowAttributes( settings, row );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Build a data source object from an HTML row, reading the contents of the\n\t * cells that are in the row.\n\t *\n\t * @param {object} settings DataTables settings object\n\t * @param {node|object} TR element from which to read data or existing row\n\t *   object from which to re-read the data from the cells\n\t * @param {int} [colIdx] Optional column index\n\t * @param {array|object} [d] Data source object. If `colIdx` is given then this\n\t *   parameter should also be given and will be used to write the data into.\n\t *   Only the column in question will be written\n\t * @returns {object} Object with two parameters: `data` the data read, in\n\t *   document order, and `cells` and array of nodes (they can be useful to the\n\t *   caller, so rather than needing a second traversal to get them, just return\n\t *   them from here).\n\t * @memberof DataTable#oApi\n\t */\n\tfunction _fnGetRowElements( settings, row, colIdx, d )\n\t{\n\t\tvar\n\t\t\ttds = [],\n\t\t\ttd = row.firstChild,\n\t\t\tname, col, i=0, contents,\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tobjectRead = settings._rowReadObject;\n\t\n\t\t// Allow the data object to be passed in, or construct\n\t\td = d !== undefined ?\n\t\t\td :\n\t\t\tobjectRead ?\n\t\t\t\t{} :\n\t\t\t\t[];\n\t\n\t\tvar attr = function ( str, td  ) {\n\t\t\tif ( typeof str === 'string' ) {\n\t\t\t\tvar idx = str.indexOf('@');\n\t\n\t\t\t\tif ( idx !== -1 ) {\n\t\t\t\t\tvar attr = str.substring( idx+1 );\n\t\t\t\t\tvar setter = _fnSetObjectDataFn( str );\n\t\t\t\t\tsetter( d, td.getAttribute( attr ) );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t// Read data from a cell and store into the data object\n\t\tvar cellProcess = function ( cell ) {\n\t\t\tif ( colIdx === undefined || colIdx === i ) {\n\t\t\t\tcol = columns[i];\n\t\t\t\tcontents = (cell.innerHTML).trim();\n\t\n\t\t\t\tif ( col && col._bAttrSrc ) {\n\t\t\t\t\tvar setter = _fnSetObjectDataFn( col.mData._ );\n\t\t\t\t\tsetter( d, contents );\n\t\n\t\t\t\t\tattr( col.mData.sort, cell );\n\t\t\t\t\tattr( col.mData.type, cell );\n\t\t\t\t\tattr( col.mData.filter, cell );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Depending on the `data` option for the columns the data can\n\t\t\t\t\t// be read to either an object or an array.\n\t\t\t\t\tif ( objectRead ) {\n\t\t\t\t\t\tif ( ! col._setter ) {\n\t\t\t\t\t\t\t// Cache the setter function\n\t\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn( col.mData );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcol._setter( d, contents );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\td[i] = contents;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\ti++;\n\t\t};\n\t\n\t\tif ( td ) {\n\t\t\t// `tr` element was passed in\n\t\t\twhile ( td ) {\n\t\t\t\tname = td.nodeName.toUpperCase();\n\t\n\t\t\t\tif ( name == \"TD\" || name == \"TH\" ) {\n\t\t\t\t\tcellProcess( td );\n\t\t\t\t\ttds.push( td );\n\t\t\t\t}\n\t\n\t\t\t\ttd = td.nextSibling;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Existing row object passed in\n\t\t\ttds = row.anCells;\n\t\n\t\t\tfor ( var j=0, jen=tds.length ; j<jen ; j++ ) {\n\t\t\t\tcellProcess( tds[j] );\n\t\t\t}\n\t\t}\n\t\n\t\t// Read the ID from the DOM if present\n\t\tvar rowNode = row.firstChild ? row : row.nTr;\n\t\n\t\tif ( rowNode ) {\n\t\t\tvar id = rowNode.getAttribute( 'id' );\n\t\n\t\t\tif ( id ) {\n\t\t\t\t_fnSetObjectDataFn( settings.rowId )( d, id );\n\t\t\t}\n\t\t}\n\t\n\t\treturn {\n\t\t\tdata: d,\n\t\t\tcells: tds\n\t\t};\n\t}\n\t\n\t/**\n\t * Render and cache a row's display data for the columns, if required\n\t * @returns \n\t */\n\tfunction _fnGetRowDisplay (settings, rowIdx) {\n\t\tvar rowModal = settings.aoData[rowIdx];\n\t\tvar columns = settings.aoColumns;\n\t\n\t\tif (! rowModal.displayData) {\n\t\t\t// Need to render and cache\n\t\t\trowModal.displayData = [];\n\t\t\n\t\t\tfor ( var colIdx=0, len=columns.length ; colIdx<len ; colIdx++ ) {\n\t\t\t\trowModal.displayData.push(\n\t\t\t\t\t_fnGetCellData( settings, rowIdx, colIdx, 'display' )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\n\t\treturn rowModal.displayData;\n\t}\n\t\n\t/**\n\t * Create a new TR element (and it's TD children) for a row\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow Row to consider\n\t *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n\t *    DataTables will create a row automatically\n\t *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n\t *    if nTr is.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\n\t{\n\t\tvar\n\t\t\trow = oSettings.aoData[iRow],\n\t\t\trowData = row._aData,\n\t\t\tcells = [],\n\t\t\tnTr, nTd, oCol,\n\t\t\ti, iLen, create,\n\t\t\ttrClass = oSettings.oClasses.tbody.row;\n\t\n\t\tif ( row.nTr === null )\n\t\t{\n\t\t\tnTr = nTrIn || document.createElement('tr');\n\t\n\t\t\trow.nTr = nTr;\n\t\t\trow.anCells = cells;\n\t\n\t\t\t_addClass(nTr, trClass);\n\t\n\t\t\t/* Use a private property on the node to allow reserve mapping from the node\n\t\t\t * to the aoData array for fast look up\n\t\t\t */\n\t\t\tnTr._DT_RowIndex = iRow;\n\t\n\t\t\t/* Special parameters can be given by the data source to be used on the row */\n\t\t\t_fnRowAttributes( oSettings, row );\n\t\n\t\t\t/* Process each column */\n\t\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\toCol = oSettings.aoColumns[i];\n\t\t\t\tcreate = nTrIn && anTds[i] ? false : true;\n\t\n\t\t\t\tnTd = create ? document.createElement( oCol.sCellType ) : anTds[i];\n\t\n\t\t\t\tif (! nTd) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t\t}\n\t\n\t\t\t\tnTd._DT_CellIndex = {\n\t\t\t\t\trow: iRow,\n\t\t\t\t\tcolumn: i\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tcells.push( nTd );\n\t\t\t\t\n\t\t\t\tvar display = _fnGetRowDisplay(oSettings, iRow);\n\t\n\t\t\t\t// Need to create the HTML if new, or if a rendering function is defined\n\t\t\t\tif (\n\t\t\t\t\tcreate ||\n\t\t\t\t\t(\n\t\t\t\t\t\t(oCol.mRender || oCol.mData !== i) &&\n\t\t\t\t\t\t(!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\t_fnWriteCell(nTd, display[i]);\n\t\t\t\t}\n\t\n\t\t\t\t// column class\n\t\t\t\t_addClass(nTd, oCol.sClass);\n\t\n\t\t\t\t// Visibility - add or remove as required\n\t\t\t\tif ( oCol.bVisible && create )\n\t\t\t\t{\n\t\t\t\t\tnTr.appendChild( nTd );\n\t\t\t\t}\n\t\t\t\telse if ( ! oCol.bVisible && ! create )\n\t\t\t\t{\n\t\t\t\t\tnTd.parentNode.removeChild( nTd );\n\t\t\t\t}\n\t\n\t\t\t\tif ( oCol.fnCreatedCell )\n\t\t\t\t{\n\t\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\n\t\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', 'row-created', [nTr, rowData, iRow, cells] );\n\t\t}\n\t\telse {\n\t\t\t_addClass(row.nTr, trClass);\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Add attributes to a row based on the special `DT_*` parameters in a data\n\t * source object.\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} DataTables row object for the row to be modified\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnRowAttributes( settings, row )\n\t{\n\t\tvar tr = row.nTr;\n\t\tvar data = row._aData;\n\t\n\t\tif ( tr ) {\n\t\t\tvar id = settings.rowIdFn( data );\n\t\n\t\t\tif ( id ) {\n\t\t\t\ttr.id = id;\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowClass ) {\n\t\t\t\t// Remove any classes added by DT_RowClass before\n\t\t\t\tvar a = data.DT_RowClass.split(' ');\n\t\t\t\trow.__rowc = row.__rowc ?\n\t\t\t\t\t_unique( row.__rowc.concat( a ) ) :\n\t\t\t\t\ta;\n\t\n\t\t\t\t$(tr)\n\t\t\t\t\t.removeClass( row.__rowc.join(' ') )\n\t\t\t\t\t.addClass( data.DT_RowClass );\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowAttr ) {\n\t\t\t\t$(tr).attr( data.DT_RowAttr );\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowData ) {\n\t\t\t\t$(tr).data( data.DT_RowData );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Create the HTML header for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBuildHead( settings, side )\n\t{\n\t\tvar classes = settings.oClasses;\n\t\tvar columns = settings.aoColumns;\n\t\tvar i, ien, row;\n\t\tvar target = side === 'header'\n\t\t\t? settings.nTHead\n\t\t\t: settings.nTFoot;\n\t\tvar titleProp = side === 'header' ? 'sTitle' : side;\n\t\n\t\t// Footer might be defined\n\t\tif (! target) {\n\t\t\treturn;\n\t\t}\n\t\n\t\t// If no cells yet and we have content for them, then create\n\t\tif (side === 'header' || _pluck(settings.aoColumns, titleProp).join('')) {\n\t\t\trow = $('tr', target);\n\t\n\t\t\t// Add a row if needed\n\t\t\tif (! row.length) {\n\t\t\t\trow = $('<tr/>').appendTo(target)\n\t\t\t}\n\t\n\t\t\t// Add the number of cells needed to make up to the number of columns\n\t\t\tif (row.length === 1) {\n\t\t\t\tvar cellCount = 0;\n\t\t\t\t\n\t\t\t\t$('td, th', row).each(function () {\n\t\t\t\t\tcellCount += this.colSpan;\n\t\t\t\t});\n\t\n\t\t\t\tfor ( i=cellCount, ien=columns.length ; i<ien ; i++ ) {\n\t\t\t\t\t$('<th/>')\n\t\t\t\t\t\t.html( columns[i][titleProp] || '' )\n\t\t\t\t\t\t.appendTo( row );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tvar detected = _fnDetectHeader( settings, target, true );\n\t\n\t\tif (side === 'header') {\n\t\t\tsettings.aoHeader = detected;\n\t\t\t$('tr', target).addClass(classes.thead.row);\n\t\t}\n\t\telse {\n\t\t\tsettings.aoFooter = detected;\n\t\t\t$('tr', target).addClass(classes.tfoot.row);\n\t\t}\n\t\n\t\t// Every cell needs to be passed through the renderer\n\t\t$(target).children('tr').children('th, td')\n\t\t\t.each( function () {\n\t\t\t\t_fnRenderer( settings, side )(\n\t\t\t\t\tsettings, $(this), classes\n\t\t\t\t);\n\t\t\t} );\n\t}\n\t\n\t/**\n\t * Build a layout structure for a header or footer\n\t *\n\t * @param {*} settings DataTables settings\n\t * @param {*} source Source layout array\n\t * @param {*} incColumns What columns should be included\n\t * @returns Layout array\n\t */\n\tfunction _fnHeaderLayout( settings, source, incColumns )\n\t{\n\t\tvar row, column, cell;\n\t\tvar local = [];\n\t\tvar structure = [];\n\t\tvar columns = settings.aoColumns;\n\t\tvar columnCount = columns.length;\n\t\tvar rowspan, colspan;\n\t\n\t\tif ( ! source ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\t// Default is to work on only visible columns\n\t\tif ( ! incColumns ) {\n\t\t\tincColumns = _range(columnCount)\n\t\t\t\t.filter(function (idx) {\n\t\t\t\t\treturn columns[idx].bVisible;\n\t\t\t\t});\n\t\t}\n\t\n\t\t// Make a copy of the master layout array, but with only the columns we want\n\t\tfor ( row=0 ; row<source.length ; row++ ) {\n\t\t\t// Remove any columns we haven't selected\n\t\t\tlocal[row] = source[row].slice().filter(function (cell, i) {\n\t\t\t\treturn incColumns.includes(i);\n\t\t\t});\n\t\n\t\t\t// Prep the structure array - it needs an element for each row\n\t\t\tstructure.push( [] );\n\t\t}\n\t\n\t\tfor ( row=0 ; row<local.length ; row++ ) {\n\t\t\tfor ( column=0 ; column<local[row].length ; column++ ) {\n\t\t\t\trowspan = 1;\n\t\t\t\tcolspan = 1;\n\t\n\t\t\t\t// Check to see if there is already a cell (row/colspan) covering our target\n\t\t\t\t// insert point. If there is, then there is nothing to do.\n\t\t\t\tif ( structure[row][column] === undefined ) {\n\t\t\t\t\tcell = local[row][column].cell;\n\t\n\t\t\t\t\t// Expand for rowspan\n\t\t\t\t\twhile (\n\t\t\t\t\t\tlocal[row+rowspan] !== undefined &&\n\t\t\t\t\t\tlocal[row][column].cell == local[row+rowspan][column].cell\n\t\t\t\t\t) {\n\t\t\t\t\t\tstructure[row+rowspan][column] = null;\n\t\t\t\t\t\trowspan++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// And for colspan\n\t\t\t\t\twhile (\n\t\t\t\t\t\tlocal[row][column+colspan] !== undefined &&\n\t\t\t\t\t\tlocal[row][column].cell == local[row][column+colspan].cell\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Which also needs to go over rows\n\t\t\t\t\t\tfor ( var k=0 ; k<rowspan ; k++ ) {\n\t\t\t\t\t\t\tstructure[row+k][column+colspan] = null;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tcolspan++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar titleSpan = $('span.dt-column-title', cell);\n\t\n\t\t\t\t\tstructure[row][column] = {\n\t\t\t\t\t\tcell: cell,\n\t\t\t\t\t\tcolspan: colspan,\n\t\t\t\t\t\trowspan: rowspan,\n\t\t\t\t\t\ttitle: titleSpan.length\n\t\t\t\t\t\t\t? titleSpan.html()\n\t\t\t\t\t\t\t: $(cell).html()\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn structure;\n\t}\n\t\n\t\n\t/**\n\t * Draw the header (or footer) element based on the column visibility states.\n\t *\n\t *  @param object oSettings dataTables settings object\n\t *  @param array aoSource Layout array from _fnDetectHeader\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDrawHead( settings, source )\n\t{\n\t\tvar layout = _fnHeaderLayout(settings, source);\n\t\tvar tr, n;\n\t\n\t\tfor ( var row=0 ; row<source.length ; row++ ) {\n\t\t\ttr = source[row].row;\n\t\n\t\t\t// All cells are going to be replaced, so empty out the row\n\t\t\t// Can't use $().empty() as that kills event handlers\n\t\t\tif (tr) {\n\t\t\t\twhile( (n = tr.firstChild) ) {\n\t\t\t\t\ttr.removeChild( n );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor ( var column=0 ; column<layout[row].length ; column++ ) {\n\t\t\t\tvar point = layout[row][column];\n\t\n\t\t\t\tif (point) {\n\t\t\t\t\t$(point.cell)\n\t\t\t\t\t\t.appendTo(tr)\n\t\t\t\t\t\t.attr('rowspan', point.rowspan)\n\t\t\t\t\t\t.attr('colspan', point.colspan);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Insert the required TR nodes into the table for display\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param ajaxComplete true after ajax call to complete rendering\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDraw( oSettings, ajaxComplete )\n\t{\n\t\t// Allow for state saving and a custom start position\n\t\t_fnStart( oSettings );\n\t\n\t\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\t\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\n\t\tif ( aPreDraw.indexOf(false) !== -1 )\n\t\t{\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar anRows = [];\n\t\tvar iRowCount = 0;\n\t\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\t\tvar aiDisplay = oSettings.aiDisplay;\n\t\tvar iDisplayStart = oSettings._iDisplayStart;\n\t\tvar iDisplayEnd = oSettings.fnDisplayEnd();\n\t\tvar columns = oSettings.aoColumns;\n\t\tvar body = $(oSettings.nTBody);\n\t\n\t\toSettings.bDrawing = true;\n\t\n\t\t/* Server-side processing draw intercept */\n\t\tif ( oSettings.deferLoading )\n\t\t{\n\t\t\toSettings.deferLoading = false;\n\t\t\toSettings.iDraw++;\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t}\n\t\telse if ( !bServerSide )\n\t\t{\n\t\t\toSettings.iDraw++;\n\t\t}\n\t\telse if ( !oSettings.bDestroying && !ajaxComplete)\n\t\t{\n\t\t\t// Show loading message for server-side processing\n\t\t\tif (oSettings.iDraw === 0) {\n\t\t\t\tbody.empty().append(_emptyRow(oSettings));\n\t\t\t}\n\t\n\t\t\t_fnAjaxUpdate( oSettings );\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( aiDisplay.length !== 0 )\n\t\t{\n\t\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\n\t\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\t\n\t\t\tfor ( var j=iStart ; j<iEnd ; j++ )\n\t\t\t{\n\t\t\t\tvar iDataIndex = aiDisplay[j];\n\t\t\t\tvar aoData = oSettings.aoData[ iDataIndex ];\n\t\t\t\tif ( aoData.nTr === null )\n\t\t\t\t{\n\t\t\t\t\t_fnCreateTr( oSettings, iDataIndex );\n\t\t\t\t}\n\t\n\t\t\t\tvar nRow = aoData.nTr;\n\t\n\t\t\t\t// Add various classes as needed\n\t\t\t\tfor (var i=0 ; i<columns.length ; i++) {\n\t\t\t\t\tvar col = columns[i];\n\t\t\t\t\tvar td = aoData.anCells[i];\n\t\n\t\t\t\t\t_addClass(td, _ext.type.className[col.sType]); // auto class\n\t\t\t\t\t_addClass(td, oSettings.oClasses.tbody.cell); // all cells\n\t\t\t\t}\n\t\n\t\t\t\t// Row callback functions - might want to manipulate the row\n\t\t\t\t// iRowCount and j are not currently documented. Are they at all\n\t\t\t\t// useful?\n\t\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null,\n\t\t\t\t\t[nRow, aoData._aData, iRowCount, j, iDataIndex] );\n\t\n\t\t\t\tanRows.push( nRow );\n\t\t\t\tiRowCount++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tanRows[ 0 ] = _emptyRow(oSettings);\n\t\t}\n\t\n\t\t/* Header and footer callbacks */\n\t\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\n\t\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\t\n\t\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\n\t\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\t\n\t\t// replaceChildren is faster, but only became widespread in 2020,\n\t\t// so a fall back in jQuery is provided for older browsers.\n\t\tif (body[0].replaceChildren) {\n\t\t\tbody[0].replaceChildren.apply(body[0], anRows);\n\t\t}\n\t\telse {\n\t\t\tbody.children().detach();\n\t\t\tbody.append( $(anRows) );\n\t\t}\n\t\n\t\t// Empty table needs a specific class\n\t\t$(oSettings.nTableWrapper).toggleClass('dt-empty-footer', $('tr', oSettings.nTFoot).length === 0);\n\t\n\t\t/* Call all required callback functions for the end of a draw */\n\t\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings], true );\n\t\n\t\t/* Draw is complete, sorting and filtering must be as well */\n\t\toSettings.bSorted = false;\n\t\toSettings.bFiltered = false;\n\t\toSettings.bDrawing = false;\n\t}\n\t\n\t\n\t/**\n\t * Redraw the table - taking account of the various features which are enabled\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {boolean} [holdPosition] Keep the current paging position. By default\n\t *    the paging is reset to the first page\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReDraw( settings, holdPosition, recompute )\n\t{\n\t\tvar\n\t\t\tfeatures = settings.oFeatures,\n\t\t\tsort     = features.bSort,\n\t\t\tfilter   = features.bFilter;\n\t\n\t\tif (recompute === undefined || recompute === true) {\n\t\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t\t_fnColumnTypes( settings );\n\t\n\t\t\tif ( sort ) {\n\t\t\t\t_fnSort( settings );\n\t\t\t}\n\t\n\t\t\tif ( filter ) {\n\t\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// No filtering, so we want to just use the display master\n\t\t\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\t\t}\n\t\t}\n\t\n\t\tif ( holdPosition !== true ) {\n\t\t\tsettings._iDisplayStart = 0;\n\t\t}\n\t\n\t\t// Let any modules know about the draw hold position state (used by\n\t\t// scrolling internally)\n\t\tsettings._drawHold = holdPosition;\n\t\n\t\t_fnDraw( settings );\n\t\n\t\tsettings._drawHold = false;\n\t}\n\t\n\t\n\t/*\n\t * Table is empty - create a row with an empty message in it\n\t */\n\tfunction _emptyRow ( settings ) {\n\t\tvar oLang = settings.oLanguage;\n\t\tvar zero = oLang.sZeroRecords;\n\t\tvar dataSrc = _fnDataSource( settings );\n\t\n\t\tif (\n\t\t\t(settings.iDraw < 1 && dataSrc === 'ssp') ||\n\t\t\t(settings.iDraw <= 1 && dataSrc === 'ajax')\n\t\t) {\n\t\t\tzero = oLang.sLoadingRecords;\n\t\t}\n\t\telse if ( oLang.sEmptyTable && settings.fnRecordsTotal() === 0 )\n\t\t{\n\t\t\tzero = oLang.sEmptyTable;\n\t\t}\n\t\n\t\treturn $( '<tr/>' )\n\t\t\t.append( $('<td />', {\n\t\t\t\t'colSpan': _fnVisbleColumns( settings ),\n\t\t\t\t'class':   settings.oClasses.empty.row\n\t\t\t} ).html( zero ) )[0];\n\t}\n\t\n\t\n\t/**\n\t * Expand the layout items into an object for the rendering function\n\t */\n\tfunction _layoutItems (row, align, items) {\n\t\tif ( Array.isArray(items)) {\n\t\t\tfor (var i=0 ; i<items.length ; i++) {\n\t\t\t\t_layoutItems(row, align, items[i]);\n\t\t\t}\n\t\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar rowCell = row[align];\n\t\n\t\t// If it is an object, then there can be multiple features contained in it\n\t\tif ( $.isPlainObject( items ) ) {\n\t\t\t// A feature plugin cannot be named \"features\" due to this check\n\t\t\tif (items.features) {\n\t\t\t\tif (items.rowId) {\n\t\t\t\t\trow.id = items.rowId;\n\t\t\t\t}\n\t\t\t\tif (items.rowClass) {\n\t\t\t\t\trow.className = items.rowClass;\n\t\t\t\t}\n\t\n\t\t\t\trowCell.id = items.id;\n\t\t\t\trowCell.className = items.className;\n\t\n\t\t\t\t_layoutItems(row, align, items.features);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tObject.keys(items).map(function (key) {\n\t\t\t\t\trowCell.contents.push( {\n\t\t\t\t\t\tfeature: key,\n\t\t\t\t\t\topts: items[key]\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\trowCell.contents.push(items);\n\t\t}\n\t}\n\t\n\t/**\n\t * Find, or create a layout row\n\t */\n\tfunction _layoutGetRow(rows, rowNum, align) {\n\t\tvar row;\n\t\n\t\t// Find existing rows\n\t\tfor (var i=0; i<rows.length; i++) {\n\t\t\trow = rows[i];\n\t\n\t\t\tif (row.rowNum === rowNum) {\n\t\t\t\t// full is on its own, but start and end share a row\n\t\t\t\tif (\n\t\t\t\t\t(align === 'full' && row.full) ||\n\t\t\t\t\t((align === 'start' || align === 'end') && (row.start || row.end))\n\t\t\t\t) {\n\t\t\t\t\tif (! row[align]) {\n\t\t\t\t\t\trow[align] = {\n\t\t\t\t\t\t\tcontents: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn row;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// If we get this far, then there was no match, create a new row\n\t\trow = {\n\t\t\trowNum: rowNum\t\n\t\t};\n\t\n\t\trow[align] = {\n\t\t\tcontents: []\n\t\t};\n\t\n\t\trows.push(row);\n\t\n\t\treturn row;\n\t}\n\t\n\t/**\n\t * Convert a `layout` object given by a user to the object structure needed\n\t * for the renderer. This is done twice, once for above and once for below\n\t * the table. Ordering must also be considered.\n\t *\n\t * @param {*} settings DataTables settings object\n\t * @param {*} layout Layout object to convert\n\t * @param {string} side `top` or `bottom`\n\t * @returns Converted array structure - one item for each row.\n\t */\n\tfunction _layoutArray ( settings, layout, side ) {\n\t\tvar rows = [];\n\t\t\n\t\t// Split out into an array\n\t\t$.each( layout, function ( pos, items ) {\n\t\t\tif (items === null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar parts = pos.match(/^([a-z]+)([0-9]*)([A-Za-z]*)$/);\n\t\t\tvar rowNum = parts[2]\n\t\t\t\t? parts[2] * 1\n\t\t\t\t: 0;\n\t\t\tvar align = parts[3]\n\t\t\t\t? parts[3].toLowerCase()\n\t\t\t\t: 'full';\n\t\n\t\t\t// Filter out the side we aren't interested in\n\t\t\tif (parts[1] !== side) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Get or create the row we should attach to\n\t\t\tvar row = _layoutGetRow(rows, rowNum, align);\n\t\n\t\t\t_layoutItems(row, align, items);\n\t\t});\n\t\n\t\t// Order by item identifier\n\t\trows.sort( function ( a, b ) {\n\t\t\tvar order1 = a.rowNum;\n\t\t\tvar order2 = b.rowNum;\n\t\n\t\t\t// If both in the same row, then the row with `full` comes first\n\t\t\tif (order1 === order2) {\n\t\t\t\tvar ret = a.full && ! b.full ? -1 : 1;\n\t\n\t\t\t\treturn side === 'bottom'\n\t\t\t\t\t? ret * -1\n\t\t\t\t\t: ret;\n\t\t\t}\n\t\n\t\t\treturn order2 - order1;\n\t\t} );\n\t\n\t\t// Invert for below the table\n\t\tif ( side === 'bottom' ) {\n\t\t\trows.reverse();\n\t\t}\n\t\n\t\tfor (var row = 0; row<rows.length; row++) {\n\t\t\tdelete rows[row].rowNum;\n\t\n\t\t\t_layoutResolve(settings, rows[row]);\n\t\t}\n\t\n\t\treturn rows;\n\t}\n\t\n\t\n\t/**\n\t * Convert the contents of a row's layout object to nodes that can be inserted\n\t * into the document by a renderer. Execute functions, look up plug-ins, etc.\n\t *\n\t * @param {*} settings DataTables settings object\n\t * @param {*} row Layout object for this row\n\t */\n\tfunction _layoutResolve( settings, row ) {\n\t\tvar getFeature = function (feature, opts) {\n\t\t\tif ( ! _ext.features[ feature ] ) {\n\t\t\t\t_fnLog( settings, 0, 'Unknown feature: '+ feature );\n\t\t\t}\n\t\n\t\t\treturn _ext.features[ feature ].apply( this, [settings, opts] );\n\t\t};\n\t\n\t\tvar resolve = function ( item ) {\n\t\t\tif (! row[ item ]) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar line = row[ item ].contents;\n\t\n\t\t\tfor ( var i=0, ien=line.length ; i<ien ; i++ ) {\n\t\t\t\tif ( ! line[i] ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\telse if ( typeof line[i] === 'string' ) {\n\t\t\t\t\tline[i] = getFeature( line[i], null );\n\t\t\t\t}\n\t\t\t\telse if ( $.isPlainObject(line[i]) ) {\n\t\t\t\t\t// If it's an object, it just has feature and opts properties from\n\t\t\t\t\t// the transform in _layoutArray\n\t\t\t\t\tline[i] = getFeature(line[i].feature, line[i].opts);\n\t\t\t\t}\n\t\t\t\telse if ( typeof line[i].node === 'function' ) {\n\t\t\t\t\tline[i] = line[i].node( settings );\n\t\t\t\t}\n\t\t\t\telse if ( typeof line[i] === 'function' ) {\n\t\t\t\t\tvar inst = line[i]( settings );\n\t\n\t\t\t\t\tline[i] = typeof inst.node === 'function' ?\n\t\t\t\t\t\tinst.node() :\n\t\t\t\t\t\tinst;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tresolve('start');\n\t\tresolve('end');\n\t\tresolve('full');\n\t}\n\t\n\t\n\t/**\n\t * Add the options to the page HTML for the table\n\t *  @param {object} settings DataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddOptionsHtml ( settings )\n\t{\n\t\tvar classes = settings.oClasses;\n\t\tvar table = $(settings.nTable);\n\t\n\t\t// Wrapper div around everything DataTables controls\n\t\tvar insert = $('<div/>')\n\t\t\t.attr({\n\t\t\t\tid:      settings.sTableId+'_wrapper',\n\t\t\t\t'class': classes.container\n\t\t\t})\n\t\t\t.insertBefore(table);\n\t\n\t\tsettings.nTableWrapper = insert[0];\n\t\n\t\tif (settings.sDom) {\n\t\t\t// Legacy\n\t\t\t_fnLayoutDom(settings, settings.sDom, insert);\n\t\t}\n\t\telse {\n\t\t\tvar top = _layoutArray( settings, settings.layout, 'top' );\n\t\t\tvar bottom = _layoutArray( settings, settings.layout, 'bottom' );\n\t\t\tvar renderer = _fnRenderer( settings, 'layout' );\n\t\t\n\t\t\t// Everything above - the renderer will actually insert the contents into the document\n\t\t\ttop.forEach(function (item) {\n\t\t\t\trenderer( settings, insert, item );\n\t\t\t});\n\t\n\t\t\t// The table - always the center of attention\n\t\t\trenderer( settings, insert, {\n\t\t\t\tfull: {\n\t\t\t\t\ttable: true,\n\t\t\t\t\tcontents: [ _fnFeatureHtmlTable(settings) ]\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\t// Everything below\n\t\t\tbottom.forEach(function (item) {\n\t\t\t\trenderer( settings, insert, item );\n\t\t\t});\n\t\t}\n\t\n\t\t// Processing floats on top, so it isn't an inserted feature\n\t\t_processingHtml( settings );\n\t}\n\t\n\t/**\n\t * Draw the table with the legacy DOM property\n\t * @param {*} settings DT settings object\n\t * @param {*} dom DOM string\n\t * @param {*} insert Insert point\n\t */\n\tfunction _fnLayoutDom( settings, dom, insert )\n\t{\n\t\tvar parts = dom.match(/(\".*?\")|('.*?')|./g);\n\t\tvar featureNode, option, newNode, next, attr;\n\t\n\t\tfor ( var i=0 ; i<parts.length ; i++ ) {\n\t\t\tfeatureNode = null;\n\t\t\toption = parts[i];\n\t\n\t\t\tif ( option == '<' ) {\n\t\t\t\t// New container div\n\t\t\t\tnewNode = $('<div/>');\n\t\n\t\t\t\t// Check to see if we should append an id and/or a class name to the container\n\t\t\t\tnext = parts[i+1];\n\t\n\t\t\t\tif ( next[0] == \"'\" || next[0] == '\"' ) {\n\t\t\t\t\tattr = next.replace(/['\"]/g, '');\n\t\n\t\t\t\t\tvar id = '', className;\n\t\n\t\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n\t\t\t\t\t * breaks the string into parts and applies them as needed\n\t\t\t\t\t */\n\t\t\t\t\tif ( attr.indexOf('.') != -1 ) {\n\t\t\t\t\t\tvar split = attr.split('.');\n\t\n\t\t\t\t\t\tid = split[0];\n\t\t\t\t\t\tclassName = split[1];\n\t\t\t\t\t}\n\t\t\t\t\telse if ( attr[0] == \"#\" ) {\n\t\t\t\t\t\tid = attr;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tclassName = attr;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tnewNode\n\t\t\t\t\t\t.attr('id', id.substring(1))\n\t\t\t\t\t\t.addClass(className);\n\t\n\t\t\t\t\ti++; // Move along the position array\n\t\t\t\t}\n\t\n\t\t\t\tinsert.append( newNode );\n\t\t\t\tinsert = newNode;\n\t\t\t}\n\t\t\telse if ( option == '>' ) {\n\t\t\t\t// End container div\n\t\t\t\tinsert = insert.parent();\n\t\t\t}\n\t\t\telse if ( option == 't' ) {\n\t\t\t\t// Table\n\t\t\t\tfeatureNode = _fnFeatureHtmlTable( settings );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tDataTable.ext.feature.forEach(function(feature) {\n\t\t\t\t\tif ( option == feature.cFeature ) {\n\t\t\t\t\t\tfeatureNode = feature.fnInit( settings );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// Add to the display\n\t\t\tif ( featureNode ) {\n\t\t\t\tinsert.append( featureNode );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Use the DOM source to create up an array of header cells. The idea here is to\n\t * create a layout grid (array) of rows x columns, which contains a reference\n\t * to the cell that that point in the grid (regardless of col/rowspan), such that\n\t * any column / row could be removed and the new grid constructed\n\t *  @param {node} thead The header/footer element for the table\n\t *  @returns {array} Calculated layout array\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDetectHeader ( settings, thead, write )\n\t{\n\t\tvar columns = settings.aoColumns;\n\t\tvar rows = $(thead).children('tr');\n\t\tvar row, cell;\n\t\tvar i, k, l, iLen, shifted, column, colspan, rowspan;\n\t\tvar isHeader = thead && thead.nodeName.toLowerCase() === 'thead';\n\t\tvar layout = [];\n\t\tvar unique;\n\t\tvar shift = function ( a, i, j ) {\n\t\t\tvar k = a[i];\n\t\t\twhile ( k[j] ) {\n\t\t\t\tj++;\n\t\t\t}\n\t\t\treturn j;\n\t\t};\n\t\n\t\t// We know how many rows there are in the layout - so prep it\n\t\tfor ( i=0, iLen=rows.length ; i<iLen ; i++ ) {\n\t\t\tlayout.push( [] );\n\t\t}\n\t\n\t\tfor ( i=0, iLen=rows.length ; i<iLen ; i++ ) {\n\t\t\trow = rows[i];\n\t\t\tcolumn = 0;\n\t\n\t\t\t// For every cell in the row..\n\t\t\tcell = row.firstChild;\n\t\t\twhile ( cell ) {\n\t\t\t\tif (\n\t\t\t\t\tcell.nodeName.toUpperCase() == 'TD' ||\n\t\t\t\t\tcell.nodeName.toUpperCase() == 'TH'\n\t\t\t\t) {\n\t\t\t\t\tvar cols = [];\n\t\n\t\t\t\t\t// Get the col and rowspan attributes from the DOM and sanitise them\n\t\t\t\t\tcolspan = cell.getAttribute('colspan') * 1;\n\t\t\t\t\trowspan = cell.getAttribute('rowspan') * 1;\n\t\t\t\t\tcolspan = (!colspan || colspan===0 || colspan===1) ? 1 : colspan;\n\t\t\t\t\trowspan = (!rowspan || rowspan===0 || rowspan===1) ? 1 : rowspan;\n\t\n\t\t\t\t\t// There might be colspan cells already in this row, so shift our target\n\t\t\t\t\t// accordingly\n\t\t\t\t\tshifted = shift( layout, i, column );\n\t\n\t\t\t\t\t// Cache calculation for unique columns\n\t\t\t\t\tunique = colspan === 1 ?\n\t\t\t\t\t\ttrue :\n\t\t\t\t\t\tfalse;\n\t\t\t\t\t\n\t\t\t\t\t// Perform header setup\n\t\t\t\t\tif ( write ) {\n\t\t\t\t\t\tif (unique) {\n\t\t\t\t\t\t\t// Allow column options to be set from HTML attributes\n\t\t\t\t\t\t\t_fnColumnOptions( settings, shifted, $(cell).data() );\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Get the width for the column. This can be defined from the\n\t\t\t\t\t\t\t// width attribute, style attribute or `columns.width` option\n\t\t\t\t\t\t\tvar columnDef = columns[shifted];\n\t\t\t\t\t\t\tvar width = cell.getAttribute('width') || null;\n\t\t\t\t\t\t\tvar t = cell.style.width.match(/width:\\s*(\\d+[pxem%]+)/);\n\t\t\t\t\t\t\tif ( t ) {\n\t\t\t\t\t\t\t\twidth = t[1];\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tcolumnDef.sWidthOrig = columnDef.sWidth || width;\n\t\n\t\t\t\t\t\t\tif (isHeader) {\n\t\t\t\t\t\t\t\t// Column title handling - can be user set, or read from the DOM\n\t\t\t\t\t\t\t\t// This happens before the render, so the original is still in place\n\t\t\t\t\t\t\t\tif ( columnDef.sTitle !== null && ! columnDef.autoTitle ) {\n\t\t\t\t\t\t\t\t\tcell.innerHTML = columnDef.sTitle;\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\tif (! columnDef.sTitle && unique) {\n\t\t\t\t\t\t\t\t\tcolumnDef.sTitle = _stripHtml(cell.innerHTML);\n\t\t\t\t\t\t\t\t\tcolumnDef.autoTitle = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// Footer specific operations\n\t\t\t\t\t\t\t\tif (columnDef.footer) {\n\t\t\t\t\t\t\t\t\tcell.innerHTML = columnDef.footer;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// Fall back to the aria-label attribute on the table header if no ariaTitle is\n\t\t\t\t\t\t\t// provided.\n\t\t\t\t\t\t\tif (! columnDef.ariaTitle) {\n\t\t\t\t\t\t\t\tcolumnDef.ariaTitle = $(cell).attr(\"aria-label\") || columnDef.sTitle;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// Column specific class names\n\t\t\t\t\t\t\tif ( columnDef.className ) {\n\t\t\t\t\t\t\t\t$(cell).addClass( columnDef.className );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Wrap the column title so we can write to it in future\n\t\t\t\t\t\tif ( $('span.dt-column-title', cell).length === 0) {\n\t\t\t\t\t\t\t$('<span>')\n\t\t\t\t\t\t\t\t.addClass('dt-column-title')\n\t\t\t\t\t\t\t\t.append(cell.childNodes)\n\t\t\t\t\t\t\t\t.appendTo(cell);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( isHeader && $('span.dt-column-order', cell).length === 0) {\n\t\t\t\t\t\t\t$('<span>')\n\t\t\t\t\t\t\t\t.addClass('dt-column-order')\n\t\t\t\t\t\t\t\t.appendTo(cell);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If there is col / rowspan, copy the information into the layout grid\n\t\t\t\t\tfor ( l=0 ; l<colspan ; l++ ) {\n\t\t\t\t\t\tfor ( k=0 ; k<rowspan ; k++ ) {\n\t\t\t\t\t\t\tlayout[i+k][shifted+l] = {\n\t\t\t\t\t\t\t\tcell: cell,\n\t\t\t\t\t\t\t\tunique: unique\n\t\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\t\tlayout[i+k].row = row;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tcols.push( shifted+l );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Assign an attribute so spanning cells can still be identified\n\t\t\t\t\t// as belonging to a column\n\t\t\t\t\tcell.setAttribute('data-dt-column', _unique(cols).join(','));\n\t\t\t\t}\n\t\n\t\t\t\tcell = cell.nextSibling;\n\t\t\t}\n\t\t}\n\t\n\t\treturn layout;\n\t}\n\t\n\t/**\n\t * Set the start position for draw\n\t *  @param {object} oSettings dataTables settings object\n\t */\n\tfunction _fnStart( oSettings )\n\t{\n\t\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\t\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\n\t\n\t\t// Check and see if we have an initial draw position from state saving\n\t\tif ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\n\t\t{\n\t\t\toSettings._iDisplayStart = bServerSide ?\n\t\t\t\tiInitDisplayStart :\n\t\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\n\t\t\t\t\t0 :\n\t\t\t\t\tiInitDisplayStart;\n\t\n\t\t\toSettings.iInitDisplayStart = -1;\n\t\t}\n\t}\n\t\n\t/**\n\t * Create an Ajax call based on the table's settings, taking into account that\n\t * parameters can have multiple forms, and backwards compatibility.\n\t *\n\t * @param {object} oSettings dataTables settings object\n\t * @param {array} data Data to send to the server, required by\n\t *     DataTables - may be augmented by developer callbacks\n\t * @param {function} fn Callback function to run when data is obtained\n\t */\n\tfunction _fnBuildAjax( oSettings, data, fn )\n\t{\n\t\tvar ajaxData;\n\t\tvar ajax = oSettings.ajax;\n\t\tvar instance = oSettings.oInstance;\n\t\tvar callback = function ( json ) {\n\t\t\tvar status = oSettings.jqXHR\n\t\t\t\t? oSettings.jqXHR.status\n\t\t\t\t: null;\n\t\n\t\t\tif ( json === null || (typeof status === 'number' && status == 204 ) ) {\n\t\t\t\tjson = {};\n\t\t\t\t_fnAjaxDataSrc( oSettings, json, [] );\n\t\t\t}\n\t\n\t\t\tvar error = json.error || json.sError;\n\t\t\tif ( error ) {\n\t\t\t\t_fnLog( oSettings, 0, error );\n\t\t\t}\n\t\n\t\t\t// Microsoft often wrap JSON as a string in another JSON object\n\t\t\t// Let's handle that automatically\n\t\t\tif (json.d && typeof json.d === 'string') {\n\t\t\t\ttry {\n\t\t\t\t\tjson = JSON.parse(json.d);\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\toSettings.json = json;\n\t\n\t\t\t_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR], true );\n\t\t\tfn( json );\n\t\t};\n\t\n\t\tif ( $.isPlainObject( ajax ) && ajax.data )\n\t\t{\n\t\t\tajaxData = ajax.data;\n\t\n\t\t\tvar newData = typeof ajaxData === 'function' ?\n\t\t\t\tajaxData( data, oSettings ) :  // fn can manipulate data or return\n\t\t\t\tajaxData;                      // an object object or array to merge\n\t\n\t\t\t// If the function returned something, use that alone\n\t\t\tdata = typeof ajaxData === 'function' && newData ?\n\t\t\t\tnewData :\n\t\t\t\t$.extend( true, data, newData );\n\t\n\t\t\t// Remove the data property as we've resolved it already and don't want\n\t\t\t// jQuery to do it again (it is restored at the end of the function)\n\t\t\tdelete ajax.data;\n\t\t}\n\t\n\t\tvar baseAjax = {\n\t\t\t\"url\": typeof ajax === 'string' ?\n\t\t\t\tajax :\n\t\t\t\t'',\n\t\t\t\"data\": data,\n\t\t\t\"success\": callback,\n\t\t\t\"dataType\": \"json\",\n\t\t\t\"cache\": false,\n\t\t\t\"type\": oSettings.sServerMethod,\n\t\t\t\"error\": function (xhr, error) {\n\t\t\t\tvar ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR], true );\n\t\n\t\t\t\tif ( ret.indexOf(true) === -1 ) {\n\t\t\t\t\tif ( error == \"parsererror\" ) {\n\t\t\t\t\t\t_fnLog( oSettings, 0, 'Invalid JSON response', 1 );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( xhr.readyState === 4 ) {\n\t\t\t\t\t\t_fnLog( oSettings, 0, 'Ajax error', 7 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\t}\n\t\t};\n\t\n\t\t// If `ajax` option is an object, extend and override our default base\n\t\tif ( $.isPlainObject( ajax ) ) {\n\t\t\t$.extend( baseAjax, ajax )\n\t\t}\n\t\n\t\t// Store the data submitted for the API\n\t\toSettings.oAjaxData = data;\n\t\n\t\t// Allow plug-ins and external processes to modify the data\n\t\t_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data, baseAjax], true );\n\t\n\t\tif ( typeof ajax === 'function' )\n\t\t{\n\t\t\t// Is a function - let the caller define what needs to be done\n\t\t\toSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\n\t\t}\n\t\telse if (ajax.url === '') {\n\t\t\t// No url, so don't load any data. Just apply an empty data array\n\t\t\t// to the object for the callback.\n\t\t\tvar empty = {};\n\t\n\t\t\tDataTable.util.set(ajax.dataSrc)(empty, []);\n\t\t\tcallback(empty);\n\t\t}\n\t\telse {\n\t\t\t// Object to extend the base settings\n\t\t\toSettings.jqXHR = $.ajax( baseAjax );\n\t\t}\n\t\n\t\t// Restore for next time around\n\t\tif ( ajaxData ) {\n\t\t\tajax.data = ajaxData;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Update the table using an Ajax call\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {boolean} Block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdate( settings )\n\t{\n\t\tsettings.iDraw++;\n\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t_fnBuildAjax(\n\t\t\tsettings,\n\t\t\t_fnAjaxParameters( settings ),\n\t\t\tfunction(json) {\n\t\t\t\t_fnAjaxUpdateDraw( settings, json );\n\t\t\t}\n\t\t);\n\t}\n\t\n\t\n\t/**\n\t * Build up the parameters in an object needed for a server-side processing\n\t * request.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {bool} block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxParameters( settings )\n\t{\n\t\tvar\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tfeatures = settings.oFeatures,\n\t\t\tpreSearch = settings.oPreviousSearch,\n\t\t\tpreColSearch = settings.aoPreSearchCols,\n\t\t\tcolData = function ( idx, prop ) {\n\t\t\t\treturn typeof columns[idx][prop] === 'function' ?\n\t\t\t\t\t'function' :\n\t\t\t\t\tcolumns[idx][prop];\n\t\t\t};\n\t\n\t\treturn {\n\t\t\tdraw: settings.iDraw,\n\t\t\tcolumns: columns.map( function ( column, i ) {\n\t\t\t\treturn {\n\t\t\t\t\tdata: colData(i, 'mData'),\n\t\t\t\t\tname: column.sName,\n\t\t\t\t\tsearchable: column.bSearchable,\n\t\t\t\t\torderable: column.bSortable,\n\t\t\t\t\tsearch: {\n\t\t\t\t\t\tvalue: preColSearch[i].search,\n\t\t\t\t\t\tregex: preColSearch[i].regex,\n\t\t\t\t\t\tfixed: Object.keys(column.searchFixed).map( function(name) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tname: name,\n\t\t\t\t\t\t\t\tterm: column.searchFixed[name].toString()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} ),\n\t\t\torder: _fnSortFlatten( settings ).map( function ( val ) {\n\t\t\t\treturn {\n\t\t\t\t\tcolumn: val.col,\n\t\t\t\t\tdir: val.dir,\n\t\t\t\t\tname: colData(val.col, 'sName')\n\t\t\t\t};\n\t\t\t} ),\n\t\t\tstart: settings._iDisplayStart,\n\t\t\tlength: features.bPaginate ?\n\t\t\t\tsettings._iDisplayLength :\n\t\t\t\t-1,\n\t\t\tsearch: {\n\t\t\t\tvalue: preSearch.search,\n\t\t\t\tregex: preSearch.regex,\n\t\t\t\tfixed: Object.keys(settings.searchFixed).map( function(name) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\tterm: settings.searchFixed[name].toString()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t};\n\t}\n\t\n\t\n\t/**\n\t * Data the data from the server (nuking the old) and redraw the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} json json data return from the server.\n\t *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n\t *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n\t *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n\t *  @param {array} json.aaData The data to display on this page\n\t *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdateDraw ( settings, json )\n\t{\n\t\tvar data = _fnAjaxDataSrc(settings, json);\n\t\tvar draw = _fnAjaxDataSrcParam(settings, 'draw', json);\n\t\tvar recordsTotal = _fnAjaxDataSrcParam(settings, 'recordsTotal', json);\n\t\tvar recordsFiltered = _fnAjaxDataSrcParam(settings, 'recordsFiltered', json);\n\t\n\t\tif ( draw !== undefined ) {\n\t\t\t// Protect against out of sequence returns\n\t\t\tif ( draw*1 < settings.iDraw ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsettings.iDraw = draw * 1;\n\t\t}\n\t\n\t\t// No data in returned object, so rather than an array, we show an empty table\n\t\tif ( ! data ) {\n\t\t\tdata = [];\n\t\t}\n\t\n\t\t_fnClearTable( settings );\n\t\tsettings._iRecordsTotal   = parseInt(recordsTotal, 10);\n\t\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\t\n\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t_fnAddData( settings, data[i] );\n\t\t}\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\n\t\t_fnColumnTypes(settings);\n\t\t_fnDraw( settings, true );\n\t\t_fnInitComplete( settings );\n\t\t_fnProcessingDisplay( settings, false );\n\t}\n\t\n\t\n\t/**\n\t * Get the data from the JSON data source to use for drawing a table. Using\n\t * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n\t * source object, or from a processing function.\n\t *  @param {object} settings dataTables settings object\n\t *  @param  {object} json Data source object / array from the server\n\t *  @return {array} Array of data to use\n\t */\n\tfunction _fnAjaxDataSrc ( settings, json, write )\n\t{\n\t\tvar dataProp = 'data';\n\t\n\t\tif ($.isPlainObject( settings.ajax ) && settings.ajax.dataSrc !== undefined) {\n\t\t\t// Could in inside a `dataSrc` object, or not!\n\t\t\tvar dataSrc = settings.ajax.dataSrc;\n\t\n\t\t\t// string, function and object are valid types\n\t\t\tif (typeof dataSrc === 'string' || typeof dataSrc === 'function') {\n\t\t\t\tdataProp = dataSrc;\n\t\t\t}\n\t\t\telse if (dataSrc.data !== undefined) {\n\t\t\t\tdataProp = dataSrc.data;\n\t\t\t}\n\t\t}\n\t\n\t\tif ( ! write ) {\n\t\t\tif ( dataProp === 'data' ) {\n\t\t\t\t// If the default, then we still want to support the old style, and safely ignore\n\t\t\t\t// it if possible\n\t\t\t\treturn json.aaData || json[dataProp];\n\t\t\t}\n\t\n\t\t\treturn dataProp !== \"\" ?\n\t\t\t\t_fnGetObjectDataFn( dataProp )( json ) :\n\t\t\t\tjson;\n\t\t}\n\t\t\n\t\t// set\n\t\t_fnSetObjectDataFn( dataProp )( json, write );\n\t}\n\t\n\t/**\n\t * Very similar to _fnAjaxDataSrc, but for the other SSP properties\n\t * @param {*} settings DataTables settings object\n\t * @param {*} param Target parameter\n\t * @param {*} json JSON data\n\t * @returns Resolved value\n\t */\n\tfunction _fnAjaxDataSrcParam (settings, param, json) {\n\t\tvar dataSrc = $.isPlainObject( settings.ajax )\n\t\t\t? settings.ajax.dataSrc\n\t\t\t: null;\n\t\n\t\tif (dataSrc && dataSrc[param]) {\n\t\t\t// Get from custom location\n\t\t\treturn _fnGetObjectDataFn( dataSrc[param] )( json );\n\t\t}\n\t\n\t\t// else - Default behaviour\n\t\tvar old = '';\n\t\n\t\t// Legacy support\n\t\tif (param === 'draw') {\n\t\t\told = 'sEcho';\n\t\t}\n\t\telse if (param === 'recordsTotal') {\n\t\t\told = 'iTotalRecords';\n\t\t}\n\t\telse if (param === 'recordsFiltered') {\n\t\t\told = 'iTotalDisplayRecords';\n\t\t}\n\t\n\t\treturn json[old] !== undefined\n\t\t\t? json[old]\n\t\t\t: json[param];\n\t}\n\t\n\t\n\t/**\n\t * Filter the table using both the global filter and column based filtering\n\t *  @param {object} settings dataTables settings object\n\t *  @param {object} input search information\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterComplete ( settings, input )\n\t{\n\t\tvar columnsSearch = settings.aoPreSearchCols;\n\t\n\t\t// In server-side processing all filtering is done by the server, so no point hanging around here\n\t\tif ( _fnDataSource( settings ) != 'ssp' )\n\t\t{\n\t\t\t// Check if any of the rows were invalidated\n\t\t\t_fnFilterData( settings );\n\t\n\t\t\t// Start from the full data set\n\t\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\n\t\t\t// Global filter first\n\t\t\t_fnFilter( settings.aiDisplay, settings, input.search, input );\n\t\n\t\t\t$.each(settings.searchFixed, function (name, term) {\n\t\t\t\t_fnFilter(settings.aiDisplay, settings, term, {});\n\t\t\t});\n\t\n\t\t\t// Then individual column filters\n\t\t\tfor ( var i=0 ; i<columnsSearch.length ; i++ )\n\t\t\t{\n\t\t\t\tvar col = columnsSearch[i];\n\t\n\t\t\t\t_fnFilter(\n\t\t\t\t\tsettings.aiDisplay,\n\t\t\t\t\tsettings,\n\t\t\t\t\tcol.search,\n\t\t\t\t\tcol,\n\t\t\t\t\ti\n\t\t\t\t);\n\t\n\t\t\t\t$.each(settings.aoColumns[i].searchFixed, function (name, term) {\n\t\t\t\t\t_fnFilter(settings.aiDisplay, settings, term, {}, i);\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// And finally global filtering\n\t\t\t_fnFilterCustom( settings );\n\t\t}\n\t\n\t\t// Tell the draw function we have been filtering\n\t\tsettings.bFiltered = true;\n\t\n\t\t_fnCallbackFire( settings, null, 'search', [settings] );\n\t}\n\t\n\t\n\t/**\n\t * Apply custom filtering functions\n\t * \n\t * This is legacy now that we have named functions, but it is widely used\n\t * from 1.x, so it is not yet deprecated.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCustom( settings )\n\t{\n\t\tvar filters = DataTable.ext.search;\n\t\tvar displayRows = settings.aiDisplay;\n\t\tvar row, rowIdx;\n\t\n\t\tfor ( var i=0, ien=filters.length ; i<ien ; i++ ) {\n\t\t\tvar rows = [];\n\t\n\t\t\t// Loop over each row and see if it should be included\n\t\t\tfor ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\n\t\t\t\trowIdx = displayRows[ j ];\n\t\t\t\trow = settings.aoData[ rowIdx ];\n\t\n\t\t\t\tif ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\n\t\t\t\t\trows.push( rowIdx );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// So the array reference doesn't break set the results into the\n\t\t\t// existing array\n\t\t\tdisplayRows.length = 0;\n\t\t\t_fnArrayApply(displayRows, rows);\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Filter the data table based on user input and draw the table\n\t */\n\tfunction _fnFilter( searchRows, settings, input, options, column )\n\t{\n\t\tif ( input === '' ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar i = 0;\n\t\tvar matched = [];\n\t\n\t\t// Search term can be a function, regex or string - if a string we apply our\n\t\t// smart filtering regex (assuming the options require that)\n\t\tvar searchFunc = typeof input === 'function' ? input : null;\n\t\tvar rpSearch = input instanceof RegExp\n\t\t\t? input\n\t\t\t: searchFunc\n\t\t\t\t? null\n\t\t\t\t: _fnFilterCreateSearch( input, options );\n\t\n\t\t// Then for each row, does the test pass. If not, lop the row from the array\n\t\tfor (i=0 ; i<searchRows.length ; i++) {\n\t\t\tvar row = settings.aoData[ searchRows[i] ];\n\t\t\tvar data = column === undefined\n\t\t\t\t? row._sFilterRow\n\t\t\t\t: row._aFilterData[ column ];\n\t\n\t\t\tif ( (searchFunc && searchFunc(data, row._aData, searchRows[i], column)) || (rpSearch && rpSearch.test(data)) ) {\n\t\t\t\tmatched.push(searchRows[i]);\n\t\t\t}\n\t\t}\n\t\n\t\t// Mutate the searchRows array\n\t\tsearchRows.length = matched.length;\n\t\n\t\tfor (i=0 ; i<matched.length ; i++) {\n\t\t\tsearchRows[i] = matched[i];\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Build a regular expression object suitable for searching a table\n\t *  @param {string} sSearch string to search for\n\t *  @param {bool} bRegex treat as a regular expression or not\n\t *  @param {bool} bSmart perform smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n\t *  @returns {RegExp} constructed object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCreateSearch( search, inOpts )\n\t{\n\t\tvar not = [];\n\t\tvar options = $.extend({}, {\n\t\t\tboundary: false,\n\t\t\tcaseInsensitive: true,\n\t\t\texact: false,\n\t\t\tregex: false,\n\t\t\tsmart: true\n\t\t}, inOpts);\n\t\n\t\tif (typeof search !== 'string') {\n\t\t\tsearch = search.toString();\n\t\t}\n\t\n\t\t// Remove diacritics if normalize is set up to do so\n\t\tsearch = _normalize(search);\n\t\n\t\tif (options.exact) {\n\t\t\treturn new RegExp(\n\t\t\t\t'^'+_fnEscapeRegex(search)+'$',\n\t\t\t\toptions.caseInsensitive ? 'i' : ''\n\t\t\t);\n\t\t}\n\t\n\t\tsearch = options.regex ?\n\t\t\tsearch :\n\t\t\t_fnEscapeRegex( search );\n\t\t\n\t\tif ( options.smart ) {\n\t\t\t/* For smart filtering we want to allow the search to work regardless of\n\t\t\t * word order. We also want double quoted text to be preserved, so word\n\t\t\t * order is important - a la google. And a negative look around for\n\t\t\t * finding rows which don't contain a given string.\n\t\t\t * \n\t\t\t * So this is the sort of thing we want to generate:\n\t\t\t * \n\t\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n\t\t\t */\n\t\t\tvar parts = search.match( /!?[\"\\u201C][^\"\\u201D]+[\"\\u201D]|[^ ]+/g ) || [''];\n\t\t\tvar a = parts.map( function ( word ) {\n\t\t\t\tvar negative = false;\n\t\t\t\tvar m;\n\t\n\t\t\t\t// Determine if it is a \"does not include\"\n\t\t\t\tif ( word.charAt(0) === '!' ) {\n\t\t\t\t\tnegative = true;\n\t\t\t\t\tword = word.substring(1);\n\t\t\t\t}\n\t\n\t\t\t\t// Strip the quotes from around matched phrases\n\t\t\t\tif ( word.charAt(0) === '\"' ) {\n\t\t\t\t\tm = word.match( /^\"(.*)\"$/ );\n\t\t\t\t\tword = m ? m[1] : word;\n\t\t\t\t}\n\t\t\t\telse if ( word.charAt(0) === '\\u201C' ) {\n\t\t\t\t\t// Smart quote match (iPhone users)\n\t\t\t\t\tm = word.match( /^\\u201C(.*)\\u201D$/ );\n\t\t\t\t\tword = m ? m[1] : word;\n\t\t\t\t}\n\t\n\t\t\t\t// For our \"not\" case, we need to modify the string that is\n\t\t\t\t// allowed to match at the end of the expression.\n\t\t\t\tif (negative) {\n\t\t\t\t\tif (word.length > 1) {\n\t\t\t\t\t\tnot.push('(?!'+word+')');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tword = '';\n\t\t\t\t}\n\t\n\t\t\t\treturn word.replace(/\"/g, '');\n\t\t\t} );\n\t\n\t\t\tvar match = not.length\n\t\t\t\t? not.join('')\n\t\t\t\t: '';\n\t\n\t\t\tvar boundary = options.boundary\n\t\t\t\t? '\\\\b'\n\t\t\t\t: '';\n\t\n\t\t\tsearch = '^(?=.*?'+boundary+a.join( ')(?=.*?'+boundary )+')('+match+'.)*$';\n\t\t}\n\t\n\t\treturn new RegExp( search, options.caseInsensitive ? 'i' : '' );\n\t}\n\t\n\t\n\t/**\n\t * Escape a string such that it can be used in a regular expression\n\t *  @param {string} sVal string to escape\n\t *  @returns {string} escaped string\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnEscapeRegex = DataTable.util.escapeRegex;\n\t\n\tvar __filter_div = $('<div>')[0];\n\tvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\t\n\t// Update the filtering data for each row if needed (by invalidation or first run)\n\tfunction _fnFilterData ( settings )\n\t{\n\t\tvar columns = settings.aoColumns;\n\t\tvar data = settings.aoData;\n\t\tvar column;\n\t\tvar j, jen, filterData, cellData, row;\n\t\tvar wasInvalidated = false;\n\t\n\t\tfor ( var rowIdx=0 ; rowIdx<data.length ; rowIdx++ ) {\n\t\t\tif (! data[rowIdx]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\trow = data[rowIdx];\n\t\n\t\t\tif ( ! row._aFilterData ) {\n\t\t\t\tfilterData = [];\n\t\n\t\t\t\tfor ( j=0, jen=columns.length ; j<jen ; j++ ) {\n\t\t\t\t\tcolumn = columns[j];\n\t\n\t\t\t\t\tif ( column.bSearchable ) {\n\t\t\t\t\t\tcellData = _fnGetCellData( settings, rowIdx, j, 'filter' );\n\t\n\t\t\t\t\t\t// Search in DataTables is string based\n\t\t\t\t\t\tif ( cellData === null ) {\n\t\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( typeof cellData !== 'string' && cellData.toString ) {\n\t\t\t\t\t\t\tcellData = cellData.toString();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If it looks like there is an HTML entity in the string,\n\t\t\t\t\t// attempt to decode it so sorting works as expected. Note that\n\t\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\n\t\t\t\t\t// method used here is much faster https://jsperf.com/html-decode\n\t\t\t\t\tif ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\n\t\t\t\t\t\t__filter_div.innerHTML = cellData;\n\t\t\t\t\t\tcellData = __filter_div_textContent ?\n\t\t\t\t\t\t\t__filter_div.textContent :\n\t\t\t\t\t\t\t__filter_div.innerText;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( cellData.replace ) {\n\t\t\t\t\t\tcellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfilterData.push( cellData );\n\t\t\t\t}\n\t\n\t\t\t\trow._aFilterData = filterData;\n\t\t\t\trow._sFilterRow = filterData.join('  ');\n\t\t\t\twasInvalidated = true;\n\t\t\t}\n\t\t}\n\t\n\t\treturn wasInvalidated;\n\t}\n\t\n\t\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitialise ( settings )\n\t{\n\t\tvar i;\n\t\tvar init = settings.oInit;\n\t\tvar deferLoading = settings.deferLoading;\n\t\tvar dataSrc = _fnDataSource( settings );\n\t\n\t\t// Ensure that the table data is fully initialised\n\t\tif ( ! settings.bInitialised ) {\n\t\t\tsetTimeout( function(){ _fnInitialise( settings ); }, 200 );\n\t\t\treturn;\n\t\t}\n\t\n\t\t// Build the header / footer for the table\n\t\t_fnBuildHead( settings, 'header' );\n\t\t_fnBuildHead( settings, 'footer' );\n\t\n\t\t// Load the table's state (if needed) and then render around it and draw\n\t\t_fnLoadState( settings, init, function () {\n\t\t\t// Then draw the header / footer\n\t\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\n\t\t\t// Cache the paging start point, as the first redraw will reset it\n\t\t\tvar iAjaxStart = settings.iInitDisplayStart\n\t\n\t\t\t// Local data load\n\t\t\t// Check if there is data passing into the constructor\n\t\t\tif ( init.aaData ) {\n\t\t\t\tfor ( i=0 ; i<init.aaData.length ; i++ ) {\n\t\t\t\t\t_fnAddData( settings, init.aaData[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( deferLoading || dataSrc == 'dom' ) {\n\t\t\t\t// Grab the data from the page\n\t\t\t\t_fnAddTr( settings, $(settings.nTBody).children('tr') );\n\t\t\t}\n\t\n\t\t\t// Filter not yet applied - copy the display master\n\t\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\n\t\t\t// Enable features\n\t\t\t_fnAddOptionsHtml( settings );\n\t\t\t_fnSortInit( settings );\n\t\n\t\t\t_colGroup( settings );\n\t\n\t\t\t/* Okay to show that something is going on now */\n\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t_fnCallbackFire( settings, null, 'preInit', [settings], true );\n\t\n\t\t\t// If there is default sorting required - let's do it. The sort function\n\t\t\t// will do the drawing for us. Otherwise we draw the table regardless of the\n\t\t\t// Ajax source - this allows the table to look initialised for Ajax sourcing\n\t\t\t// data (show 'loading' message possibly)\n\t\t\t_fnReDraw( settings );\n\t\n\t\t\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\n\t\t\tif ( dataSrc != 'ssp' || deferLoading ) {\n\t\t\t\t// if there is an ajax source load the data\n\t\t\t\tif ( dataSrc == 'ajax' ) {\n\t\t\t\t\t_fnBuildAjax( settings, {}, function(json) {\n\t\t\t\t\t\tvar aData = _fnAjaxDataSrc( settings, json );\n\t\n\t\t\t\t\t\t// Got the data - add it to the table\n\t\t\t\t\t\tfor ( i=0 ; i<aData.length ; i++ ) {\n\t\t\t\t\t\t\t_fnAddData( settings, aData[i] );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Reset the init display for cookie saving. We've already done\n\t\t\t\t\t\t// a filter, and therefore cleared it before. So we need to make\n\t\t\t\t\t\t// it appear 'fresh'\n\t\t\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\n\t\n\t\t\t\t\t\t_fnReDraw( settings );\n\t\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t\t\t_fnInitComplete( settings );\n\t\t\t\t\t}, settings );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_fnInitComplete( settings );\n\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitComplete ( settings )\n\t{\n\t\tif (settings._bInitComplete) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar args = [settings, settings.json];\n\t\n\t\tsettings._bInitComplete = true;\n\t\n\t\t// Table is fully set up and we have data, so calculate the\n\t\t// column widths\n\t\t_fnAdjustColumnSizing( settings );\n\t\n\t\t_fnCallbackFire( settings, null, 'plugin-init', args, true );\n\t\t_fnCallbackFire( settings, 'aoInitComplete', 'init', args, true );\n\t}\n\t\n\tfunction _fnLengthChange ( settings, val )\n\t{\n\t\tvar len = parseInt( val, 10 );\n\t\tsettings._iDisplayLength = len;\n\t\n\t\t_fnLengthOverflow( settings );\n\t\n\t\t// Fire length change event\n\t\t_fnCallbackFire( settings, null, 'length', [settings, len] );\n\t}\n\t\n\t/**\n\t * Alter the display settings to change the page\n\t *  @param {object} settings DataTables settings object\n\t *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n\t *    \"next\" or \"last\" or page number to jump to (integer)\n\t *  @param [bool] redraw Automatically draw the update or not\n\t *  @returns {bool} true page has changed, false - no change\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnPageChange ( settings, action, redraw )\n\t{\n\t\tvar\n\t\t\tstart     = settings._iDisplayStart,\n\t\t\tlen       = settings._iDisplayLength,\n\t\t\trecords   = settings.fnRecordsDisplay();\n\t\n\t\tif ( records === 0 || len === -1 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\telse if ( typeof action === \"number\" )\n\t\t{\n\t\t\tstart = action * len;\n\t\n\t\t\tif ( start > records )\n\t\t\t{\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"first\" )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\telse if ( action == \"previous\" )\n\t\t{\n\t\t\tstart = len >= 0 ?\n\t\t\t\tstart - len :\n\t\t\t\t0;\n\t\n\t\t\tif ( start < 0 )\n\t\t\t{\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"next\" )\n\t\t{\n\t\t\tif ( start + len < records )\n\t\t\t{\n\t\t\t\tstart += len;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"last\" )\n\t\t{\n\t\t\tstart = Math.floor( (records-1) / len) * len;\n\t\t}\n\t\telse if ( action === 'ellipsis' )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\n\t\t}\n\t\n\t\tvar changed = settings._iDisplayStart !== start;\n\t\tsettings._iDisplayStart = start;\n\t\n\t\t_fnCallbackFire( settings, null, changed ? 'page' : 'page-nc', [settings] );\n\t\n\t\tif ( changed && redraw ) {\n\t\t\t_fnDraw( settings );\n\t\t}\n\t\n\t\treturn changed;\n\t}\n\t\n\t\n\t/**\n\t * Generate the node required for the processing node\n\t *  @param {object} settings DataTables settings object\n\t */\n\tfunction _processingHtml ( settings )\n\t{\n\t\tvar table = settings.nTable;\n\t\tvar scrolling = settings.oScroll.sX !== '' || settings.oScroll.sY !== '';\n\t\n\t\tif ( settings.oFeatures.bProcessing ) {\n\t\t\tvar n = $('<div/>', {\n\t\t\t\t\t'id': settings.sTableId + '_processing',\n\t\t\t\t\t'class': settings.oClasses.processing.container,\n\t\t\t\t\t'role': 'status'\n\t\t\t\t} )\n\t\t\t\t.html( settings.oLanguage.sProcessing )\n\t\t\t\t.append('<div><div></div><div></div><div></div><div></div></div>');\n\t\n\t\t\t// Different positioning depending on if scrolling is enabled or not\n\t\t\tif (scrolling) {\n\t\t\t\tn.prependTo( $('div.dt-scroll', settings.nTableWrapper) );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tn.insertBefore( table );\n\t\t\t}\n\t\n\t\t\t$(table).on( 'processing.dt.DT', function (e, s, show) {\n\t\t\t\tn.css( 'display', show ? 'block' : 'none' );\n\t\t\t} );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Display or hide the processing indicator\n\t *  @param {object} settings DataTables settings object\n\t *  @param {bool} show Show the processing indicator (true) or not (false)\n\t */\n\tfunction _fnProcessingDisplay ( settings, show )\n\t{\n\t\t// Ignore cases when we are still redrawing\n\t\tif (settings.bDrawing && show === false) {\n\t\t\treturn;\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'processing', [settings, show] );\n\t}\n\t\n\t/**\n\t * Show the processing element if an action takes longer than a given time\n\t *\n\t * @param {*} settings DataTables settings object\n\t * @param {*} enable Do (true) or not (false) async processing (local feature enablement)\n\t * @param {*} run Function to run\n\t */\n\tfunction _fnProcessingRun( settings, enable, run ) {\n\t\tif (! enable) {\n\t\t\t// Immediate execution, synchronous\n\t\t\trun();\n\t\t}\n\t\telse {\n\t\t\t_fnProcessingDisplay(settings, true);\n\t\t\t\n\t\t\t// Allow the processing display to show if needed\n\t\t\tsetTimeout(function () {\n\t\t\t\trun();\n\t\n\t\t\t\t_fnProcessingDisplay(settings, false);\n\t\t\t}, 0);\n\t\t}\n\t}\n\t/**\n\t * Add any control elements for the table - specifically scrolling\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Node to add to the DOM\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlTable ( settings )\n\t{\n\t\tvar table = $(settings.nTable);\n\t\n\t\t// Scrolling from here on in\n\t\tvar scroll = settings.oScroll;\n\t\n\t\tif ( scroll.sX === '' && scroll.sY === '' ) {\n\t\t\treturn settings.nTable;\n\t\t}\n\t\n\t\tvar scrollX = scroll.sX;\n\t\tvar scrollY = scroll.sY;\n\t\tvar classes = settings.oClasses.scrolling;\n\t\tvar caption = settings.captionNode;\n\t\tvar captionSide = caption ? caption._captionSide : null;\n\t\tvar headerClone = $( table[0].cloneNode(false) );\n\t\tvar footerClone = $( table[0].cloneNode(false) );\n\t\tvar footer = table.children('tfoot');\n\t\tvar _div = '<div/>';\n\t\tvar size = function ( s ) {\n\t\t\treturn !s ? null : _fnStringToCss( s );\n\t\t};\n\t\n\t\tif ( ! footer.length ) {\n\t\t\tfooter = null;\n\t\t}\n\t\n\t\t/*\n\t\t * The HTML structure that we want to generate in this function is:\n\t\t *  div - scroller\n\t\t *    div - scroll head\n\t\t *      div - scroll head inner\n\t\t *        table - scroll head table\n\t\t *          thead - thead\n\t\t *    div - scroll body\n\t\t *      table - table (master table)\n\t\t *        thead - thead clone for sizing\n\t\t *        tbody - tbody\n\t\t *    div - scroll foot\n\t\t *      div - scroll foot inner\n\t\t *        table - scroll foot table\n\t\t *          tfoot - tfoot\n\t\t */\n\t\tvar scroller = $( _div, { 'class': classes.container } )\n\t\t\t.append(\n\t\t\t\t$(_div, { 'class': classes.header.self } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$(_div, { 'class': classes.header.inner } )\n\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\t'box-sizing': 'content-box',\n\t\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\theaderClone\n\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t\t.append( captionSide === 'top' ? caption : null )\n\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\ttable.children('thead')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t.append(\n\t\t\t\t$(_div, { 'class': classes.body } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\t\twidth: size( scrollX )\n\t\t\t\t\t} )\n\t\t\t\t\t.append( table )\n\t\t\t);\n\t\n\t\tif ( footer ) {\n\t\t\tscroller.append(\n\t\t\t\t$(_div, { 'class': classes.footer.self } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$(_div, { 'class': classes.footer.inner } )\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\tfooterClone\n\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t\t.append( captionSide === 'bottom' ? caption : null )\n\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\ttable.children('tfoot')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\n\t\tvar children = scroller.children();\n\t\tvar scrollHead = children[0];\n\t\tvar scrollBody = children[1];\n\t\tvar scrollFoot = footer ? children[2] : null;\n\t\n\t\t// When the body is scrolled, then we also want to scroll the headers\n\t\t$(scrollBody).on( 'scroll.DT', function () {\n\t\t\tvar scrollLeft = this.scrollLeft;\n\t\n\t\t\tscrollHead.scrollLeft = scrollLeft;\n\t\n\t\t\tif ( footer ) {\n\t\t\t\tscrollFoot.scrollLeft = scrollLeft;\n\t\t\t}\n\t\t} );\n\t\n\t\t// When focus is put on the header cells, we might need to scroll the body\n\t\t$('th, td', scrollHead).on('focus', function () {\n\t\t\tvar scrollLeft = scrollHead.scrollLeft;\n\t\n\t\t\tscrollBody.scrollLeft = scrollLeft;\n\t\n\t\t\tif ( footer ) {\n\t\t\t\tscrollBody.scrollLeft = scrollLeft;\n\t\t\t}\n\t\t});\n\t\n\t\t$(scrollBody).css('max-height', scrollY);\n\t\tif (! scroll.bCollapse) {\n\t\t\t$(scrollBody).css('height', scrollY);\n\t\t}\n\t\n\t\tsettings.nScrollHead = scrollHead;\n\t\tsettings.nScrollBody = scrollBody;\n\t\tsettings.nScrollFoot = scrollFoot;\n\t\n\t\t// On redraw - align columns\n\t\tsettings.aoDrawCallback.push(_fnScrollDraw);\n\t\n\t\treturn scroller[0];\n\t}\n\t\n\t\n\t\n\t/**\n\t * Update the header, footer and body tables for resizing - i.e. column\n\t * alignment.\n\t *\n\t * Welcome to the most horrible function DataTables. The process that this\n\t * function follows is basically:\n\t *   1. Re-create the table inside the scrolling div\n\t *   2. Correct colgroup > col values if needed\n\t *   3. Copy colgroup > col over to header and footer\n\t *   4. Clean up\n\t *\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnScrollDraw ( settings )\n\t{\n\t\t// Given that this is such a monster function, a lot of variables are use\n\t\t// to try and keep the minimised size as small as possible\n\t\tvar\n\t\t\tscroll         = settings.oScroll,\n\t\t\tbarWidth       = scroll.iBarWidth,\n\t\t\tdivHeader      = $(settings.nScrollHead),\n\t\t\tdivHeaderInner = divHeader.children('div'),\n\t\t\tdivHeaderTable = divHeaderInner.children('table'),\n\t\t\tdivBodyEl      = settings.nScrollBody,\n\t\t\tdivBody        = $(divBodyEl),\n\t\t\tdivFooter      = $(settings.nScrollFoot),\n\t\t\tdivFooterInner = divFooter.children('div'),\n\t\t\tdivFooterTable = divFooterInner.children('table'),\n\t\t\theader         = $(settings.nTHead),\n\t\t\ttable          = $(settings.nTable),\n\t\t\tfooter         = settings.nTFoot && $('th, td', settings.nTFoot).length ? $(settings.nTFoot) : null,\n\t\t\tbrowser        = settings.oBrowser,\n\t\t\theaderCopy, footerCopy;\n\t\n\t\t// If the scrollbar visibility has changed from the last draw, we need to\n\t\t// adjust the column sizes as the table width will have changed to account\n\t\t// for the scrollbar\n\t\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\t\t\n\t\tif ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\n\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t\treturn; // adjust column sizing will call this function again\n\t\t}\n\t\telse {\n\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t}\n\t\n\t\t// 1. Re-create the table inside the scrolling div\n\t\t// Remove the old minimised thead and tfoot elements in the inner table\n\t\ttable.children('thead, tfoot').remove();\n\t\n\t\t// Clone the current header and footer elements and then place it into the inner table\n\t\theaderCopy = header.clone().prependTo( table );\n\t\theaderCopy.find('th, td').removeAttr('tabindex');\n\t\theaderCopy.find('[id]').removeAttr('id');\n\t\n\t\tif ( footer ) {\n\t\t\tfooterCopy = footer.clone().prependTo( table );\n\t\t\tfooterCopy.find('[id]').removeAttr('id');\n\t\t}\n\t\n\t\t// 2. Correct colgroup > col values if needed\n\t\t// It is possible that the cell sizes are smaller than the content, so we need to\n\t\t// correct colgroup>col for such cases. This can happen if the auto width detection\n\t\t// uses a cell which has a longer string, but isn't the widest! For example \n\t\t// \"Chief Executive Officer (CEO)\" is the longest string in the demo, but\n\t\t// \"Systems Administrator\" is actually the widest string since it doesn't collapse.\n\t\t// Note the use of translating into a column index to get the `col` element. This\n\t\t// is because of Responsive which might remove `col` elements, knocking the alignment\n\t\t// of the indexes out.\n\t\tif (settings.aiDisplay.length) {\n\t\t\t// Get the column sizes from the first row in the table. This should really be a\n\t\t\t// [].find, but it wasn't supported in Chrome until Sept 2015, and DT has 10 year\n\t\t\t// browser support\n\t\t\tvar firstTr = null;\n\t\t\tvar start = _fnDataSource( settings ) !== 'ssp'\n\t\t\t\t? settings._iDisplayStart\n\t\t\t\t: 0;\n\t\n\t\t\tfor (i=start ; i<start + settings.aiDisplay.length ; i++) {\n\t\t\t\tvar idx = settings.aiDisplay[i];\n\t\t\t\tvar tr = settings.aoData[idx].nTr;\n\t\n\t\t\t\tif (tr) {\n\t\t\t\t\tfirstTr = tr;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (firstTr) {\n\t\t\t\tvar colSizes = $(firstTr).children('th, td').map(function (vis) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tidx: _fnVisibleToColumnIndex(settings, vis),\n\t\t\t\t\t\twidth: $(this).outerWidth()\n\t\t\t\t\t};\n\t\t\t\t});\n\t\n\t\t\t\t// Check against what the colgroup > col is set to and correct if needed\n\t\t\t\tfor (var i=0 ; i<colSizes.length ; i++) {\n\t\t\t\t\tvar colEl = settings.aoColumns[ colSizes[i].idx ].colEl[0];\n\t\t\t\t\tvar colWidth = colEl.style.width.replace('px', '');\n\t\n\t\t\t\t\tif (colWidth !== colSizes[i].width) {\n\t\t\t\t\t\tcolEl.style.width = colSizes[i].width + 'px';\n\t\n\t\t\t\t\t\tif (scroll.sX) {\n\t\t\t\t\t\t\tcolEl.style.minWidth = colSizes[i].width + 'px';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// 3. Copy the colgroup over to the header and footer\n\t\tdivHeaderTable\n\t\t\t.find('colgroup')\n\t\t\t.remove();\n\t\n\t\tdivHeaderTable.append(settings.colgroup.clone());\n\t\n\t\tif ( footer ) {\n\t\t\tdivFooterTable\n\t\t\t\t.find('colgroup')\n\t\t\t\t.remove();\n\t\n\t\t\tdivFooterTable.append(settings.colgroup.clone());\n\t\t}\n\t\n\t\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\n\t\t// the content of the cell so that the width applied to the header and body\n\t\t// both match, but we want to hide it completely.\n\t\t$('th, td', headerCopy).each(function () {\n\t\t\t$(this.childNodes).wrapAll('<div class=\"dt-scroll-sizing\">');\n\t\t});\n\t\n\t\tif ( footer ) {\n\t\t\t$('th, td', footerCopy).each(function () {\n\t\t\t\t$(this.childNodes).wrapAll('<div class=\"dt-scroll-sizing\">');\n\t\t\t});\n\t\t}\n\t\n\t\t// 4. Clean up\n\t\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\n\t\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\t\tvar isScrolling = Math.floor(table.height()) > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n\t\tvar paddingSide = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\n\t\n\t\t// Set the width's of the header and footer tables\n\t\tvar outerWidth = table.outerWidth();\n\t\n\t\tdivHeaderTable.css('width', _fnStringToCss( outerWidth ));\n\t\tdivHeaderInner\n\t\t\t.css('width', _fnStringToCss( outerWidth ))\n\t\t\t.css(paddingSide, isScrolling ? barWidth+\"px\" : \"0px\");\n\t\n\t\tif ( footer ) {\n\t\t\tdivFooterTable.css('width', _fnStringToCss( outerWidth ));\n\t\t\tdivFooterInner\n\t\t\t\t.css('width', _fnStringToCss( outerWidth ))\n\t\t\t\t.css(paddingSide, isScrolling ? barWidth+\"px\" : \"0px\");\n\t\t}\n\t\n\t\t// Correct DOM ordering for colgroup - comes before the thead\n\t\ttable.children('colgroup').prependTo(table);\n\t\n\t\t// Adjust the position of the header in case we loose the y-scrollbar\n\t\tdivBody.trigger('scroll');\n\t\n\t\t// If sorting or filtering has occurred, jump the scrolling back to the top\n\t\t// only if we aren't holding the position\n\t\tif ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\n\t\t\tdivBodyEl.scrollTop = 0;\n\t\t}\n\t}\n\t\n\t/**\n\t * Calculate the width of columns for the table\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCalculateColumnWidths ( settings )\n\t{\n\t\t// Not interested in doing column width calculation if auto-width is disabled\n\t\tif (! settings.oFeatures.bAutoWidth) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\ttable = settings.nTable,\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tscroll = settings.oScroll,\n\t\t\tscrollY = scroll.sY,\n\t\t\tscrollX = scroll.sX,\n\t\t\tscrollXInner = scroll.sXInner,\n\t\t\tvisibleColumns = _fnGetColumns( settings, 'bVisible' ),\n\t\t\ttableWidthAttr = table.getAttribute('width'), // from DOM element\n\t\t\ttableContainer = table.parentNode,\n\t\t\ti, column, columnIdx;\n\t\t\t\n\t\tvar styleWidth = table.style.width;\n\t\tvar containerWidth = _fnWrapperWidth(settings);\n\t\n\t\t// Don't re-run for the same width as the last time\n\t\tif (containerWidth === settings.containerWidth) {\n\t\t\treturn false;\n\t\t}\n\t\n\t\tsettings.containerWidth = containerWidth;\n\t\n\t\t// If there is no width applied as a CSS style or as an attribute, we assume that\n\t\t// the width is intended to be 100%, which is usually is in CSS, but it is very\n\t\t// difficult to correctly parse the rules to get the final result.\n\t\tif ( ! styleWidth && ! tableWidthAttr) {\n\t\t\ttable.style.width = '100%';\n\t\t\tstyleWidth = '100%';\n\t\t}\n\t\n\t\tif ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\n\t\t\ttableWidthAttr = styleWidth;\n\t\t}\n\t\n\t\t// Let plug-ins know that we are doing a recalc, in case they have changed any of the\n\t\t// visible columns their own way (e.g. Responsive uses display:none).\n\t\t_fnCallbackFire(\n\t\t\tsettings,\n\t\t\tnull,\n\t\t\t'column-calc',\n\t\t\t{visible: visibleColumns},\n\t\t\tfalse\n\t\t);\n\t\n\t\t// Construct a single row, worst case, table with the widest\n\t\t// node in the data, assign any user defined widths, then insert it into\n\t\t// the DOM and allow the browser to do all the hard work of calculating\n\t\t// table widths\n\t\tvar tmpTable = $(table.cloneNode())\n\t\t\t.css( 'visibility', 'hidden' )\n\t\t\t.removeAttr( 'id' );\n\t\n\t\t// Clean up the table body\n\t\ttmpTable.append('<tbody>')\n\t\tvar tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\n\t\n\t\t// Clone the table header and footer - we can't use the header / footer\n\t\t// from the cloned table, since if scrolling is active, the table's\n\t\t// real header and footer are contained in different table tags\n\t\ttmpTable\n\t\t\t.append( $(settings.nTHead).clone() )\n\t\t\t.append( $(settings.nTFoot).clone() );\n\t\n\t\t// Remove any assigned widths from the footer (from scrolling)\n\t\ttmpTable.find('tfoot th, tfoot td').css('width', '');\n\t\n\t\t// Apply custom sizing to the cloned header\n\t\ttmpTable.find('thead th, thead td').each( function () {\n\t\t\t// Get the `width` from the header layout\n\t\t\tvar width = _fnColumnsSumWidth( settings, this, true, false );\n\t\n\t\t\tif ( width ) {\n\t\t\t\tthis.style.width = width;\n\t\n\t\t\t\t// For scrollX we need to force the column width otherwise the\n\t\t\t\t// browser will collapse it. If this width is smaller than the\n\t\t\t\t// width the column requires, then it will have no effect\n\t\t\t\tif ( scrollX ) {\n\t\t\t\t\tthis.style.minWidth = width;\n\t\n\t\t\t\t\t$( this ).append( $('<div/>').css( {\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\theight: 1\n\t\t\t\t\t} ) );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.style.width = '';\n\t\t\t}\n\t\t} );\n\t\n\t\t// Find the widest piece of data for each column and put it into the table\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\tcolumnIdx = visibleColumns[i];\n\t\t\tcolumn = columns[ columnIdx ];\n\t\n\t\t\tvar longest = _fnGetMaxLenString(settings, columnIdx);\n\t\t\tvar autoClass = _ext.type.className[column.sType];\n\t\t\tvar text = longest + column.sContentPadding;\n\t\t\tvar insert = longest.indexOf('<') === -1\n\t\t\t\t? document.createTextNode(text)\n\t\t\t\t: text\n\t\t\t\n\t\t\t$('<td/>')\n\t\t\t\t.addClass(autoClass)\n\t\t\t\t.addClass(column.sClass)\n\t\t\t\t.append(insert)\n\t\t\t\t.appendTo(tr);\n\t\t}\n\t\n\t\t// Tidy the temporary table - remove name attributes so there aren't\n\t\t// duplicated in the dom (radio elements for example)\n\t\t$('[name]', tmpTable).removeAttr('name');\n\t\n\t\t// Table has been built, attach to the document so we can work with it.\n\t\t// A holding element is used, positioned at the top of the container\n\t\t// with minimal height, so it has no effect on if the container scrolls\n\t\t// or not. Otherwise it might trigger scrolling when it actually isn't\n\t\t// needed\n\t\tvar holder = $('<div/>').css( scrollX || scrollY ?\n\t\t\t\t{\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\theight: 1,\n\t\t\t\t\tright: 0,\n\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t} :\n\t\t\t\t{}\n\t\t\t)\n\t\t\t.append( tmpTable )\n\t\t\t.appendTo( tableContainer );\n\t\n\t\t// When scrolling (X or Y) we want to set the width of the table as \n\t\t// appropriate. However, when not scrolling leave the table width as it\n\t\t// is. This results in slightly different, but I think correct behaviour\n\t\tif ( scrollX && scrollXInner ) {\n\t\t\ttmpTable.width( scrollXInner );\n\t\t}\n\t\telse if ( scrollX ) {\n\t\t\ttmpTable.css( 'width', 'auto' );\n\t\t\ttmpTable.removeAttr('width');\n\t\n\t\t\t// If there is no width attribute or style, then allow the table to\n\t\t\t// collapse\n\t\t\tif ( tmpTable.outerWidth() < tableContainer.clientWidth && tableWidthAttr ) {\n\t\t\t\ttmpTable.outerWidth( tableContainer.clientWidth );\n\t\t\t}\n\t\t}\n\t\telse if ( scrollY ) {\n\t\t\ttmpTable.outerWidth( tableContainer.clientWidth );\n\t\t}\n\t\telse if ( tableWidthAttr ) {\n\t\t\ttmpTable.outerWidth( tableWidthAttr );\n\t\t}\n\t\n\t\t// Get the width of each column in the constructed table\n\t\tvar total = 0;\n\t\tvar bodyCells = tmpTable.find('tbody tr').eq(0).children();\n\t\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t// Use getBounding for sub-pixel accuracy, which we then want to round up!\n\t\t\tvar bounding = bodyCells[i].getBoundingClientRect().width;\n\t\n\t\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\n\t\t\t// of the table might not equal the total given here\n\t\t\ttotal += bounding;\n\t\n\t\t\t// Width for each column to use\n\t\t\tcolumns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding );\n\t\t}\n\t\n\t\ttable.style.width = _fnStringToCss( total );\n\t\n\t\t// Finished with the table - ditch it\n\t\tholder.remove();\n\t\n\t\t// If there is a width attr, we want to attach an event listener which\n\t\t// allows the table sizing to automatically adjust when the window is\n\t\t// resized. Use the width attr rather than CSS, since we can't know if the\n\t\t// CSS is a relative value or absolute - DOM read is always px.\n\t\tif ( tableWidthAttr ) {\n\t\t\ttable.style.width = _fnStringToCss( tableWidthAttr );\n\t\t}\n\t\n\t\tif ( (tableWidthAttr || scrollX) && ! settings._reszEvt ) {\n\t\t\tvar resize = DataTable.util.throttle( function () {\n\t\t\t\tvar newWidth = _fnWrapperWidth(settings);\n\t\n\t\t\t\t// Don't do it if destroying or the container width is 0\n\t\t\t\tif (! settings.bDestroying && newWidth !== 0) {\n\t\t\t\t\t_fnAdjustColumnSizing( settings );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\t// For browsers that support it (~2020 onwards for wide support) we can watch for the\n\t\t\t// container changing width.\n\t\t\tif (window.ResizeObserver) {\n\t\t\t\t// This is a tricky beast - if the element is visible when `.observe()` is called,\n\t\t\t\t// then the callback is immediately run. Which we don't want. If the element isn't\n\t\t\t\t// visible, then it isn't run, but we want it to run when it is then made visible.\n\t\t\t\t// This flag allows the above to be satisfied.\n\t\t\t\tvar first = $(settings.nTableWrapper).is(':visible');\n\t\n\t\t\t\t// Use an empty div to attach the observer so it isn't impacted by height changes\n\t\t\t\tvar resizer = $('<div>')\n\t\t\t\t\t.css({\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\theight: 0\n\t\t\t\t\t})\n\t\t\t\t\t.addClass('dt-autosize')\n\t\t\t\t\t.appendTo(settings.nTableWrapper);\n\t\n\t\t\t\tsettings.resizeObserver = new ResizeObserver(function (e) {\n\t\t\t\t\tif (first) {\n\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tresize();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\tsettings.resizeObserver.observe(resizer[0]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// For old browsers, the best we can do is listen for a window resize\n\t\t\t\t$(window).on('resize.DT-'+settings.sInstance, resize);\n\t\t\t}\n\t\n\t\t\tsettings._reszEvt = true;\n\t\t}\n\t}\n\t\n\t/**\n\t * Get the width of the DataTables wrapper element\n\t *\n\t * @param {*} settings DataTables settings object\n\t * @returns Width\n\t */\n\tfunction _fnWrapperWidth(settings) {\n\t\treturn $(settings.nTableWrapper).is(':visible')\n\t\t\t? $(settings.nTableWrapper).width()\n\t\t\t: 0;\n\t}\n\t\n\t/**\n\t * Get the maximum strlen for each data column\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} colIdx column of interest\n\t *  @returns {string} string of the max length\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetMaxLenString( settings, colIdx )\n\t{\n\t\tvar column = settings.aoColumns[colIdx];\n\t\n\t\tif (! column.maxLenString) {\n\t\t\tvar s, max='', maxLen = -1;\n\t\t\n\t\t\tfor ( var i=0, ien=settings.aiDisplayMaster.length ; i<ien ; i++ ) {\n\t\t\t\tvar rowIdx = settings.aiDisplayMaster[i];\n\t\t\t\tvar data = _fnGetRowDisplay(settings, rowIdx)[colIdx];\n\t\n\t\t\t\tvar cellString = data && typeof data === 'object' && data.nodeType\n\t\t\t\t\t? data.innerHTML\n\t\t\t\t\t: data+'';\n\t\n\t\t\t\t// Remove id / name attributes from elements so they\n\t\t\t\t// don't interfere with existing elements\n\t\t\t\tcellString = cellString\n\t\t\t\t\t.replace(/id=\".*?\"/g, '')\n\t\t\t\t\t.replace(/name=\".*?\"/g, '');\n\t\n\t\t\t\ts = _stripHtml(cellString)\n\t\t\t\t\t.replace( /&nbsp;/g, ' ' );\n\t\t\n\t\t\t\tif ( s.length > maxLen ) {\n\t\t\t\t\t// We want the HTML in the string, but the length that\n\t\t\t\t\t// is important is the stripped string\n\t\t\t\t\tmax = cellString;\n\t\t\t\t\tmaxLen = s.length;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tcolumn.maxLenString = max;\n\t\t}\n\t\n\t\treturn column.maxLenString;\n\t}\n\t\n\t\n\t/**\n\t * Append a CSS unit (only if required) to a string\n\t *  @param {string} value to css-ify\n\t *  @returns {string} value with css unit\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnStringToCss( s )\n\t{\n\t\tif ( s === null ) {\n\t\t\treturn '0px';\n\t\t}\n\t\n\t\tif ( typeof s == 'number' ) {\n\t\t\treturn s < 0 ?\n\t\t\t\t'0px' :\n\t\t\t\ts+'px';\n\t\t}\n\t\n\t\t// Check it has a unit character already\n\t\treturn s.match(/\\d$/) ?\n\t\t\ts+'px' :\n\t\t\ts;\n\t}\n\t\n\t/**\n\t * Re-insert the `col` elements for current visibility\n\t *\n\t * @param {*} settings DT settings\n\t */\n\tfunction _colGroup( settings ) {\n\t\tvar cols = settings.aoColumns;\n\t\n\t\tsettings.colgroup.empty();\n\t\n\t\tfor (i=0 ; i<cols.length ; i++) {\n\t\t\tif (cols[i].bVisible) {\n\t\t\t\tsettings.colgroup.append(cols[i].colEl);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\tfunction _fnSortInit( settings ) {\n\t\tvar target = settings.nTHead;\n\t\tvar headerRows = target.querySelectorAll('tr');\n\t\tvar legacyTop = settings.bSortCellsTop;\n\t\tvar notSelector = ':not([data-dt-order=\"disable\"]):not([data-dt-order=\"icon-only\"])';\n\t\t\n\t\t// Legacy support for `orderCellsTop`\n\t\tif (legacyTop === true) {\n\t\t\ttarget = headerRows[0];\n\t\t}\n\t\telse if (legacyTop === false) {\n\t\t\ttarget = headerRows[ headerRows.length - 1 ];\n\t\t}\n\t\n\t\t_fnSortAttachListener(\n\t\t\tsettings,\n\t\t\ttarget,\n\t\t\ttarget === settings.nTHead\n\t\t\t\t? 'tr'+notSelector+' th'+notSelector+', tr'+notSelector+' td'+notSelector\n\t\t\t\t: 'th'+notSelector+', td'+notSelector\n\t\t);\n\t\n\t\t// Need to resolve the user input array into our internal structure\n\t\tvar order = [];\n\t\t_fnSortResolve( settings, order, settings.aaSorting );\n\t\n\t\tsettings.aaSorting = order;\n\t}\n\t\n\t\n\tfunction _fnSortAttachListener(settings, node, selector, column, callback) {\n\t\t_fnBindAction( node, selector, function (e) {\n\t\t\tvar run = false;\n\t\t\tvar columns = column === undefined\n\t\t\t\t? _fnColumnsFromHeader( e.target )\n\t\t\t\t: [column];\n\t\n\t\t\tif ( columns.length ) {\n\t\t\t\tfor ( var i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\t\t\tvar ret = _fnSortAdd( settings, columns[i], i, e.shiftKey );\n\t\n\t\t\t\t\tif (ret !== false) {\n\t\t\t\t\t\trun = true;\n\t\t\t\t\t}\t\t\t\t\t\n\t\n\t\t\t\t\t// If the first entry is no sort, then subsequent\n\t\t\t\t\t// sort columns are ignored\n\t\t\t\t\tif (settings.aaSorting.length === 1 && settings.aaSorting[0][1] === '') {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif (run) {\n\t\t\t\t\t_fnProcessingRun(settings, true, function () {\n\t\t\t\t\t\t_fnSort( settings );\n\t\t\t\t\t\t_fnSortDisplay( settings, settings.aiDisplay );\n\t\n\t\t\t\t\t\t_fnReDraw( settings, false, false );\n\t\n\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\t\n\t/**\n\t * Sort the display array to match the master's order\n\t * @param {*} settings\n\t */\n\tfunction _fnSortDisplay(settings, display) {\n\t\tif (display.length < 2) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar master = settings.aiDisplayMaster;\n\t\tvar masterMap = {};\n\t\tvar map = {};\n\t\tvar i;\n\t\n\t\t// Rather than needing an `indexOf` on master array, we can create a map\n\t\tfor (i=0 ; i<master.length ; i++) {\n\t\t\tmasterMap[master[i]] = i;\n\t\t}\n\t\n\t\t// And then cache what would be the indexOf fom the display\n\t\tfor (i=0 ; i<display.length ; i++) {\n\t\t\tmap[display[i]] = masterMap[display[i]];\n\t\t}\n\t\n\t\tdisplay.sort(function(a, b){\n\t\t\t// Short version of this function is simply `master.indexOf(a) - master.indexOf(b);`\n\t\t\treturn map[a] - map[b];\n\t\t});\n\t}\n\t\n\t\n\tfunction _fnSortResolve (settings, nestedSort, sort) {\n\t\tvar push = function ( a ) {\n\t\t\tif ($.isPlainObject(a)) {\n\t\t\t\tif (a.idx !== undefined) {\n\t\t\t\t\t// Index based ordering\n\t\t\t\t\tnestedSort.push([a.idx, a.dir]);\n\t\t\t\t}\n\t\t\t\telse if (a.name) {\n\t\t\t\t\t// Name based ordering\n\t\t\t\t\tvar cols = _pluck( settings.aoColumns, 'sName');\n\t\t\t\t\tvar idx = cols.indexOf(a.name);\n\t\n\t\t\t\t\tif (idx !== -1) {\n\t\t\t\t\t\tnestedSort.push([idx, a.dir]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Plain column index and direction pair\n\t\t\t\tnestedSort.push(a);\n\t\t\t}\n\t\t};\n\t\n\t\tif ( $.isPlainObject(sort) ) {\n\t\t\t// Object\n\t\t\tpush(sort);\n\t\t}\n\t\telse if ( sort.length && typeof sort[0] === 'number' ) {\n\t\t\t// 1D array\n\t\t\tpush(sort);\n\t\t}\n\t\telse if ( sort.length ) {\n\t\t\t// 2D array\n\t\t\tfor (var z=0; z<sort.length; z++) {\n\t\t\t\tpush(sort[z]); // Object or array\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\tfunction _fnSortFlatten ( settings )\n\t{\n\t\tvar\n\t\t\ti, k, kLen,\n\t\t\taSort = [],\n\t\t\textSort = DataTable.ext.type.order,\n\t\t\taoColumns = settings.aoColumns,\n\t\t\taDataSort, iCol, sType, srcCol,\n\t\t\tfixed = settings.aaSortingFixed,\n\t\t\tfixedObj = $.isPlainObject( fixed ),\n\t\t\tnestedSort = [];\n\t\t\n\t\tif ( ! settings.oFeatures.bSort ) {\n\t\t\treturn aSort;\n\t\t}\n\t\n\t\t// Build the sort array, with pre-fix and post-fix options if they have been\n\t\t// specified\n\t\tif ( Array.isArray( fixed ) ) {\n\t\t\t_fnSortResolve( settings, nestedSort, fixed );\n\t\t}\n\t\n\t\tif ( fixedObj && fixed.pre ) {\n\t\t\t_fnSortResolve( settings, nestedSort, fixed.pre );\n\t\t}\n\t\n\t\t_fnSortResolve( settings, nestedSort, settings.aaSorting );\n\t\n\t\tif (fixedObj && fixed.post ) {\n\t\t\t_fnSortResolve( settings, nestedSort, fixed.post );\n\t\t}\n\t\n\t\tfor ( i=0 ; i<nestedSort.length ; i++ )\n\t\t{\n\t\t\tsrcCol = nestedSort[i][0];\n\t\n\t\t\tif ( aoColumns[ srcCol ] ) {\n\t\t\t\taDataSort = aoColumns[ srcCol ].aDataSort;\n\t\n\t\t\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\n\t\t\t\t{\n\t\t\t\t\tiCol = aDataSort[k];\n\t\t\t\t\tsType = aoColumns[ iCol ].sType || 'string';\n\t\n\t\t\t\t\tif ( nestedSort[i]._idx === undefined ) {\n\t\t\t\t\t\tnestedSort[i]._idx = aoColumns[iCol].asSorting.indexOf(nestedSort[i][1]);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( nestedSort[i][1] ) {\n\t\t\t\t\t\taSort.push( {\n\t\t\t\t\t\t\tsrc:       srcCol,\n\t\t\t\t\t\t\tcol:       iCol,\n\t\t\t\t\t\t\tdir:       nestedSort[i][1],\n\t\t\t\t\t\t\tindex:     nestedSort[i]._idx,\n\t\t\t\t\t\t\ttype:      sType,\n\t\t\t\t\t\t\tformatter: extSort[ sType+\"-pre\" ],\n\t\t\t\t\t\t\tsorter:    extSort[ sType+\"-\"+nestedSort[i][1] ]\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn aSort;\n\t}\n\t\n\t/**\n\t * Change the order of the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSort ( oSettings, col, dir )\n\t{\n\t\tvar\n\t\t\ti, ien, iLen,\n\t\t\taiOrig = [],\n\t\t\textSort = DataTable.ext.type.order,\n\t\t\taoData = oSettings.aoData,\n\t\t\tsortCol,\n\t\t\tdisplayMaster = oSettings.aiDisplayMaster,\n\t\t\taSort;\n\t\n\t\t// Make sure the columns all have types defined\n\t\t_fnColumnTypes(oSettings);\n\t\n\t\t// Allow a specific column to be sorted, which will _not_ alter the display\n\t\t// master\n\t\tif (col !== undefined) {\n\t\t\tvar srcCol = oSettings.aoColumns[col];\n\t\n\t\t\taSort = [{\n\t\t\t\tsrc:       col,\n\t\t\t\tcol:       col,\n\t\t\t\tdir:       dir,\n\t\t\t\tindex:     0,\n\t\t\t\ttype:      srcCol.sType,\n\t\t\t\tformatter: extSort[ srcCol.sType+\"-pre\" ],\n\t\t\t\tsorter:    extSort[ srcCol.sType+\"-\"+dir ]\n\t\t\t}];\n\t\t\tdisplayMaster = displayMaster.slice();\n\t\t}\n\t\telse {\n\t\t\taSort = _fnSortFlatten( oSettings );\n\t\t}\n\t\n\t\tfor ( i=0, ien=aSort.length ; i<ien ; i++ ) {\n\t\t\tsortCol = aSort[i];\n\t\n\t\t\t// Load the data needed for the sort, for each cell\n\t\t\t_fnSortData( oSettings, sortCol.col );\n\t\t}\n\t\n\t\t/* No sorting required if server-side or no sorting array */\n\t\tif ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\n\t\t{\n\t\t\t// Reset the initial positions on each pass so we get a stable sort\n\t\t\tfor ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\n\t\t\t\taiOrig[ i ] = i;\n\t\t\t}\n\t\n\t\t\t// If the first sort is desc, then reverse the array to preserve original\n\t\t\t// order, just in reverse\n\t\t\tif (aSort.length && aSort[0].dir === 'desc' && oSettings.orderDescReverse) {\n\t\t\t\taiOrig.reverse();\n\t\t\t}\n\t\n\t\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\n\t\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n\t\t\t * follow on it's own, but this is what we want (example two column sorting):\n\t\t\t *  fnLocalSorting = function(a,b){\n\t\t\t *    var test;\n\t\t\t *    test = oSort['string-asc']('data11', 'data12');\n\t\t\t *      if (test !== 0)\n\t\t\t *        return test;\n\t\t\t *    test = oSort['numeric-desc']('data21', 'data22');\n\t\t\t *    if (test !== 0)\n\t\t\t *      return test;\n\t\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t\t *  }\n\t\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\n\t\t\t * test the next column. If all columns match, then we use a numeric sort on the row\n\t\t\t * positions in the original data array to provide a stable sort.\n\t\t\t */\n\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\tvar\n\t\t\t\t\tx, y, k, test, sort,\n\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\tdataB = aoData[b]._aSortData;\n\t\n\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\tsort = aSort[k];\n\t\n\t\t\t\t\t// Data, which may have already been through a `-pre` function\n\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\ty = dataB[ sort.col ];\n\t\n\t\t\t\t\tif (sort.sorter) {\n\t\t\t\t\t\t// If there is a custom sorter (`-asc` or `-desc`) for this\n\t\t\t\t\t\t// data type, use it\n\t\t\t\t\t\ttest = sort.sorter(x, y);\n\t\n\t\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\t\treturn test;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Otherwise, use generic sorting\n\t\t\t\t\t\ttest = x<y ? -1 : x>y ? 1 : 0;\n\t\n\t\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tx = aiOrig[a];\n\t\t\t\ty = aiOrig[b];\n\t\n\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t} );\n\t\t}\n\t\telse if ( aSort.length === 0 ) {\n\t\t\t// Apply index order\n\t\t\tdisplayMaster.sort(function (x, y) {\n\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t});\n\t\t}\n\t\n\t\tif (col === undefined) {\n\t\t\t// Tell the draw function that we have sorted the data\n\t\t\toSettings.bSorted = true;\n\t\t\toSettings.sortDetails = aSort;\n\t\n\t\t\t_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort] );\n\t\t}\n\t\n\t\treturn displayMaster;\n\t}\n\t\n\t\n\t/**\n\t * Function to run on user sort request\n\t *  @param {object} settings dataTables settings object\n\t *  @param {node} attachTo node to attach the handler to\n\t *  @param {int} colIdx column sorting index\n\t *  @param {int} addIndex Counter\n\t *  @param {boolean} [shift=false] Shift click add\n\t *  @param {function} [callback] callback function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortAdd ( settings, colIdx, addIndex, shift )\n\t{\n\t\tvar col = settings.aoColumns[ colIdx ];\n\t\tvar sorting = settings.aaSorting;\n\t\tvar asSorting = col.asSorting;\n\t\tvar nextSortIdx;\n\t\tvar next = function ( a, overflow ) {\n\t\t\tvar idx = a._idx;\n\t\t\tif ( idx === undefined ) {\n\t\t\t\tidx = asSorting.indexOf(a[1]);\n\t\t\t}\n\t\n\t\t\treturn idx+1 < asSorting.length ?\n\t\t\t\tidx+1 :\n\t\t\t\toverflow ?\n\t\t\t\t\tnull :\n\t\t\t\t\t0;\n\t\t};\n\t\n\t\tif ( ! col.bSortable ) {\n\t\t\treturn false;\n\t\t}\n\t\n\t\t// Convert to 2D array if needed\n\t\tif ( typeof sorting[0] === 'number' ) {\n\t\t\tsorting = settings.aaSorting = [ sorting ];\n\t\t}\n\t\n\t\t// If appending the sort then we are multi-column sorting\n\t\tif ( (shift || addIndex) && settings.oFeatures.bSortMulti ) {\n\t\t\t// Are we already doing some kind of sort on this column?\n\t\t\tvar sortIdx = _pluck(sorting, '0').indexOf(colIdx);\n\t\n\t\t\tif ( sortIdx !== -1 ) {\n\t\t\t\t// Yes, modify the sort\n\t\t\t\tnextSortIdx = next( sorting[sortIdx], true );\n\t\n\t\t\t\tif ( nextSortIdx === null && sorting.length === 1 ) {\n\t\t\t\t\tnextSortIdx = 0; // can't remove sorting completely\n\t\t\t\t}\n\t\n\t\t\t\tif ( nextSortIdx === null ) {\n\t\t\t\t\tsorting.splice( sortIdx, 1 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsorting[sortIdx][1] = asSorting[ nextSortIdx ];\n\t\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (shift) {\n\t\t\t\t// No sort on this column yet, being added by shift click\n\t\t\t\t// add it as itself\n\t\t\t\tsorting.push( [ colIdx, asSorting[0], 0 ] );\n\t\t\t\tsorting[sorting.length-1]._idx = 0;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// No sort on this column yet, being added from a colspan\n\t\t\t\t// so add with same direction as first column\n\t\t\t\tsorting.push( [ colIdx, sorting[0][1], 0 ] );\n\t\t\t\tsorting[sorting.length-1]._idx = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( sorting.length && sorting[0][0] == colIdx ) {\n\t\t\t// Single column - already sorting on this column, modify the sort\n\t\t\tnextSortIdx = next( sorting[0] );\n\t\n\t\t\tsorting.length = 1;\n\t\t\tsorting[0][1] = asSorting[ nextSortIdx ];\n\t\t\tsorting[0]._idx = nextSortIdx;\n\t\t}\n\t\telse {\n\t\t\t// Single column - sort only on this column\n\t\t\tsorting.length = 0;\n\t\t\tsorting.push( [ colIdx, asSorting[0] ] );\n\t\t\tsorting[0]._idx = 0;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Set the sorting classes on table's body, Note: it is safe to call this function\n\t * when bSort and bSortClasses are false\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortingClasses( settings )\n\t{\n\t\tvar oldSort = settings.aLastSort;\n\t\tvar sortClass = settings.oClasses.order.position;\n\t\tvar sort = _fnSortFlatten( settings );\n\t\tvar features = settings.oFeatures;\n\t\tvar i, ien, colIdx;\n\t\n\t\tif ( features.bSort && features.bSortClasses ) {\n\t\t\t// Remove old sorting classes\n\t\t\tfor ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\n\t\t\t\tcolIdx = oldSort[i].src;\n\t\n\t\t\t\t// Remove column sorting\n\t\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t\t.removeClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t\t}\n\t\n\t\t\t// Add new column sorting\n\t\t\tfor ( i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\t\tcolIdx = sort[i].src;\n\t\n\t\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t\t.addClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t\t}\n\t\t}\n\t\n\t\tsettings.aLastSort = sort;\n\t}\n\t\n\t\n\t// Get the data to sort a column, be it from cache, fresh (populating the\n\t// cache), or from a sort formatter\n\tfunction _fnSortData( settings, colIdx )\n\t{\n\t\t// Custom sorting function - provided by the sort data type\n\t\tvar column = settings.aoColumns[ colIdx ];\n\t\tvar customSort = DataTable.ext.order[ column.sSortDataType ];\n\t\tvar customData;\n\t\n\t\tif ( customSort ) {\n\t\t\tcustomData = customSort.call( settings.oInstance, settings, colIdx,\n\t\t\t\t_fnColumnIndexToVisible( settings, colIdx )\n\t\t\t);\n\t\t}\n\t\n\t\t// Use / populate cache\n\t\tvar row, cellData;\n\t\tvar formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\n\t\tvar data = settings.aoData;\n\t\n\t\tfor ( var rowIdx=0 ; rowIdx<data.length ; rowIdx++ ) {\n\t\t\t// Sparse array\n\t\t\tif (! data[rowIdx]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\trow = data[rowIdx];\n\t\n\t\t\tif ( ! row._aSortData ) {\n\t\t\t\trow._aSortData = [];\n\t\t\t}\n\t\n\t\t\tif ( ! row._aSortData[colIdx] || customSort ) {\n\t\t\t\tcellData = customSort ?\n\t\t\t\t\tcustomData[rowIdx] : // If there was a custom sort function, use data from there\n\t\t\t\t\t_fnGetCellData( settings, rowIdx, colIdx, 'sort' );\n\t\n\t\t\t\trow._aSortData[ colIdx ] = formatter ?\n\t\t\t\t\tformatter( cellData, settings ) :\n\t\t\t\t\tcellData;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * State information for a table\n\t *\n\t * @param {*} settings\n\t * @returns State object\n\t */\n\tfunction _fnSaveState ( settings )\n\t{\n\t\tif (settings._bLoadingState) {\n\t\t\treturn;\n\t\t}\n\t\n\t\t// Sort state saving uses [[idx, order]] structure.\n\t\tvar sorting = [];\n\t\t_fnSortResolve(settings, sorting, settings.aaSorting );\n\t\n\t\t/* Store the interesting variables */\n\t\tvar columns = settings.aoColumns;\n\t\tvar state = {\n\t\t\ttime:    +new Date(),\n\t\t\tstart:   settings._iDisplayStart,\n\t\t\tlength:  settings._iDisplayLength,\n\t\t\torder:   sorting.map(function (sort) {\n\t\t\t\t// If a column name is available, use it\n\t\t\t\treturn columns[sort[0]] && columns[sort[0]].sName\n\t\t\t\t\t? [ columns[sort[0]].sName, sort[1] ]\n\t\t\t\t\t: sort.slice();\n\t\t\t} ),\n\t\t\tsearch:  $.extend({}, settings.oPreviousSearch),\n\t\t\tcolumns: settings.aoColumns.map( function ( col, i ) {\n\t\t\t\treturn {\n\t\t\t\t\tname: col.sName,\n\t\t\t\t\tvisible: col.bVisible,\n\t\t\t\t\tsearch: $.extend({}, settings.aoPreSearchCols[i])\n\t\t\t\t};\n\t\t\t} )\n\t\t};\n\t\n\t\tsettings.oSavedState = state;\n\t\t_fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\n\t\t\n\t\tif ( settings.oFeatures.bStateSave && !settings.bDestroying )\n\t\t{\n\t\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, state );\n\t\t}\t\n\t}\n\t\n\t\n\t/**\n\t * Attempt to load a saved table state\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} oInit DataTables init object so we can override settings\n\t *  @param {function} callback Callback to execute when the state has been loaded\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLoadState ( settings, init, callback )\n\t{\n\t\tif ( ! settings.oFeatures.bStateSave ) {\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar loaded = function(state) {\n\t\t\t_fnImplementState(settings, state, callback);\n\t\t}\n\t\n\t\tvar state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );\n\t\n\t\tif ( state !== undefined ) {\n\t\t\t_fnImplementState( settings, state, callback );\n\t\t}\n\t\t// otherwise, wait for the loaded callback to be executed\n\t\n\t\treturn true;\n\t}\n\t\n\tfunction _fnImplementState ( settings, s, callback) {\n\t\tvar i, ien;\n\t\tvar columns = settings.aoColumns;\n\t\tvar currentNames = _pluck(settings.aoColumns, 'sName');\n\t\n\t\tsettings._bLoadingState = true;\n\t\n\t\t// When StateRestore was introduced the state could now be implemented at any time\n\t\t// Not just initialisation. To do this an api instance is required in some places\n\t\tvar api = settings._bInitComplete ? new DataTable.Api(settings) : null;\n\t\n\t\tif ( ! s || ! s.time ) {\n\t\t\tsettings._bLoadingState = false;\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t\n\t\t// Reject old data\n\t\tvar duration = settings.iStateDuration;\n\t\tif ( duration > 0 && s.time < +new Date() - (duration*1000) ) {\n\t\t\tsettings._bLoadingState = false;\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t\n\t\t// Allow custom and plug-in manipulation functions to alter the saved data set and\n\t\t// cancelling of loading by returning false\n\t\tvar abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );\n\t\tif ( abStateLoad.indexOf(false) !== -1 ) {\n\t\t\tsettings._bLoadingState = false;\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t\n\t\t// Store the saved state so it might be accessed at any time\n\t\tsettings.oLoadedState = $.extend( true, {}, s );\n\t\n\t\t// This is needed for ColReorder, which has to happen first to allow all\n\t\t// the stored indexes to be usable. It is not publicly documented.\n\t\t_fnCallbackFire( settings, null, 'stateLoadInit', [settings, s], true );\n\t\n\t\t// Page Length\n\t\tif ( s.length !== undefined ) {\n\t\t\t// If already initialised just set the value directly so that the select element is also updated\n\t\t\tif (api) {\n\t\t\t\tapi.page.len(s.length)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsettings._iDisplayLength   = s.length;\n\t\t\t}\n\t\t}\n\t\n\t\t// Restore key features\n\t\tif ( s.start !== undefined ) {\n\t\t\tif(api === null) {\n\t\t\t\tsettings._iDisplayStart    = s.start;\n\t\t\t\tsettings.iInitDisplayStart = s.start;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnPageChange(settings, s.start/settings._iDisplayLength);\n\t\t\t}\n\t\t}\n\t\n\t\t// Order\n\t\tif ( s.order !== undefined ) {\n\t\t\tsettings.aaSorting = [];\n\t\t\t$.each( s.order, function ( i, col ) {\n\t\t\t\tvar set = [ col[0], col[1] ];\n\t\n\t\t\t\t// A column name was stored and should be used for restore\n\t\t\t\tif (typeof col[0] === 'string') {\n\t\t\t\t\tvar idx = currentNames.indexOf(col[0]);\n\t\n\t\t\t\t\t// Find the name from the current list of column names, or fallback to index 0\n\t\t\t\t\tset[0] = idx >= 0\n\t\t\t\t\t\t? idx\n\t\t\t\t\t\t: 0;\n\t\t\t\t}\n\t\t\t\telse if (set[0] >= columns.length) {\n\t\t\t\t\t// If a column name, but it is out of bounds, set to 0\n\t\t\t\t\tset[0] = 0;\n\t\t\t\t}\n\t\n\t\t\t\tsettings.aaSorting.push(set);\n\t\t\t} );\n\t\t}\n\t\n\t\t// Search\n\t\tif ( s.search !== undefined ) {\n\t\t\t$.extend( settings.oPreviousSearch, s.search );\n\t\t}\n\t\n\t\t// Columns\n\t\tif ( s.columns ) {\n\t\t\tvar set = s.columns;\n\t\t\tvar incoming = _pluck(s.columns, 'name');\n\t\n\t\t\t// Check if it is a 2.2 style state object with a `name` property for the columns, and if\n\t\t\t// the name was defined. If so, then create a new array that will map the state object\n\t\t\t// given, to the current columns (don't bother if they are already matching tho).\n\t\t\tif (incoming.join('').length && incoming.join('') !== currentNames.join('')) {\n\t\t\t\tset = [];\n\t\n\t\t\t\t// For each column, try to find the name in the incoming array\n\t\t\t\tfor (i=0 ; i<currentNames.length ; i++) {\n\t\t\t\t\tif (currentNames[i] != '') {\n\t\t\t\t\t\tvar idx = incoming.indexOf(currentNames[i]);\n\t\n\t\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\t\tset.push(s.columns[idx]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// No matching column name in the state's columns, so this might be a new\n\t\t\t\t\t\t\t// column and thus can't have a state already.\n\t\t\t\t\t\t\tset.push({});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// If no name, but other columns did have a name, then there is no knowing\n\t\t\t\t\t\t// where this one came from originally so it can't be restored.\n\t\t\t\t\t\tset.push({});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// If the number of columns to restore is different from current, then all bets are off.\n\t\t\tif (set.length === columns.length) {\n\t\t\t\tfor ( i=0, ien=set.length ; i<ien ; i++ ) {\n\t\t\t\t\tvar col = set[i];\n\t\n\t\t\t\t\t// Visibility\n\t\t\t\t\tif ( col.visible !== undefined ) {\n\t\t\t\t\t\t// If the api is defined, the table has been initialised so we need to use it rather than internal settings\n\t\t\t\t\t\tif (api) {\n\t\t\t\t\t\t\t// Don't redraw the columns on every iteration of this loop, we will do this at the end instead\n\t\t\t\t\t\t\tapi.column(i).visible(col.visible, false);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcolumns[i].bVisible = col.visible;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Search\n\t\t\t\t\tif ( col.search !== undefined ) {\n\t\t\t\t\t\t$.extend( settings.aoPreSearchCols[i], col.search );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// If the api is defined then we need to adjust the columns once the visibility has been changed\n\t\t\t\tif (api) {\n\t\t\t\t\tapi.columns.adjust();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tsettings._bLoadingState = false;\n\t\t_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );\n\t\tcallback();\n\t}\n\t\n\t/**\n\t * Log an error message\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} level log error messages, or display them to the user\n\t *  @param {string} msg error message\n\t *  @param {int} tn Technical note id to get more information about the error.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLog( settings, level, msg, tn )\n\t{\n\t\tmsg = 'DataTables warning: '+\n\t\t\t(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\n\t\n\t\tif ( tn ) {\n\t\t\tmsg += '. For more information about this error, please see '+\n\t\t\t'https://datatables.net/tn/'+tn;\n\t\t}\n\t\n\t\tif ( ! level  ) {\n\t\t\t// Backwards compatibility pre 1.10\n\t\t\tvar ext = DataTable.ext;\n\t\t\tvar type = ext.sErrMode || ext.errMode;\n\t\n\t\t\tif ( settings ) {\n\t\t\t\t_fnCallbackFire( settings, null, 'dt-error', [ settings, tn, msg ], true );\n\t\t\t}\n\t\n\t\t\tif ( type == 'alert' ) {\n\t\t\t\talert( msg );\n\t\t\t}\n\t\t\telse if ( type == 'throw' ) {\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\t\t\telse if ( typeof type == 'function' ) {\n\t\t\t\ttype( settings, tn, msg );\n\t\t\t}\n\t\t}\n\t\telse if ( window.console && console.log ) {\n\t\t\tconsole.log( msg );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * See if a property is defined on one object, if so assign it to the other object\n\t *  @param {object} ret target object\n\t *  @param {object} src source object\n\t *  @param {string} name property\n\t *  @param {string} [mappedName] name to map too - optional, name used if not given\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnMap( ret, src, name, mappedName )\n\t{\n\t\tif ( Array.isArray( name ) ) {\n\t\t\t$.each( name, function (i, val) {\n\t\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t\t_fnMap( ret, src, val[0], val[1] );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_fnMap( ret, src, val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( mappedName === undefined ) {\n\t\t\tmappedName = name;\n\t\t}\n\t\n\t\tif ( src[name] !== undefined ) {\n\t\t\tret[mappedName] = src[name];\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n\t * shallow copy arrays. The reason we need to do this, is that we don't want to\n\t * deep copy array init values (such as aaSorting) since the dev wouldn't be\n\t * able to override them, but we do want to deep copy arrays.\n\t *  @param {object} out Object to extend\n\t *  @param {object} extender Object from which the properties will be applied to\n\t *      out\n\t *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n\t *      independent copy with the exception of the `data` or `aaData` parameters\n\t *      if they are present. This is so you can pass in a collection to\n\t *      DataTables and have that used as your data source without breaking the\n\t *      references\n\t *  @returns {object} out Reference, just for convenience - out === the return.\n\t *  @memberof DataTable#oApi\n\t *  @todo This doesn't take account of arrays inside the deep copied objects.\n\t */\n\tfunction _fnExtend( out, extender, breakRefs )\n\t{\n\t\tvar val;\n\t\n\t\tfor ( var prop in extender ) {\n\t\t\tif ( Object.prototype.hasOwnProperty.call(extender, prop) ) {\n\t\t\t\tval = extender[prop];\n\t\n\t\t\t\tif ( $.isPlainObject( val ) ) {\n\t\t\t\t\tif ( ! $.isPlainObject( out[prop] ) ) {\n\t\t\t\t\t\tout[prop] = {};\n\t\t\t\t\t}\n\t\t\t\t\t$.extend( true, out[prop], val );\n\t\t\t\t}\n\t\t\t\telse if ( breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val) ) {\n\t\t\t\t\tout[prop] = val.slice();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout[prop] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t}\n\t\n\t\n\t/**\n\t * Bind an event handers to allow a click or return key to activate the callback.\n\t * This is good for accessibility since a return on the keyboard will have the\n\t * same effect as a click, if the element has focus.\n\t *  @param {element} n Element to bind the action to\n\t *  @param {object|string} selector Selector (for delegated events) or data object\n\t *   to pass to the triggered function\n\t *  @param {function} fn Callback function for when the event is triggered\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBindAction( n, selector, fn )\n\t{\n\t\t$(n)\n\t\t\t.on( 'click.DT', selector, function (e) {\n\t\t\t\tfn(e);\n\t\t\t} )\n\t\t\t.on( 'keypress.DT', selector, function (e){\n\t\t\t\tif ( e.which === 13 ) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tfn(e);\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.on( 'selectstart.DT', selector, function () {\n\t\t\t\t// Don't want a double click resulting in text selection\n\t\t\t\treturn false;\n\t\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Register a callback function. Easily allows a callback function to be added to\n\t * an array store of callback functions that can then all be called together.\n\t *  @param {object} settings dataTables settings object\n\t *  @param {string} store Name of the array storage for the callbacks in oSettings\n\t *  @param {function} fn Function to be called back\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackReg( settings, store, fn )\n\t{\n\t\tif ( fn ) {\n\t\t\tsettings[store].push(fn);\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Fire callback functions and trigger events. Note that the loop over the\n\t * callback array store is done backwards! Further note that you do not want to\n\t * fire off triggers in time sensitive applications (for example cell creation)\n\t * as its slow.\n\t *  @param {object} settings dataTables settings object\n\t *  @param {string} callbackArr Name of the array storage for the callbacks in\n\t *      oSettings\n\t *  @param {string} eventName Name of the jQuery custom event to trigger. If\n\t *      null no trigger is fired\n\t *  @param {array} args Array of arguments to pass to the callback function /\n\t *      trigger\n\t *  @param {boolean} [bubbles] True if the event should bubble\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackFire( settings, callbackArr, eventName, args, bubbles )\n\t{\n\t\tvar ret = [];\n\t\n\t\tif ( callbackArr ) {\n\t\t\tret = settings[callbackArr].slice().reverse().map( function (val) {\n\t\t\t\treturn val.apply( settings.oInstance, args );\n\t\t\t} );\n\t\t}\n\t\n\t\tif ( eventName !== null) {\n\t\t\tvar e = $.Event( eventName+'.dt' );\n\t\t\tvar table = $(settings.nTable);\n\t\t\t\n\t\t\t// Expose the DataTables API on the event object for easy access\n\t\t\te.dt = settings.api;\n\t\n\t\t\ttable[bubbles ?  'trigger' : 'triggerHandler']( e, args );\n\t\n\t\t\t// If not yet attached to the document, trigger the event\n\t\t\t// on the body directly to sort of simulate the bubble\n\t\t\tif (bubbles && table.parents('body').length === 0) {\n\t\t\t\t$('body').trigger( e, args );\n\t\t\t}\n\t\n\t\t\tret.push( e.result );\n\t\t}\n\t\n\t\treturn ret;\n\t}\n\t\n\t\n\tfunction _fnLengthOverflow ( settings )\n\t{\n\t\tvar\n\t\t\tstart = settings._iDisplayStart,\n\t\t\tend = settings.fnDisplayEnd(),\n\t\t\tlen = settings._iDisplayLength;\n\t\n\t\t/* If we have space to show extra rows (backing up from the end point - then do so */\n\t\tif ( start >= end )\n\t\t{\n\t\t\tstart = end - len;\n\t\t}\n\t\n\t\t// Keep the start record on the current page\n\t\tstart -= (start % len);\n\t\n\t\tif ( len === -1 || start < 0 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\n\t\tsettings._iDisplayStart = start;\n\t}\n\t\n\t\n\tfunction _fnRenderer( settings, type )\n\t{\n\t\tvar renderer = settings.renderer;\n\t\tvar host = DataTable.ext.renderer[type];\n\t\n\t\tif ( $.isPlainObject( renderer ) && renderer[type] ) {\n\t\t\t// Specific renderer for this type. If available use it, otherwise use\n\t\t\t// the default.\n\t\t\treturn host[renderer[type]] || host._;\n\t\t}\n\t\telse if ( typeof renderer === 'string' ) {\n\t\t\t// Common renderer - if there is one available for this type use it,\n\t\t\t// otherwise use the default\n\t\t\treturn host[renderer] || host._;\n\t\t}\n\t\n\t\t// Use the default\n\t\treturn host._;\n\t}\n\t\n\t\n\t/**\n\t * Detect the data source being used for the table. Used to simplify the code\n\t * a little (ajax) and to make it compress a little smaller.\n\t *\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {string} Data source\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDataSource ( settings )\n\t{\n\t\tif ( settings.oFeatures.bServerSide ) {\n\t\t\treturn 'ssp';\n\t\t}\n\t\telse if ( settings.ajax ) {\n\t\t\treturn 'ajax';\n\t\t}\n\t\treturn 'dom';\n\t}\n\t\n\t/**\n\t * Common replacement for language strings\n\t *\n\t * @param {*} settings DT settings object\n\t * @param {*} str String with values to replace\n\t * @param {*} entries Plural number for _ENTRIES_ - can be undefined\n\t * @returns String\n\t */\n\tfunction _fnMacros ( settings, str, entries )\n\t{\n\t\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is\n\t\t// used only internally\n\t\tvar\n\t\t\tformatter  = settings.fnFormatNumber,\n\t\t\tstart      = settings._iDisplayStart+1,\n\t\t\tlen        = settings._iDisplayLength,\n\t\t\tvis        = settings.fnRecordsDisplay(),\n\t\t\tmax        = settings.fnRecordsTotal(),\n\t\t\tall        = len === -1;\n\t\n\t\treturn str.\n\t\t\treplace(/_START_/g, formatter.call( settings, start ) ).\n\t\t\treplace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\n\t\t\treplace(/_MAX_/g,   formatter.call( settings, max ) ).\n\t\t\treplace(/_TOTAL_/g, formatter.call( settings, vis ) ).\n\t\t\treplace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\n\t\t\treplace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) ).\n\t\t\treplace(/_ENTRIES_/g, settings.api.i18n('entries', '', entries) ).\n\t\t\treplace(/_ENTRIES-MAX_/g, settings.api.i18n('entries', '', max) ).\n\t\t\treplace(/_ENTRIES-TOTAL_/g, settings.api.i18n('entries', '', vis) );\n\t}\n\t\n\t/**\n\t * Add elements to an array as quickly as possible, but stack stafe.\n\t *\n\t * @param {*} arr Array to add the data to\n\t * @param {*} data Data array that is to be added\n\t * @returns \n\t */\n\tfunction _fnArrayApply(arr, data) {\n\t\tif (! data) {\n\t\t\treturn;\n\t\t}\n\t\n\t\t// Chrome can throw a max stack error if apply is called with\n\t\t// too large an array, but apply is faster.\n\t\tif (data.length < 10000) {\n\t\t\tarr.push.apply(arr, data);\n\t\t}\n\t\telse {\n\t\t\tfor (i=0 ; i<data.length ; i++) {\n\t\t\t\tarr.push(data[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Computed structure of the DataTables API, defined by the options passed to\n\t * `DataTable.Api.register()` when building the API.\n\t *\n\t * The structure is built in order to speed creation and extension of the Api\n\t * objects since the extensions are effectively pre-parsed.\n\t *\n\t * The array is an array of objects with the following structure, where this\n\t * base array represents the Api prototype base:\n\t *\n\t *     [\n\t *       {\n\t *         name:      'data'                -- string   - Property name\n\t *         val:       function () {},       -- function - Api method (or undefined if just an object\n\t *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t *       },\n\t *       {\n\t *         name:     'row'\n\t *         val:       {},\n\t *         methodExt: [ ... ],\n\t *         propExt:   [\n\t *           {\n\t *             name:      'data'\n\t *             val:       function () {},\n\t *             methodExt: [ ... ],\n\t *             propExt:   [ ... ]\n\t *           },\n\t *           ...\n\t *         ]\n\t *       }\n\t *     ]\n\t *\n\t * @type {Array}\n\t * @ignore\n\t */\n\tvar __apiStruct = [];\n\t\n\t\n\t/**\n\t * `Array.prototype` reference.\n\t *\n\t * @type object\n\t * @ignore\n\t */\n\tvar __arrayProto = Array.prototype;\n\t\n\t\n\t/**\n\t * Abstraction for `context` parameter of the `Api` constructor to allow it to\n\t * take several different forms for ease of use.\n\t *\n\t * Each of the input parameter types will be converted to a DataTables settings\n\t * object where possible.\n\t *\n\t * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n\t *   of:\n\t *\n\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t *     with be found and used.\n\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t *   * `object` - DataTables settings object\n\t *   * `DataTables.Api` - API instance\n\t * @return {array|null} Matching DataTables settings objects. `null` or\n\t *   `undefined` is returned if no matching DataTable is found.\n\t * @ignore\n\t */\n\tvar _toSettings = function ( mixed )\n\t{\n\t\tvar idx, jq;\n\t\tvar settings = DataTable.settings;\n\t\tvar tables = _pluck(settings, 'nTable');\n\t\n\t\tif ( ! mixed ) {\n\t\t\treturn [];\n\t\t}\n\t\telse if ( mixed.nTable && mixed.oFeatures ) {\n\t\t\t// DataTables settings object\n\t\t\treturn [ mixed ];\n\t\t}\n\t\telse if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\n\t\t\t// Table node\n\t\t\tidx = tables.indexOf(mixed);\n\t\t\treturn idx !== -1 ? [ settings[idx] ] : null;\n\t\t}\n\t\telse if ( mixed && typeof mixed.settings === 'function' ) {\n\t\t\treturn mixed.settings().toArray();\n\t\t}\n\t\telse if ( typeof mixed === 'string' ) {\n\t\t\t// jQuery selector\n\t\t\tjq = $(mixed).get();\n\t\t}\n\t\telse if ( mixed instanceof $ ) {\n\t\t\t// jQuery object (also DataTables instance)\n\t\t\tjq = mixed.get();\n\t\t}\n\t\n\t\tif ( jq ) {\n\t\t\treturn settings.filter(function (v, idx) {\n\t\t\t\treturn jq.includes(tables[idx]);\n\t\t\t});\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * DataTables API class - used to control and interface with  one or more\n\t * DataTables enhanced tables.\n\t *\n\t * The API class is heavily based on jQuery, presenting a chainable interface\n\t * that you can use to interact with tables. Each instance of the API class has\n\t * a \"context\" - i.e. the tables that it will operate on. This could be a single\n\t * table, all tables on a page or a sub-set thereof.\n\t *\n\t * Additionally the API is designed to allow you to easily work with the data in\n\t * the tables, retrieving and manipulating it as required. This is done by\n\t * presenting the API class as an array like interface. The contents of the\n\t * array depend upon the actions requested by each method (for example\n\t * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n\t * return an array of objects or arrays depending upon your table's\n\t * configuration). The API object has a number of array like methods (`push`,\n\t * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n\t * `unique` etc) to assist your working with the data held in a table.\n\t *\n\t * Most methods (those which return an Api instance) are chainable, which means\n\t * the return from a method call also has all of the methods available that the\n\t * top level object had. For example, these two calls are equivalent:\n\t *\n\t *     // Not chained\n\t *     api.row.add( {...} );\n\t *     api.draw();\n\t *\n\t *     // Chained\n\t *     api.row.add( {...} ).draw();\n\t *\n\t * @class DataTable.Api\n\t * @param {array|object|string|jQuery} context DataTable identifier. This is\n\t *   used to define which DataTables enhanced tables this API will operate on.\n\t *   Can be one of:\n\t *\n\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t *     with be found and used.\n\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t *   * `object` - DataTables settings object\n\t * @param {array} [data] Data to initialise the Api instance with.\n\t *\n\t * @example\n\t *   // Direct initialisation during DataTables construction\n\t *   var api = $('#example').DataTable();\n\t *\n\t * @example\n\t *   // Initialisation using a DataTables jQuery object\n\t *   var api = $('#example').dataTable().api();\n\t *\n\t * @example\n\t *   // Initialisation as a constructor\n\t *   var api = new DataTable.Api( 'table.dataTable' );\n\t */\n\t_Api = function ( context, data )\n\t{\n\t\tif ( ! (this instanceof _Api) ) {\n\t\t\treturn new _Api( context, data );\n\t\t}\n\t\n\t\tvar i;\n\t\tvar settings = [];\n\t\tvar ctxSettings = function ( o ) {\n\t\t\tvar a = _toSettings( o );\n\t\t\tif ( a ) {\n\t\t\t\tsettings.push.apply( settings, a );\n\t\t\t}\n\t\t};\n\t\n\t\tif ( Array.isArray( context ) ) {\n\t\t\tfor ( i=0 ; i<context.length ; i++ ) {\n\t\t\t\tctxSettings( context[i] );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tctxSettings( context );\n\t\t}\n\t\n\t\t// Remove duplicates\n\t\tthis.context = settings.length > 1\n\t\t\t? _unique( settings )\n\t\t\t: settings;\n\t\n\t\t// Initial data\n\t\t_fnArrayApply(this, data);\n\t\n\t\t// selector\n\t\tthis.selector = {\n\t\t\trows: null,\n\t\t\tcols: null,\n\t\t\topts: null\n\t\t};\n\t\n\t\t_Api.extend( this, this, __apiStruct );\n\t};\n\t\n\tDataTable.Api = _Api;\n\t\n\t// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n\t// isPlainObject.\n\t$.extend( _Api.prototype, {\n\t\tany: function ()\n\t\t{\n\t\t\treturn this.count() !== 0;\n\t\t},\n\t\n\t\tcontext: [], // array of table settings objects\n\t\n\t\tcount: function ()\n\t\t{\n\t\t\treturn this.flatten().length;\n\t\t},\n\t\n\t\teach: function ( fn )\n\t\t{\n\t\t\tfor ( var i=0, ien=this.length ; i<ien; i++ ) {\n\t\t\t\tfn.call( this, this[i], i, this );\n\t\t\t}\n\t\n\t\t\treturn this;\n\t\t},\n\t\n\t\teq: function ( idx )\n\t\t{\n\t\t\tvar ctx = this.context;\n\t\n\t\t\treturn ctx.length > idx ?\n\t\t\t\tnew _Api( ctx[idx], this[idx] ) :\n\t\t\t\tnull;\n\t\t},\n\t\n\t\tfilter: function ( fn )\n\t\t{\n\t\t\tvar a = __arrayProto.filter.call( this, fn, this );\n\t\n\t\t\treturn new _Api( this.context, a );\n\t\t},\n\t\n\t\tflatten: function ()\n\t\t{\n\t\t\tvar a = [];\n\t\n\t\t\treturn new _Api( this.context, a.concat.apply( a, this.toArray() ) );\n\t\t},\n\t\n\t\tget: function ( idx )\n\t\t{\n\t\t\treturn this[ idx ];\n\t\t},\n\t\n\t\tjoin:    __arrayProto.join,\n\t\n\t\tincludes: function ( find ) {\n\t\t\treturn this.indexOf( find ) === -1 ? false : true;\n\t\t},\n\t\n\t\tindexOf: __arrayProto.indexOf,\n\t\n\t\titerator: function ( flatten, type, fn, alwaysNew ) {\n\t\t\tvar\n\t\t\t\ta = [], ret,\n\t\t\t\ti, ien, j, jen,\n\t\t\t\tcontext = this.context,\n\t\t\t\trows, items, item,\n\t\t\t\tselector = this.selector;\n\t\n\t\t\t// Argument shifting\n\t\t\tif ( typeof flatten === 'string' ) {\n\t\t\t\talwaysNew = fn;\n\t\t\t\tfn = type;\n\t\t\t\ttype = flatten;\n\t\t\t\tflatten = false;\n\t\t\t}\n\t\n\t\t\tfor ( i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\t\tvar apiInst = new _Api( context[i] );\n\t\n\t\t\t\tif ( type === 'table' ) {\n\t\t\t\t\tret = fn.call( apiInst, context[i], i );\n\t\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( type === 'columns' || type === 'rows' ) {\n\t\t\t\t\t// this has same length as context - one entry for each table\n\t\t\t\t\tret = fn.call( apiInst, context[i], this[i], i );\n\t\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( type === 'every' || type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\n\t\t\t\t\t// columns and rows share the same structure.\n\t\t\t\t\t// 'this' is an array of column indexes for each context\n\t\t\t\t\titems = this[i];\n\t\n\t\t\t\t\tif ( type === 'column-rows' ) {\n\t\t\t\t\t\trows = _selector_row_indexes( context[i], selector.opts );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfor ( j=0, jen=items.length ; j<jen ; j++ ) {\n\t\t\t\t\t\titem = items[j];\n\t\n\t\t\t\t\t\tif ( type === 'cell' ) {\n\t\t\t\t\t\t\tret = fn.call( apiInst, context[i], item.row, item.column, i, j );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tret = fn.call( apiInst, context[i], item, i, j, rows );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( a.length || alwaysNew ) {\n\t\t\t\tvar api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\n\t\t\t\tvar apiSelector = api.selector;\n\t\t\t\tapiSelector.rows = selector.rows;\n\t\t\t\tapiSelector.cols = selector.cols;\n\t\t\t\tapiSelector.opts = selector.opts;\n\t\t\t\treturn api;\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\n\t\tlastIndexOf: __arrayProto.lastIndexOf,\n\t\n\t\tlength:  0,\n\t\n\t\tmap: function ( fn )\n\t\t{\n\t\t\tvar a = __arrayProto.map.call( this, fn, this );\n\t\n\t\t\treturn new _Api( this.context, a );\n\t\t},\n\t\n\t\tpluck: function ( prop )\n\t\t{\n\t\t\tvar fn = DataTable.util.get(prop);\n\t\n\t\t\treturn this.map( function ( el ) {\n\t\t\t\treturn fn(el);\n\t\t\t} );\n\t\t},\n\t\n\t\tpop:     __arrayProto.pop,\n\t\n\t\tpush:    __arrayProto.push,\n\t\n\t\treduce: __arrayProto.reduce,\n\t\n\t\treduceRight: __arrayProto.reduceRight,\n\t\n\t\treverse: __arrayProto.reverse,\n\t\n\t\t// Object with rows, columns and opts\n\t\tselector: null,\n\t\n\t\tshift:   __arrayProto.shift,\n\t\n\t\tslice: function () {\n\t\t\treturn new _Api( this.context, this );\n\t\t},\n\t\n\t\tsort:    __arrayProto.sort,\n\t\n\t\tsplice:  __arrayProto.splice,\n\t\n\t\ttoArray: function ()\n\t\t{\n\t\t\treturn __arrayProto.slice.call( this );\n\t\t},\n\t\n\t\tto$: function ()\n\t\t{\n\t\t\treturn $( this );\n\t\t},\n\t\n\t\ttoJQuery: function ()\n\t\t{\n\t\t\treturn $( this );\n\t\t},\n\t\n\t\tunique: function ()\n\t\t{\n\t\t\treturn new _Api( this.context, _unique(this.toArray()) );\n\t\t},\n\t\n\t\tunshift: __arrayProto.unshift\n\t} );\n\t\n\t\n\tfunction _api_scope( scope, fn, struc ) {\n\t\treturn function () {\n\t\t\tvar ret = fn.apply( scope || this, arguments );\n\t\n\t\t\t// Method extension\n\t\t\t_Api.extend( ret, ret, struc.methodExt );\n\t\t\treturn ret;\n\t\t};\n\t}\n\t\n\tfunction _api_find( src, name ) {\n\t\tfor ( var i=0, ien=src.length ; i<ien ; i++ ) {\n\t\t\tif ( src[i].name === name ) {\n\t\t\t\treturn src[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\t\n\twindow.__apiStruct = __apiStruct;\n\t\n\t_Api.extend = function ( scope, obj, ext )\n\t{\n\t\t// Only extend API instances and static properties of the API\n\t\tif ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\ti, ien,\n\t\t\tstruct;\n\t\n\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\tstruct = ext[i];\n\t\n\t\t\tif (struct.name === '__proto__') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\t// Value\n\t\t\tobj[ struct.name ] = struct.type === 'function' ?\n\t\t\t\t_api_scope( scope, struct.val, struct ) :\n\t\t\t\tstruct.type === 'object' ?\n\t\t\t\t\t{} :\n\t\t\t\t\tstruct.val;\n\t\n\t\t\tobj[ struct.name ].__dt_wrapper = true;\n\t\n\t\t\t// Property extension\n\t\t\t_Api.extend( scope, obj[ struct.name ], struct.propExt );\n\t\t}\n\t};\n\t\n\t//     [\n\t//       {\n\t//         name:      'data'                -- string   - Property name\n\t//         val:       function () {},       -- function - Api method (or undefined if just an object\n\t//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t//       },\n\t//       {\n\t//         name:     'row'\n\t//         val:       {},\n\t//         methodExt: [ ... ],\n\t//         propExt:   [\n\t//           {\n\t//             name:      'data'\n\t//             val:       function () {},\n\t//             methodExt: [ ... ],\n\t//             propExt:   [ ... ]\n\t//           },\n\t//           ...\n\t//         ]\n\t//       }\n\t//     ]\n\t\n\t\n\t_Api.register = _api_register = function ( name, val )\n\t{\n\t\tif ( Array.isArray( name ) ) {\n\t\t\tfor ( var j=0, jen=name.length ; j<jen ; j++ ) {\n\t\t\t\t_Api.register( name[j], val );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\ti, ien,\n\t\t\their = name.split('.'),\n\t\t\tstruct = __apiStruct,\n\t\t\tkey, method;\n\t\n\t\tfor ( i=0, ien=heir.length ; i<ien ; i++ ) {\n\t\t\tmethod = heir[i].indexOf('()') !== -1;\n\t\t\tkey = method ?\n\t\t\t\their[i].replace('()', '') :\n\t\t\t\their[i];\n\t\n\t\t\tvar src = _api_find( struct, key );\n\t\t\tif ( ! src ) {\n\t\t\t\tsrc = {\n\t\t\t\t\tname:      key,\n\t\t\t\t\tval:       {},\n\t\t\t\t\tmethodExt: [],\n\t\t\t\t\tpropExt:   [],\n\t\t\t\t\ttype:      'object'\n\t\t\t\t};\n\t\t\t\tstruct.push( src );\n\t\t\t}\n\t\n\t\t\tif ( i === ien-1 ) {\n\t\t\t\tsrc.val = val;\n\t\t\t\tsrc.type = typeof val === 'function' ?\n\t\t\t\t\t'function' :\n\t\t\t\t\t$.isPlainObject( val ) ?\n\t\t\t\t\t\t'object' :\n\t\t\t\t\t\t'other';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstruct = method ?\n\t\t\t\t\tsrc.methodExt :\n\t\t\t\t\tsrc.propExt;\n\t\t\t}\n\t\t}\n\t};\n\t\n\t_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\n\t\t_Api.register( pluralName, val );\n\t\n\t\t_Api.register( singularName, function () {\n\t\t\tvar ret = val.apply( this, arguments );\n\t\n\t\t\tif ( ret === this ) {\n\t\t\t\t// Returned item is the API instance that was passed in, return it\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\telse if ( ret instanceof _Api ) {\n\t\t\t\t// New API instance returned, want the value from the first item\n\t\t\t\t// in the returned array for the singular result.\n\t\t\t\treturn ret.length ?\n\t\t\t\t\tArray.isArray( ret[0] ) ?\n\t\t\t\t\t\tnew _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\n\t\t\t\t\t\tret[0] :\n\t\t\t\t\tundefined;\n\t\t\t}\n\t\n\t\t\t// Non-API return - just fire it back\n\t\t\treturn ret;\n\t\t} );\n\t};\n\t\n\t\n\t/**\n\t * Selector for HTML tables. Apply the given selector to the give array of\n\t * DataTables settings objects.\n\t *\n\t * @param {string|integer} [selector] jQuery selector string or integer\n\t * @param  {array} Array of DataTables settings objects to be filtered\n\t * @return {array}\n\t * @ignore\n\t */\n\tvar __table_selector = function ( selector, a )\n\t{\n\t\tif ( Array.isArray(selector) ) {\n\t\t\tvar result = [];\n\t\n\t\t\tselector.forEach(function (sel) {\n\t\t\t\tvar inner = __table_selector(sel, a);\n\t\n\t\t\t\t_fnArrayApply(result, inner);\n\t\t\t});\n\t\n\t\t\treturn result.filter( function (item) {\n\t\t\t\treturn item;\n\t\t\t});\n\t\t}\n\t\n\t\t// Integer is used to pick out a table by index\n\t\tif ( typeof selector === 'number' ) {\n\t\t\treturn [ a[ selector ] ];\n\t\t}\n\t\n\t\t// Perform a jQuery selector on the table nodes\n\t\tvar nodes = a.map( function (el) {\n\t\t\treturn el.nTable;\n\t\t} );\n\t\n\t\treturn $(nodes)\n\t\t\t.filter( selector )\n\t\t\t.map( function () {\n\t\t\t\t// Need to translate back from the table node to the settings\n\t\t\t\tvar idx = nodes.indexOf(this);\n\t\t\t\treturn a[ idx ];\n\t\t\t} )\n\t\t\t.toArray();\n\t};\n\t\n\t\n\t\n\t/**\n\t * Context selector for the API's context (i.e. the tables the API instance\n\t * refers to.\n\t *\n\t * @name    DataTable.Api#tables\n\t * @param {string|integer} [selector] Selector to pick which tables the iterator\n\t *   should operate on. If not given, all tables in the current context are\n\t *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n\t *   select multiple tables or as an integer to select a single table.\n\t * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n\t */\n\t_api_register( 'tables()', function ( selector ) {\n\t\t// A new instance is created if there was a selector specified\n\t\treturn selector !== undefined && selector !== null ?\n\t\t\tnew _Api( __table_selector( selector, this.context ) ) :\n\t\t\tthis;\n\t} );\n\t\n\t\n\t_api_register( 'table()', function ( selector ) {\n\t\tvar tables = this.tables( selector );\n\t\tvar ctx = tables.context;\n\t\n\t\t// Truncate to the first matched table\n\t\treturn ctx.length ?\n\t\t\tnew _Api( ctx[0] ) :\n\t\t\ttables;\n\t} );\n\t\n\t// Common methods, combined to reduce size\n\t[\n\t\t['nodes', 'node', 'nTable'],\n\t\t['body', 'body', 'nTBody'],\n\t\t['header', 'header', 'nTHead'],\n\t\t['footer', 'footer', 'nTFoot'],\n\t].forEach(function (item) {\n\t\t_api_registerPlural(\n\t\t\t'tables().' + item[0] + '()',\n\t\t\t'table().' + item[1] + '()' ,\n\t\t\tfunction () {\n\t\t\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\t\t\treturn ctx[item[2]];\n\t\t\t\t}, 1 );\n\t\t\t}\n\t\t);\n\t});\n\t\n\t// Structure methods\n\t[\n\t\t['header', 'aoHeader'],\n\t\t['footer', 'aoFooter'],\n\t].forEach(function (item) {\n\t\t_api_register( 'table().' + item[0] + '.structure()' , function (selector) {\n\t\t\tvar indexes = this.columns(selector).indexes().flatten();\n\t\t\tvar ctx = this.context[0];\n\t\t\t\n\t\t\treturn _fnHeaderLayout(ctx, ctx[item[1]], indexes);\n\t\t} );\n\t})\n\t\n\t\n\t_api_registerPlural( 'tables().containers()', 'table().container()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTableWrapper;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'tables().every()', function ( fn ) {\n\t\tvar that = this;\n\t\n\t\treturn this.iterator('table', function (s, i) {\n\t\t\tfn.call(that.table(i), i);\n\t\t});\n\t});\n\t\n\t_api_register( 'caption()', function ( value, side ) {\n\t\tvar context = this.context;\n\t\n\t\t// Getter - return existing node's content\n\t\tif ( value === undefined ) {\n\t\t\tvar caption = context[0].captionNode;\n\t\n\t\t\treturn caption && context.length ?\n\t\t\t\tcaption.innerHTML : \n\t\t\t\tnull;\n\t\t}\n\t\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\tvar table = $(ctx.nTable);\n\t\t\tvar caption = $(ctx.captionNode);\n\t\t\tvar container = $(ctx.nTableWrapper);\n\t\n\t\t\t// Create the node if it doesn't exist yet\n\t\t\tif ( ! caption.length ) {\n\t\t\t\tcaption = $('<caption/>').html( value );\n\t\t\t\tctx.captionNode = caption[0];\n\t\n\t\t\t\t// If side isn't set, we need to insert into the document to let the\n\t\t\t\t// CSS decide so we can read it back, otherwise there is no way to\n\t\t\t\t// know if the CSS would put it top or bottom for scrolling\n\t\t\t\tif (! side) {\n\t\t\t\t\ttable.prepend(caption);\n\t\n\t\t\t\t\tside = caption.css('caption-side');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tcaption.html( value );\n\t\n\t\t\tif ( side ) {\n\t\t\t\tcaption.css( 'caption-side', side );\n\t\t\t\tcaption[0]._captionSide = side;\n\t\t\t}\n\t\n\t\t\tif (container.find('div.dataTables_scroll').length) {\n\t\t\t\tvar selector = (side === 'top' ? 'Head' : 'Foot');\n\t\n\t\t\t\tcontainer.find('div.dataTables_scroll'+ selector +' table').prepend(caption);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttable.prepend(caption);\n\t\t\t}\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'caption.node()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\treturn ctx.length ? ctx[0].captionNode : null;\n\t} );\n\t\n\t\n\t/**\n\t * Redraw the tables in the current context.\n\t */\n\t_api_register( 'draw()', function ( paging ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( paging === 'page' ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( typeof paging === 'string' ) {\n\t\t\t\t\tpaging = paging === 'full-hold' ?\n\t\t\t\t\t\tfalse :\n\t\t\t\t\t\ttrue;\n\t\t\t\t}\n\t\n\t\t\t\t_fnReDraw( settings, paging===false );\n\t\t\t}\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Get the current page index.\n\t *\n\t * @return {integer} Current page index (zero based)\n\t *//**\n\t * Set the current page.\n\t *\n\t * Note that if you attempt to show a page which does not exist, DataTables will\n\t * not throw an error, but rather reset the paging.\n\t *\n\t * @param {integer|string} action The paging action to take. This can be one of:\n\t *  * `integer` - The page index to jump to\n\t *  * `string` - An action to take:\n\t *    * `first` - Jump to first page.\n\t *    * `next` - Jump to the next page\n\t *    * `previous` - Jump to previous page\n\t *    * `last` - Jump to the last page.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'page()', function ( action ) {\n\t\tif ( action === undefined ) {\n\t\t\treturn this.page.info().page; // not an expensive call\n\t\t}\n\t\n\t\t// else, have an action to take on all tables\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnPageChange( settings, action );\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Paging information for the first table in the current context.\n\t *\n\t * If you require paging information for another table, use the `table()` method\n\t * with a suitable selector.\n\t *\n\t * @return {object} Object with the following properties set:\n\t *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n\t *  * `pages` - Total number of pages\n\t *  * `start` - Display index for the first record shown on the current page\n\t *  * `end` - Display index for the last record shown on the current page\n\t *  * `length` - Display length (number of records). Note that generally `start\n\t *    + length = end`, but this is not always true, for example if there are\n\t *    only 2 records to show on the final page, with a length of 10.\n\t *  * `recordsTotal` - Full data set length\n\t *  * `recordsDisplay` - Data set length once the current filtering criterion\n\t *    are applied.\n\t */\n\t_api_register( 'page.info()', function () {\n\t\tif ( this.context.length === 0 ) {\n\t\t\treturn undefined;\n\t\t}\n\t\n\t\tvar\n\t\t\tsettings   = this.context[0],\n\t\t\tstart      = settings._iDisplayStart,\n\t\t\tlen        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\tall        = len === -1;\n\t\n\t\treturn {\n\t\t\t\"page\":           all ? 0 : Math.floor( start / len ),\n\t\t\t\"pages\":          all ? 1 : Math.ceil( visRecords / len ),\n\t\t\t\"start\":          start,\n\t\t\t\"end\":            settings.fnDisplayEnd(),\n\t\t\t\"length\":         len,\n\t\t\t\"recordsTotal\":   settings.fnRecordsTotal(),\n\t\t\t\"recordsDisplay\": visRecords,\n\t\t\t\"serverSide\":     _fnDataSource( settings ) === 'ssp'\n\t\t};\n\t} );\n\t\n\t\n\t/**\n\t * Get the current page length.\n\t *\n\t * @return {integer} Current page length. Note `-1` indicates that all records\n\t *   are to be shown.\n\t *//**\n\t * Set the current page length.\n\t *\n\t * @param {integer} Page length to set. Use `-1` to show all records.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'page.len()', function ( len ) {\n\t\t// Note that we can't call this function 'length()' because `length`\n\t\t// is a Javascript property of functions which defines how many arguments\n\t\t// the function expects.\n\t\tif ( len === undefined ) {\n\t\t\treturn this.context.length !== 0 ?\n\t\t\t\tthis.context[0]._iDisplayLength :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// else, set the page length\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnLengthChange( settings, len );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\tvar __reload = function ( settings, holdPosition, callback ) {\n\t\t// Use the draw event to trigger a callback\n\t\tif ( callback ) {\n\t\t\tvar api = new _Api( settings );\n\t\n\t\t\tapi.one( 'draw', function () {\n\t\t\t\tcallback( api.ajax.json() );\n\t\t\t} );\n\t\t}\n\t\n\t\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t\t_fnReDraw( settings, holdPosition );\n\t\t}\n\t\telse {\n\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t// Cancel an existing request\n\t\t\tvar xhr = settings.jqXHR;\n\t\t\tif ( xhr && xhr.readyState !== 4 ) {\n\t\t\t\txhr.abort();\n\t\t\t}\n\t\n\t\t\t// Trigger xhr\n\t\t\t_fnBuildAjax( settings, {}, function( json ) {\n\t\t\t\t_fnClearTable( settings );\n\t\n\t\t\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\t_fnAddData( settings, data[i] );\n\t\t\t\t}\n\t\n\t\t\t\t_fnReDraw( settings, holdPosition );\n\t\t\t\t_fnInitComplete( settings );\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t} );\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Get the JSON response from the last Ajax request that DataTables made to the\n\t * server. Note that this returns the JSON from the first table in the current\n\t * context.\n\t *\n\t * @return {object} JSON received from the server.\n\t */\n\t_api_register( 'ajax.json()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length > 0 ) {\n\t\t\treturn ctx[0].json;\n\t\t}\n\t\n\t\t// else return undefined;\n\t} );\n\t\n\t\n\t/**\n\t * Get the data submitted in the last Ajax request\n\t */\n\t_api_register( 'ajax.params()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length > 0 ) {\n\t\t\treturn ctx[0].oAjaxData;\n\t\t}\n\t\n\t\t// else return undefined;\n\t} );\n\t\n\t\n\t/**\n\t * Reload tables from the Ajax data source. Note that this function will\n\t * automatically re-draw the table when the remote data has been loaded.\n\t *\n\t * @param {boolean} [reset=true] Reset (default) or hold the current paging\n\t *   position. A full re-sort and re-filter is performed when this method is\n\t *   called, which is why the pagination reset is the default action.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.reload()', function ( callback, resetPaging ) {\n\t\treturn this.iterator( 'table', function (settings) {\n\t\t\t__reload( settings, resetPaging===false, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Get the current Ajax URL. Note that this returns the URL from the first\n\t * table in the current context.\n\t *\n\t * @return {string} Current Ajax source URL\n\t *//**\n\t * Set the Ajax URL. Note that this will set the URL for all tables in the\n\t * current context.\n\t *\n\t * @param {string} url URL to set.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.url()', function ( url ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( url === undefined ) {\n\t\t\t// get\n\t\t\tif ( ctx.length === 0 ) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tctx = ctx[0];\n\t\n\t\t\treturn $.isPlainObject( ctx.ajax ) ?\n\t\t\t\tctx.ajax.url :\n\t\t\t\tctx.ajax;\n\t\t}\n\t\n\t\t// set\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( $.isPlainObject( settings.ajax ) ) {\n\t\t\t\tsettings.ajax.url = url;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsettings.ajax = url;\n\t\t\t}\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Load data from the newly set Ajax URL. Note that this method is only\n\t * available when `ajax.url()` is used to set a URL. Additionally, this method\n\t * has the same effect as calling `ajax.reload()` but is provided for\n\t * convenience when setting a new URL. Like `ajax.reload()` it will\n\t * automatically redraw the table once the remote data has been loaded.\n\t *\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\n\t\t// Same as a reload, but makes sense to present it for easy access after a\n\t\t// url change\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\t__reload( ctx, resetPaging===false, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t\n\tvar _selector_run = function ( type, selector, selectFn, settings, opts )\n\t{\n\t\tvar\n\t\t\tout = [], res,\n\t\t\ta, i, ien, j, jen,\n\t\t\tselectorType = typeof selector;\n\t\n\t\t// Can't just check for isArray here, as an API or jQuery instance might be\n\t\t// given with their array like look\n\t\tif ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\n\t\t\tselector = [ selector ];\n\t\t}\n\t\n\t\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t\t// Only split on simple strings - complex expressions will be jQuery selectors\n\t\t\ta = selector[i] && selector[i].split && ! selector[i].match(/[[(:]/) ?\n\t\t\t\tselector[i].split(',') :\n\t\t\t\t[ selector[i] ];\n\t\n\t\t\tfor ( j=0, jen=a.length ; j<jen ; j++ ) {\n\t\t\t\tres = selectFn( typeof a[j] === 'string' ? (a[j]).trim() : a[j] );\n\t\n\t\t\t\t// Remove empty items\n\t\t\t\tres = res.filter( function (item) {\n\t\t\t\t\treturn item !== null && item !== undefined;\n\t\t\t\t});\n\t\n\t\t\t\tif ( res && res.length ) {\n\t\t\t\t\tout = out.concat( res );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// selector extensions\n\t\tvar ext = _ext.selector[ type ];\n\t\tif ( ext.length ) {\n\t\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\t\tout = ext[i]( settings, opts, out );\n\t\t\t}\n\t\t}\n\t\n\t\treturn _unique( out );\n\t};\n\t\n\t\n\tvar _selector_opts = function ( opts )\n\t{\n\t\tif ( ! opts ) {\n\t\t\topts = {};\n\t\t}\n\t\n\t\t// Backwards compatibility for 1.9- which used the terminology filter rather\n\t\t// than search\n\t\tif ( opts.filter && opts.search === undefined ) {\n\t\t\topts.search = opts.filter;\n\t\t}\n\t\n\t\treturn $.extend( {\n\t\t\tsearch: 'none',\n\t\t\torder: 'current',\n\t\t\tpage: 'all'\n\t\t}, opts );\n\t};\n\t\n\t\n\t// Reduce the API instance to the first item found\n\tvar _selector_first = function ( old )\n\t{\n\t\tvar inst = new _Api(old.context[0]);\n\t\n\t\t// Use a push rather than passing to the constructor, since it will\n\t\t// merge arrays down automatically, which isn't what is wanted here\n\t\tif (old.length) {\n\t\t\tinst.push( old[0] );\n\t\t}\n\t\n\t\tinst.selector = old.selector;\n\t\n\t\t// Limit to a single row / column / cell\n\t\tif (inst.length && inst[0].length > 1) {\n\t\t\tinst[0].splice(1);\n\t\t}\n\t\n\t\treturn inst;\n\t};\n\t\n\t\n\tvar _selector_row_indexes = function ( settings, opts )\n\t{\n\t\tvar\n\t\t\ti, ien, tmp, a=[],\n\t\t\tdisplayFiltered = settings.aiDisplay,\n\t\t\tdisplayMaster = settings.aiDisplayMaster;\n\t\n\t\tvar\n\t\t\tsearch = opts.search,  // none, applied, removed\n\t\t\torder  = opts.order,   // applied, current, index (original - compatibility with 1.9)\n\t\t\tpage   = opts.page;    // all, current\n\t\n\t\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t\t// In server-side processing mode, most options are irrelevant since\n\t\t\t// rows not shown don't exist and the index order is the applied order\n\t\t\t// Removed is a special case - for consistency just return an empty\n\t\t\t// array\n\t\t\treturn search === 'removed' ?\n\t\t\t\t[] :\n\t\t\t\t_range( 0, displayMaster.length );\n\t\t}\n\t\n\t\tif ( page == 'current' ) {\n\t\t\t// Current page implies that order=current and filter=applied, since it is\n\t\t\t// fairly senseless otherwise, regardless of what order and search actually\n\t\t\t// are\n\t\t\tfor ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\n\t\t\t\ta.push( displayFiltered[i] );\n\t\t\t}\n\t\t}\n\t\telse if ( order == 'current' || order == 'applied' ) {\n\t\t\tif ( search == 'none') {\n\t\t\t\ta = displayMaster.slice();\n\t\t\t}\n\t\t\telse if ( search == 'applied' ) {\n\t\t\t\ta = displayFiltered.slice();\n\t\t\t}\n\t\t\telse if ( search == 'removed' ) {\n\t\t\t\t// O(n+m) solution by creating a hash map\n\t\t\t\tvar displayFilteredMap = {};\n\t\n\t\t\t\tfor ( i=0, ien=displayFiltered.length ; i<ien ; i++ ) {\n\t\t\t\t\tdisplayFilteredMap[displayFiltered[i]] = null;\n\t\t\t\t}\n\t\n\t\t\t\tdisplayMaster.forEach(function (item) {\n\t\t\t\t\tif (! Object.prototype.hasOwnProperty.call(displayFilteredMap, item)) {\n\t\t\t\t\t\ta.push(item);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse if ( order == 'index' || order == 'original' ) {\n\t\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\t\tif (! settings.aoData[i]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\n\t\t\t\tif ( search == 'none' ) {\n\t\t\t\t\ta.push( i );\n\t\t\t\t}\n\t\t\t\telse { // applied | removed\n\t\t\t\t\ttmp = displayFiltered.indexOf(i);\n\t\n\t\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t\t{\n\t\t\t\t\t\ta.push( i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if ( typeof order === 'number' ) {\n\t\t\t// Order the rows by the given column\n\t\t\tvar ordered = _fnSort(settings, order, 'asc');\n\t\n\t\t\tif (search === 'none') {\n\t\t\t\ta = ordered;\n\t\t\t}\n\t\t\telse { // applied | removed\n\t\t\t\tfor (i=0; i<ordered.length; i++) {\n\t\t\t\t\ttmp = displayFiltered.indexOf(ordered[i]);\n\t\n\t\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t\t{\n\t\t\t\t\t\ta.push( ordered[i] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn a;\n\t};\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Rows\n\t *\n\t * {}          - no selector - use all available rows\n\t * {integer}   - row aoData index\n\t * {node}      - TR node\n\t * {string}    - jQuery selector to apply to the TR elements\n\t * {array}     - jQuery array of nodes, or simply an array of TR nodes\n\t *\n\t */\n\tvar __row_selector = function ( settings, selector, opts )\n\t{\n\t\tvar rows;\n\t\tvar run = function ( sel ) {\n\t\t\tvar selInt = _intVal( sel );\n\t\t\tvar aoData = settings.aoData;\n\t\n\t\t\t// Short cut - selector is a number and no options provided (default is\n\t\t\t// all records, so no need to check if the index is in there, since it\n\t\t\t// must be - dev error if the index doesn't exist).\n\t\t\tif ( selInt !== null && ! opts ) {\n\t\t\t\treturn [ selInt ];\n\t\t\t}\n\t\n\t\t\tif ( ! rows ) {\n\t\t\t\trows = _selector_row_indexes( settings, opts );\n\t\t\t}\n\t\n\t\t\tif ( selInt !== null && rows.indexOf(selInt) !== -1 ) {\n\t\t\t\t// Selector - integer\n\t\t\t\treturn [ selInt ];\n\t\t\t}\n\t\t\telse if ( sel === null || sel === undefined || sel === '' ) {\n\t\t\t\t// Selector - none\n\t\t\t\treturn rows;\n\t\t\t}\n\t\n\t\t\t// Selector - function\n\t\t\tif ( typeof sel === 'function' ) {\n\t\t\t\treturn rows.map( function (idx) {\n\t\t\t\t\tvar row = aoData[ idx ];\n\t\t\t\t\treturn sel( idx, row._aData, row.nTr ) ? idx : null;\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// Selector - node\n\t\t\tif ( sel.nodeName ) {\n\t\t\t\tvar rowIdx = sel._DT_RowIndex;  // Property added by DT for fast lookup\n\t\t\t\tvar cellIdx = sel._DT_CellIndex;\n\t\n\t\t\t\tif ( rowIdx !== undefined ) {\n\t\t\t\t\t// Make sure that the row is actually still present in the table\n\t\t\t\t\treturn aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?\n\t\t\t\t\t\t[ rowIdx ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t\telse if ( cellIdx ) {\n\t\t\t\t\treturn aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel.parentNode ?\n\t\t\t\t\t\t[ cellIdx.row ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\n\t\t\t\t\treturn host.length ?\n\t\t\t\t\t\t[ host.data('dt-row') ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// ID selector. Want to always be able to select rows by id, regardless\n\t\t\t// of if the tr element has been created or not, so can't rely upon\n\t\t\t// jQuery here - hence a custom implementation. This does not match\n\t\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n\t\t\t// but to select it using a CSS selector engine (like Sizzle or\n\t\t\t// querySelect) it would need to need to be escaped for some characters.\n\t\t\t// DataTables simplifies this for row selectors since you can select\n\t\t\t// only a row. A # indicates an id any anything that follows is the id -\n\t\t\t// unescaped.\n\t\t\tif ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\n\t\t\t\t// get row index from id\n\t\t\t\tvar rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\n\t\t\t\tif ( rowObj !== undefined ) {\n\t\t\t\t\treturn [ rowObj.idx ];\n\t\t\t\t}\n\t\n\t\t\t\t// need to fall through to jQuery in case there is DOM id that\n\t\t\t\t// matches\n\t\t\t}\n\t\t\t\n\t\t\t// Get nodes in the order from the `rows` array with null values removed\n\t\t\tvar nodes = _removeEmpty(\n\t\t\t\t_pluck_order( settings.aoData, rows, 'nTr' )\n\t\t\t);\n\t\n\t\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\n\t\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\n\t\t\t// it also allows arrays, so this will cope with all three options\n\t\t\treturn $(nodes)\n\t\t\t\t.filter( sel )\n\t\t\t\t.map( function () {\n\t\t\t\t\treturn this._DT_RowIndex;\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\t};\n\t\n\t\tvar matched = _selector_run( 'row', selector, run, settings, opts );\n\t\n\t\tif (opts.order === 'current' || opts.order === 'applied') {\n\t\t\t_fnSortDisplay(settings, matched);\n\t\t}\n\t\n\t\treturn matched;\n\t};\n\t\n\t\n\t_api_register( 'rows()', function ( selector, opts ) {\n\t\t// argument shifting\n\t\tif ( selector === undefined ) {\n\t\t\tselector = '';\n\t\t}\n\t\telse if ( $.isPlainObject( selector ) ) {\n\t\t\topts = selector;\n\t\t\tselector = '';\n\t\t}\n\t\n\t\topts = _selector_opts( opts );\n\t\n\t\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\t\treturn __row_selector( settings, selector, opts );\n\t\t}, 1 );\n\t\n\t\t// Want argument shifting here and in __row_selector?\n\t\tinst.selector.rows = selector;\n\t\tinst.selector.opts = opts;\n\t\n\t\treturn inst;\n\t} );\n\t\n\t_api_register( 'rows().nodes()', function () {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\treturn settings.aoData[ row ].nTr || undefined;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'rows().data()', function () {\n\t\treturn this.iterator( true, 'rows', function ( settings, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows, '_aData' );\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\tvar r = settings.aoData[ row ];\n\t\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\t_fnInvalidate( settings, row, src );\n\t\t} );\n\t} );\n\t\n\t_api_registerPlural( 'rows().indexes()', 'row().index()', function () {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\treturn row;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\n\t\tvar a = [];\n\t\tvar context = this.context;\n\t\n\t\t// `iterator` will drop undefined values, but in this case we want them\n\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tfor ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\n\t\t\t\tvar id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\n\t\t\t\ta.push( (hash === true ? '#' : '' )+ id );\n\t\t\t}\n\t\t}\n\t\n\t\treturn new _Api( context, a );\n\t} );\n\t\n\t_api_registerPlural( 'rows().remove()', 'row().remove()', function () {\n\t\tthis.iterator( 'row', function ( settings, row ) {\n\t\t\tvar data = settings.aoData;\n\t\t\tvar rowData = data[ row ];\n\t\n\t\t\t// Delete from the display arrays\n\t\t\tvar idx = settings.aiDisplayMaster.indexOf(row);\n\t\t\tif (idx !== -1) {\n\t\t\t\tsettings.aiDisplayMaster.splice(idx, 1);\n\t\t\t}\n\t\n\t\t\t// For server-side processing tables - subtract the deleted row from the count\n\t\t\tif ( settings._iRecordsDisplay > 0 ) {\n\t\t\t\tsettings._iRecordsDisplay--;\n\t\t\t}\n\t\n\t\t\t// Check for an 'overflow' they case for displaying the table\n\t\t\t_fnLengthOverflow( settings );\n\t\n\t\t\t// Remove the row's ID reference if there is one\n\t\t\tvar id = settings.rowIdFn( rowData._aData );\n\t\t\tif ( id !== undefined ) {\n\t\t\t\tdelete settings.aIds[ id ];\n\t\t\t}\n\t\n\t\t\tdata[row] = null;\n\t\t} );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( 'rows.add()', function ( rows ) {\n\t\tvar newRows = this.iterator( 'table', function ( settings ) {\n\t\t\t\tvar row, i, ien;\n\t\t\t\tvar out = [];\n\t\n\t\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = rows[i];\n\t\n\t\t\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\t\t\tout.push( _fnAddTr( settings, row )[0] );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tout.push( _fnAddData( settings, row ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn out;\n\t\t\t}, 1 );\n\t\n\t\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\n\t\tvar modRows = this.rows( -1 );\n\t\tmodRows.pop();\n\t\t_fnArrayApply(modRows, newRows);\n\t\n\t\treturn modRows;\n\t} );\n\t\n\t\n\t\n\t\n\t\n\t/**\n\t *\n\t */\n\t_api_register( 'row()', function ( selector, opts ) {\n\t\treturn _selector_first( this.rows( selector, opts ) );\n\t} );\n\t\n\t\n\t_api_register( 'row().data()', function ( data ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// Get\n\t\t\treturn ctx.length && this.length && this[0].length ?\n\t\t\t\tctx[0].aoData[ this[0] ]._aData :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// Set\n\t\tvar row = ctx[0].aoData[ this[0] ];\n\t\trow._aData = data;\n\t\n\t\t// If the DOM has an id, and the data source is an array\n\t\tif ( Array.isArray( data ) && row.nTr && row.nTr.id ) {\n\t\t\t_fnSetObjectDataFn( ctx[0].rowId )( data, row.nTr.id );\n\t\t}\n\t\n\t\t// Automatically invalidate\n\t\t_fnInvalidate( ctx[0], this[0], 'data' );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( 'row().node()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif (ctx.length && this.length && this[0].length) {\n\t\t\tvar row = ctx[0].aoData[ this[0] ];\n\t\n\t\t\tif (row && row.nTr) {\n\t\t\t\treturn row.nTr;\n\t\t\t}\n\t\t}\n\t\n\t\treturn null;\n\t} );\n\t\n\t\n\t_api_register( 'row.add()', function ( row ) {\n\t\t// Allow a jQuery object to be passed in - only a single row is added from\n\t\t// it though - the first element in the set\n\t\tif ( row instanceof $ && row.length ) {\n\t\t\trow = row[0];\n\t\t}\n\t\n\t\tvar rows = this.iterator( 'table', function ( settings ) {\n\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\treturn _fnAddTr( settings, row )[0];\n\t\t\t}\n\t\t\treturn _fnAddData( settings, row );\n\t\t} );\n\t\n\t\t// Return an Api.rows() extended instance, with the newly added row selected\n\t\treturn this.row( rows[0] );\n\t} );\n\t\n\t\n\t$(document).on('plugin-init.dt', function (e, context) {\n\t\tvar api = new _Api( context );\n\t\n\t\tapi.on( 'stateSaveParams.DT', function ( e, settings, d ) {\n\t\t\t// This could be more compact with the API, but it is a lot faster as a simple\n\t\t\t// internal loop\n\t\t\tvar idFn = settings.rowIdFn;\n\t\t\tvar rows = settings.aiDisplayMaster;\n\t\t\tvar ids = [];\n\t\n\t\t\tfor (var i=0 ; i<rows.length ; i++) {\n\t\t\t\tvar rowIdx = rows[i];\n\t\t\t\tvar data = settings.aoData[rowIdx];\n\t\n\t\t\t\tif (data._detailsShow) {\n\t\t\t\t\tids.push( '#' + idFn(data._aData) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\td.childRows = ids;\n\t\t});\n\t\n\t\t// For future state loads (e.g. with StateRestore)\n\t\tapi.on( 'stateLoaded.DT', function (e, settings, state) {\n\t\t\t__details_state_load( api, state );\n\t\t});\n\t\n\t\t// And the initial load state\n\t\t__details_state_load( api, api.state.loaded() );\n\t});\n\t\n\tvar __details_state_load = function (api, state)\n\t{\n\t\tif ( state && state.childRows ) {\n\t\t\tapi\n\t\t\t\t.rows( state.childRows.map(function (id) {\n\t\t\t\t\t// Escape any `:` characters from the row id. Accounts for\n\t\t\t\t\t// already escaped characters.\n\t\t\t\t\treturn id.replace(/([^:\\\\]*(?:\\\\.[^:\\\\]*)*):/g, \"$1\\\\:\");\n\t\t\t\t}) )\n\t\t\t\t.every( function () {\n\t\t\t\t\t_fnCallbackFire( api.settings()[0], null, 'requestChild', [ this ] )\n\t\t\t\t});\n\t\t}\n\t}\n\t\n\tvar __details_add = function ( ctx, row, data, klass )\n\t{\n\t\t// Convert to array of TR elements\n\t\tvar rows = [];\n\t\tvar addRow = function ( r, k ) {\n\t\t\t// Recursion to allow for arrays of jQuery objects\n\t\t\tif ( Array.isArray( r ) || r instanceof $ ) {\n\t\t\t\tfor ( var i=0, ien=r.length ; i<ien ; i++ ) {\n\t\t\t\t\taddRow( r[i], k );\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If we get a TR element, then just add it directly - up to the dev\n\t\t\t// to add the correct number of columns etc\n\t\t\tif ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\n\t\t\t\tr.setAttribute( 'data-dt-row', row.idx );\n\t\t\t\trows.push( r );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Otherwise create a row with a wrapper\n\t\t\t\tvar created = $('<tr><td></td></tr>')\n\t\t\t\t\t.attr( 'data-dt-row', row.idx )\n\t\t\t\t\t.addClass( k );\n\t\t\t\t\n\t\t\t\t$('td', created)\n\t\t\t\t\t.addClass( k )\n\t\t\t\t\t.html( r )[0].colSpan = _fnVisbleColumns( ctx );\n\t\n\t\t\t\trows.push( created[0] );\n\t\t\t}\n\t\t};\n\t\n\t\taddRow( data, klass );\n\t\n\t\tif ( row._details ) {\n\t\t\trow._details.detach();\n\t\t}\n\t\n\t\trow._details = $(rows);\n\t\n\t\t// If the children were already shown, that state should be retained\n\t\tif ( row._detailsShow ) {\n\t\t\trow._details.insertAfter( row.nTr );\n\t\t}\n\t};\n\t\n\t\n\t// Make state saving of child row details async to allow them to be batch processed\n\tvar __details_state = DataTable.util.throttle(\n\t\tfunction (ctx) {\n\t\t\t_fnSaveState( ctx[0] )\n\t\t},\n\t\t500\n\t);\n\t\n\t\n\tvar __details_remove = function ( api, idx )\n\t{\n\t\tvar ctx = api.context;\n\t\n\t\tif ( ctx.length ) {\n\t\t\tvar row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\n\t\n\t\t\tif ( row && row._details ) {\n\t\t\t\trow._details.remove();\n\t\n\t\t\t\trow._detailsShow = undefined;\n\t\t\t\trow._details = undefined;\n\t\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\n\t\t\t\t__details_state( ctx );\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\tvar __details_display = function ( api, show ) {\n\t\tvar ctx = api.context;\n\t\n\t\tif ( ctx.length && api.length ) {\n\t\t\tvar row = ctx[0].aoData[ api[0] ];\n\t\n\t\t\tif ( row._details ) {\n\t\t\t\trow._detailsShow = show;\n\t\n\t\t\t\tif ( show ) {\n\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t\t$( row.nTr ).addClass( 'dt-hasChild' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\trow._details.detach();\n\t\t\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\n\t\t\t\t}\n\t\n\t\t\t\t_fnCallbackFire( ctx[0], null, 'childRow', [ show, api.row( api[0] ) ] )\n\t\n\t\t\t\t__details_events( ctx[0] );\n\t\t\t\t__details_state( ctx );\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\tvar __details_events = function ( settings )\n\t{\n\t\tvar api = new _Api( settings );\n\t\tvar namespace = '.dt.DT_details';\n\t\tvar drawEvent = 'draw'+namespace;\n\t\tvar colvisEvent = 'column-sizing'+namespace;\n\t\tvar destroyEvent = 'destroy'+namespace;\n\t\tvar data = settings.aoData;\n\t\n\t\tapi.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\n\t\n\t\tif ( _pluck( data, '_details' ).length > 0 ) {\n\t\t\t// On each draw, insert the required elements into the document\n\t\t\tapi.on( drawEvent, function ( e, ctx ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tapi.rows( {page:'current'} ).eq(0).each( function (idx) {\n\t\t\t\t\t// Internal data grab\n\t\t\t\t\tvar row = data[ idx ];\n\t\n\t\t\t\t\tif ( row._detailsShow ) {\n\t\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\n\t\t\t// Column visibility change - update the colspan\n\t\t\tapi.on( colvisEvent, function ( e, ctx ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// Update the colspan for the details rows (note, only if it already has\n\t\t\t\t// a colspan)\n\t\t\t\tvar row, visible = _fnVisbleColumns( ctx );\n\t\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = data[i];\n\t\n\t\t\t\t\tif ( row && row._details ) {\n\t\t\t\t\t\trow._details.each(function () {\n\t\t\t\t\t\t\tvar el = $(this).children('td');\n\t\n\t\t\t\t\t\t\tif (el.length == 1) {\n\t\t\t\t\t\t\t\tel.attr('colspan', visible);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\t// Table destroyed - nuke any child rows\n\t\t\tapi.on( destroyEvent, function ( e, ctx ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( data[i] && data[i]._details ) {\n\t\t\t\t\t\t__details_remove( api, i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t};\n\t\n\t// Strings for the method names to help minification\n\tvar _emp = '';\n\tvar _child_obj = _emp+'row().child';\n\tvar _child_mth = _child_obj+'()';\n\t\n\t// data can be:\n\t//  tr\n\t//  string\n\t//  jQuery or array of any of the above\n\t_api_register( _child_mth, function ( data, klass ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length && this.length && ctx[0].aoData[ this[0] ]\n\t\t\t\t? ctx[0].aoData[ this[0] ]._details\n\t\t\t\t: undefined;\n\t\t}\n\t\telse if ( data === true ) {\n\t\t\t// show\n\t\t\tthis.child.show();\n\t\t}\n\t\telse if ( data === false ) {\n\t\t\t// remove\n\t\t\t__details_remove( this );\n\t\t}\n\t\telse if ( ctx.length && this.length ) {\n\t\t\t// set\n\t\t\t__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\n\t\t}\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.show()',\n\t\t_child_mth+'.show()' // only when `child()` was called with parameters (without\n\t], function () {         // it returns an object and this method is not executed)\n\t\t__details_display( this, true );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.hide()',\n\t\t_child_mth+'.hide()' // only when `child()` was called with parameters (without\n\t], function () {         // it returns an object and this method is not executed)\n\t\t__details_display( this, false );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.remove()',\n\t\t_child_mth+'.remove()' // only when `child()` was called with parameters (without\n\t], function () {           // it returns an object and this method is not executed)\n\t\t__details_remove( this );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( _child_obj+'.isShown()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length && this.length && ctx[0].aoData[ this[0] ] ) {\n\t\t\t// _detailsShown as false or undefined will fall through to return false\n\t\t\treturn ctx[0].aoData[ this[0] ]._detailsShow || false;\n\t\t}\n\t\treturn false;\n\t} );\n\t\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Columns\n\t *\n\t * {integer}           - column index (>=0 count from left, <0 count from right)\n\t * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n\t * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n\t * \"{string}:name\"     - column name\n\t * \"{string}\"          - jQuery selector on column header nodes\n\t *\n\t */\n\t\n\t// can be an array of these items, comma separated list, or an array of comma\n\t// separated lists\n\t\n\tvar __re_column_selector = /^([^:]+)?:(name|title|visIdx|visible)$/;\n\t\n\t\n\t// r1 and r2 are redundant - but it means that the parameters match for the\n\t// iterator callback in columns().data()\n\tvar __columnData = function ( settings, column, r1, r2, rows, type ) {\n\t\tvar a = [];\n\t\tfor ( var row=0, ien=rows.length ; row<ien ; row++ ) {\n\t\t\ta.push( _fnGetCellData( settings, rows[row], column, type ) );\n\t\t}\n\t\treturn a;\n\t};\n\t\n\t\n\tvar __column_header = function ( settings, column, row ) {\n\t\tvar header = settings.aoHeader;\n\t\tvar target = row !== undefined\n\t\t\t? row\n\t\t\t: settings.bSortCellsTop // legacy support\n\t\t\t\t? 0\n\t\t\t\t: header.length - 1;\n\t\n\t\treturn header[target][column].cell;\n\t};\n\t\n\tvar __column_selector = function ( settings, selector, opts )\n\t{\n\t\tvar\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tnames = _pluck( columns, 'sName' ),\n\t\t\ttitles = _pluck( columns, 'sTitle' ),\n\t\t\tcells = DataTable.util.get('[].[].cell')(settings.aoHeader),\n\t\t\tnodes = _unique( _flatten([], cells) );\n\t\t\n\t\tvar run = function ( s ) {\n\t\t\tvar selInt = _intVal( s );\n\t\n\t\t\t// Selector - all\n\t\t\tif ( s === '' ) {\n\t\t\t\treturn _range( columns.length );\n\t\t\t}\n\t\n\t\t\t// Selector - index\n\t\t\tif ( selInt !== null ) {\n\t\t\t\treturn [ selInt >= 0 ?\n\t\t\t\t\tselInt : // Count from left\n\t\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\n\t\t\t\t];\n\t\t\t}\n\t\n\t\t\t// Selector = function\n\t\t\tif ( typeof s === 'function' ) {\n\t\t\t\tvar rows = _selector_row_indexes( settings, opts );\n\t\n\t\t\t\treturn columns.map(function (col, idx) {\n\t\t\t\t\treturn s(\n\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t__columnData( settings, idx, 0, 0, rows ),\n\t\t\t\t\t\t\t__column_header( settings, idx )\n\t\t\t\t\t\t) ? idx : null;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// jQuery or string selector\n\t\t\tvar match = typeof s === 'string' ?\n\t\t\t\ts.match( __re_column_selector ) :\n\t\t\t\t'';\n\t\n\t\t\tif ( match ) {\n\t\t\t\tswitch( match[2] ) {\n\t\t\t\t\tcase 'visIdx':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\t// Selector is a column index\n\t\t\t\t\t\tif (match[1] && match[1].match(/^\\d+$/)) {\n\t\t\t\t\t\t\tvar idx = parseInt( match[1], 10 );\n\t\n\t\t\t\t\t\t\t// Visible index given, convert to column index\n\t\t\t\t\t\t\tif ( idx < 0 ) {\n\t\t\t\t\t\t\t\t// Counting from the right\n\t\t\t\t\t\t\t\tvar visColumns = columns.map( function (col,i) {\n\t\t\t\t\t\t\t\t\treturn col.bVisible ? i : null;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\treturn [ visColumns[ visColumns.length + idx ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Counting from the left\n\t\t\t\t\t\t\treturn [ _fnVisibleToColumnIndex( settings, idx ) ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn columns.map( function (col, idx) {\n\t\t\t\t\t\t\t// Not visible, can't match\n\t\t\t\t\t\t\tif (! col.bVisible) {\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// Selector\n\t\t\t\t\t\t\tif (match[1]) {\n\t\t\t\t\t\t\t\treturn $(nodes[idx]).filter(match[1]).length > 0 ? idx : null;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// `:visible` on its own\n\t\t\t\t\t\t\treturn idx;\n\t\t\t\t\t\t} );\n\t\n\t\t\t\t\tcase 'name':\n\t\t\t\t\t\t// match by name. `names` is column index complete and in order\n\t\t\t\t\t\treturn names.map( function (name, i) {\n\t\t\t\t\t\t\treturn name === match[1] ? i : null;\n\t\t\t\t\t\t} );\n\t\n\t\t\t\t\tcase 'title':\n\t\t\t\t\t\t// match by column title\n\t\t\t\t\t\treturn titles.map( function (title, i) {\n\t\t\t\t\t\t\treturn title === match[1] ? i : null;\n\t\t\t\t\t\t} );\n\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Cell in the table body\n\t\t\tif ( s.nodeName && s._DT_CellIndex ) {\n\t\t\t\treturn [ s._DT_CellIndex.column ];\n\t\t\t}\n\t\n\t\t\t// jQuery selector on the TH elements for the columns\n\t\t\tvar jqResult = $( nodes )\n\t\t\t\t.filter( s )\n\t\t\t\t.map( function () {\n\t\t\t\t\treturn _fnColumnsFromHeader( this ); // `nodes` is column index complete and in order\n\t\t\t\t} )\n\t\t\t\t.toArray()\n\t\t\t\t.sort(function (a, b) {\n\t\t\t\t\treturn a - b;\n\t\t\t\t});\n\t\n\t\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\t\treturn jqResult;\n\t\t\t}\n\t\n\t\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\n\t\t\t// a child or such an element\n\t\t\tvar host = $(s).closest('*[data-dt-column]');\n\t\t\treturn host.length ?\n\t\t\t\t[ host.data('dt-column') ] :\n\t\t\t\t[];\n\t\t};\n\t\n\t\treturn _selector_run( 'column', selector, run, settings, opts );\n\t};\n\t\n\t\n\tvar __setColumnVis = function ( settings, column, vis ) {\n\t\tvar\n\t\t\tcols = settings.aoColumns,\n\t\t\tcol  = cols[ column ],\n\t\t\tdata = settings.aoData,\n\t\t\tcells, i, ien, tr;\n\t\n\t\t// Get\n\t\tif ( vis === undefined ) {\n\t\t\treturn col.bVisible;\n\t\t}\n\t\n\t\t// Set\n\t\t// No change\n\t\tif ( col.bVisible === vis ) {\n\t\t\treturn false;\n\t\t}\n\t\n\t\tif ( vis ) {\n\t\t\t// Insert column\n\t\t\t// Need to decide if we should use appendChild or insertBefore\n\t\t\tvar insertBefore = _pluck(cols, 'bVisible').indexOf(true, column+1);\n\t\n\t\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\tif (data[i]) {\n\t\t\t\t\ttr = data[i].nTr;\n\t\t\t\t\tcells = data[i].anCells;\n\t\n\t\t\t\t\tif ( tr ) {\n\t\t\t\t\t\t// insertBefore can act like appendChild if 2nd arg is null\n\t\t\t\t\t\ttr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Remove column\n\t\t\t$( _pluck( settings.aoData, 'anCells', column ) ).detach();\n\t\t}\n\t\n\t\t// Common actions\n\t\tcol.bVisible = vis;\n\t\n\t\t_colGroup(settings);\n\t\t\n\t\treturn true;\n\t};\n\t\n\t\n\t_api_register( 'columns()', function ( selector, opts ) {\n\t\t// argument shifting\n\t\tif ( selector === undefined ) {\n\t\t\tselector = '';\n\t\t}\n\t\telse if ( $.isPlainObject( selector ) ) {\n\t\t\topts = selector;\n\t\t\tselector = '';\n\t\t}\n\t\n\t\topts = _selector_opts( opts );\n\t\n\t\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\t\treturn __column_selector( settings, selector, opts );\n\t\t}, 1 );\n\t\n\t\t// Want argument shifting here and in _row_selector?\n\t\tinst.selector.cols = selector;\n\t\tinst.selector.opts = opts;\n\t\n\t\treturn inst;\n\t} );\n\t\n\t_api_registerPlural( 'columns().header()', 'column().header()', function ( row ) {\n\t\treturn this.iterator( 'column', function (settings, column) {\n\t\t\treturn __column_header(settings, column, row);\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().footer()', 'column().footer()', function ( row ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\tvar footer = settings.aoFooter;\n\t\n\t\t\tif (! footer.length) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\n\t\t\treturn settings.aoFooter[row !== undefined ? row : 0][column].cell;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().data()', 'column().data()', function () {\n\t\treturn this.iterator( 'column-rows', __columnData, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().render()', 'column().render()', function ( type ) {\n\t\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\t\treturn __columnData( settings, column, i, j, rows, type );\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].mData;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\n\t\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows,\n\t\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\n\t\t\t);\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().init()', 'column().init()', function () {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column];\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\n\t\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows, 'anCells', column ) ;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().titles()', 'column().title()', function (title, row) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\t// Argument shifting\n\t\t\tif (typeof title === 'number') {\n\t\t\t\trow = title;\n\t\t\t\ttitle = undefined;\n\t\t\t}\n\t\n\t\t\tvar span = $('span.dt-column-title', this.column(column).header(row));\n\t\n\t\t\tif (title !== undefined) {\n\t\t\t\tspan.html(title);\n\t\t\t\treturn this;\n\t\t\t}\n\t\n\t\t\treturn span.html();\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().types()', 'column().type()', function () {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\tvar type = settings.aoColumns[column].sType;\n\t\n\t\t\t// If the type was invalidated, then resolve it. This actually does\n\t\t\t// all columns at the moment. Would only happen once if getting all\n\t\t\t// column's data types.\n\t\t\tif (! type) {\n\t\t\t\t_fnColumnTypes(settings);\n\t\t\t}\n\t\n\t\t\treturn type;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\n\t\tvar that = this;\n\t\tvar changed = [];\n\t\tvar ret = this.iterator( 'column', function ( settings, column ) {\n\t\t\tif ( vis === undefined ) {\n\t\t\t\treturn settings.aoColumns[ column ].bVisible;\n\t\t\t} // else\n\t\t\t\n\t\t\tif (__setColumnVis( settings, column, vis )) {\n\t\t\t\tchanged.push(column);\n\t\t\t}\n\t\t} );\n\t\n\t\t// Group the column visibility changes\n\t\tif ( vis !== undefined ) {\n\t\t\tthis.iterator( 'table', function ( settings ) {\n\t\t\t\t// Redraw the header after changes\n\t\t\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\t\n\t\t\t\t// Update colspan for no records display. Child rows and extensions will use their own\n\t\t\t\t// listeners to do this - only need to update the empty table item here\n\t\t\t\tif ( ! settings.aiDisplay.length ) {\n\t\t\t\t\t$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\n\t\t\t\t}\n\t\t\n\t\t\t\t_fnSaveState( settings );\n\t\n\t\t\t\t// Second loop once the first is done for events\n\t\t\t\tthat.iterator( 'column', function ( settings, column ) {\n\t\t\t\t\tif (changed.includes(column)) {\n\t\t\t\t\t\t_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\n\t\t\t\tif ( changed.length && (calc === undefined || calc) ) {\n\t\t\t\t\tthat.columns.adjust();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\n\t\treturn ret;\n\t} );\n\t\n\t_api_registerPlural( 'columns().widths()', 'column().width()', function () {\n\t\t// Injects a fake row into the table for just a moment so the widths can\n\t\t// be read, regardless of colspan in the header and rows being present in\n\t\t// the body\n\t\tvar columns = this.columns(':visible').count();\n\t\tvar row = $('<tr>').html('<td>' + Array(columns).join('</td><td>') + '</td>');\n\t\n\t\t$(this.table().body()).append(row);\n\t\n\t\tvar widths = row.children().map(function () {\n\t\t\treturn $(this).outerWidth();\n\t\t});\n\t\n\t\trow.remove();\n\t\t\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\tvar visIdx = _fnColumnIndexToVisible( settings, column );\n\t\n\t\t\treturn visIdx !== null ? widths[visIdx] : 0;\n\t\t}, 1);\n\t} );\n\t\n\t_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn type === 'visible' ?\n\t\t\t\t_fnColumnIndexToVisible( settings, column ) :\n\t\t\t\tcolumn;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'columns.adjust()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t// Force a column sizing to happen with a manual call - otherwise it can skip\n\t\t\t// if the size hasn't changed\n\t\t\tsettings.containerWidth = -1;\n\t\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'column.index()', function ( type, idx ) {\n\t\tif ( this.context.length !== 0 ) {\n\t\t\tvar ctx = this.context[0];\n\t\n\t\t\tif ( type === 'fromVisible' || type === 'toData' ) {\n\t\t\t\treturn _fnVisibleToColumnIndex( ctx, idx );\n\t\t\t}\n\t\t\telse if ( type === 'fromData' || type === 'toVisible' ) {\n\t\t\t\treturn _fnColumnIndexToVisible( ctx, idx );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t_api_register( 'column()', function ( selector, opts ) {\n\t\treturn _selector_first( this.columns( selector, opts ) );\n\t} );\n\t\n\tvar __cell_selector = function ( settings, selector, opts )\n\t{\n\t\tvar data = settings.aoData;\n\t\tvar rows = _selector_row_indexes( settings, opts );\n\t\tvar cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\n\t\tvar allCells = $(_flatten( [], cells ));\n\t\tvar row;\n\t\tvar columns = settings.aoColumns.length;\n\t\tvar a, i, ien, j, o, host;\n\t\n\t\tvar run = function ( s ) {\n\t\t\tvar fnSelector = typeof s === 'function';\n\t\n\t\t\tif ( s === null || s === undefined || fnSelector ) {\n\t\t\t\t// All cells and function selectors\n\t\t\t\ta = [];\n\t\n\t\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = rows[i];\n\t\n\t\t\t\t\tfor ( j=0 ; j<columns ; j++ ) {\n\t\t\t\t\t\to = {\n\t\t\t\t\t\t\trow: row,\n\t\t\t\t\t\t\tcolumn: j\n\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\tif ( fnSelector ) {\n\t\t\t\t\t\t\t// Selector - function\n\t\t\t\t\t\t\thost = data[ row ];\n\t\n\t\t\t\t\t\t\tif ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\n\t\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Selector - all\n\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn a;\n\t\t\t}\n\t\t\t\n\t\t\t// Selector - index\n\t\t\tif ( $.isPlainObject( s ) ) {\n\t\t\t\t// Valid cell index and its in the array of selectable rows\n\t\t\t\treturn s.column !== undefined && s.row !== undefined && rows.indexOf(s.row) !== -1 ?\n\t\t\t\t\t[s] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\n\t\t\t// Selector - jQuery filtered cells\n\t\t\tvar jqResult = allCells\n\t\t\t\t.filter( s )\n\t\t\t\t.map( function (i, el) {\n\t\t\t\t\treturn { // use a new object, in case someone changes the values\n\t\t\t\t\t\trow:    el._DT_CellIndex.row,\n\t\t\t\t\t\tcolumn: el._DT_CellIndex.column\n\t\t\t\t\t};\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\n\t\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\t\treturn jqResult;\n\t\t\t}\n\t\n\t\t\t// Otherwise the selector is a node, and there is one last option - the\n\t\t\t// element might be a child of an element which has dt-row and dt-column\n\t\t\t// data attributes\n\t\t\thost = $(s).closest('*[data-dt-row]');\n\t\t\treturn host.length ?\n\t\t\t\t[ {\n\t\t\t\t\trow: host.data('dt-row'),\n\t\t\t\t\tcolumn: host.data('dt-column')\n\t\t\t\t} ] :\n\t\t\t\t[];\n\t\t};\n\t\n\t\treturn _selector_run( 'cell', selector, run, settings, opts );\n\t};\n\t\n\t\n\t\n\t\n\t_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\n\t\t// Argument shifting\n\t\tif ( $.isPlainObject( rowSelector ) ) {\n\t\t\t// Indexes\n\t\t\tif ( rowSelector.row === undefined ) {\n\t\t\t\t// Selector options in first parameter\n\t\t\t\topts = rowSelector;\n\t\t\t\trowSelector = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Cell index objects in first parameter\n\t\t\t\topts = columnSelector;\n\t\t\t\tcolumnSelector = null;\n\t\t\t}\n\t\t}\n\t\tif ( $.isPlainObject( columnSelector ) ) {\n\t\t\topts = columnSelector;\n\t\t\tcolumnSelector = null;\n\t\t}\n\t\n\t\t// Cell selector\n\t\tif ( columnSelector === null || columnSelector === undefined ) {\n\t\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t\treturn __cell_selector( settings, rowSelector, _selector_opts( opts ) );\n\t\t\t} );\n\t\t}\n\t\n\t\t// The default built in options need to apply to row and columns\n\t\tvar internalOpts = opts ? {\n\t\t\tpage: opts.page,\n\t\t\torder: opts.order,\n\t\t\tsearch: opts.search\n\t\t} : {};\n\t\n\t\t// Row + column selector\n\t\tvar columns = this.columns( columnSelector, internalOpts );\n\t\tvar rows = this.rows( rowSelector, internalOpts );\n\t\tvar i, ien, j, jen;\n\t\n\t\tvar cellsNoOpts = this.iterator( 'table', function ( settings, idx ) {\n\t\t\tvar a = [];\n\t\n\t\t\tfor ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\n\t\t\t\tfor ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\n\t\t\t\t\ta.push( {\n\t\t\t\t\t\trow:    rows[idx][i],\n\t\t\t\t\t\tcolumn: columns[idx][j]\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn a;\n\t\t}, 1 );\n\t\n\t\t// There is currently only one extension which uses a cell selector extension\n\t\t// It is a _major_ performance drag to run this if it isn't needed, so this is\n\t\t// an extension specific check at the moment\n\t\tvar cells = opts && opts.selected ?\n\t\t\tthis.cells( cellsNoOpts, opts ) :\n\t\t\tcellsNoOpts;\n\t\n\t\t$.extend( cells.selector, {\n\t\t\tcols: columnSelector,\n\t\t\trows: rowSelector,\n\t\t\topts: opts\n\t\t} );\n\t\n\t\treturn cells;\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\tvar data = settings.aoData[ row ];\n\t\n\t\t\treturn data && data.anCells ?\n\t\t\t\tdata.anCells[ column ] :\n\t\t\t\tundefined;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_register( 'cells().data()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn _fnGetCellData( settings, row, column );\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\n\t\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\n\t\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn settings.aoData[ row ][ type ][ column ];\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn _fnGetCellData( settings, row, column, type );\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn {\n\t\t\t\trow: row,\n\t\t\t\tcolumn: column,\n\t\t\t\tcolumnVisible: _fnColumnIndexToVisible( settings, column )\n\t\t\t};\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\t_fnInvalidate( settings, row, src, column );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\n\t\treturn _selector_first( this.cells( rowSelector, columnSelector, opts ) );\n\t} );\n\t\n\t\n\t_api_register( 'cell().data()', function ( data ) {\n\t\tvar ctx = this.context;\n\t\tvar cell = this[0];\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// Get\n\t\t\treturn ctx.length && cell.length ?\n\t\t\t\t_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// Set\n\t\t_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\n\t\t_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Get current ordering (sorting) that has been applied to the table.\n\t *\n\t * @returns {array} 2D array containing the sorting information for the first\n\t *   table in the current context. Each element in the parent array represents\n\t *   a column being sorted upon (i.e. multi-sorting with two columns would have\n\t *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n\t *   the column index that the sorting condition applies to, the second is the\n\t *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n\t *   index of the sorting order from the `column.sorting` initialisation array.\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {integer} order Column index to sort upon.\n\t * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n\t * @returns {DataTables.Api} this\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {array} order 1D array of sorting information to be applied.\n\t * @param {array} [...] Optional additional sorting conditions\n\t * @returns {DataTables.Api} this\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {array} order 2D array of sorting information to be applied.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'order()', function ( order, dir ) {\n\t\tvar ctx = this.context;\n\t\tvar args = Array.prototype.slice.call( arguments );\n\t\n\t\tif ( order === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length !== 0 ?\n\t\t\t\tctx[0].aaSorting :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// set\n\t\tif ( typeof order === 'number' ) {\n\t\t\t// Simple column / direction passed in\n\t\t\torder = [ [ order, dir ] ];\n\t\t}\n\t\telse if ( args.length > 1 ) {\n\t\t\t// Arguments passed in (list of 1D arrays)\n\t\t\torder = args;\n\t\t}\n\t\t// otherwise a 2D array was passed in\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tsettings.aaSorting = Array.isArray(order) ? order.slice() : order;\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Attach a sort listener to an element for a given column\n\t *\n\t * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n\t *   listener to. This can take the form of a single DOM node, a jQuery\n\t *   collection of nodes or a jQuery selector which will identify the node(s).\n\t * @param {integer} column the column that a click on this node will sort on\n\t * @param {function} [callback] callback function when sort is run\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'order.listener()', function ( node, column, callback ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnSortAttachListener(settings, node, {}, column, callback);\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'order.fixed()', function ( set ) {\n\t\tif ( ! set ) {\n\t\t\tvar ctx = this.context;\n\t\t\tvar fixed = ctx.length ?\n\t\t\t\tctx[0].aaSortingFixed :\n\t\t\t\tundefined;\n\t\n\t\t\treturn Array.isArray( fixed ) ?\n\t\t\t\t{ pre: fixed } :\n\t\t\t\tfixed;\n\t\t}\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tsettings.aaSortingFixed = $.extend( true, {}, set );\n\t\t} );\n\t} );\n\t\n\t\n\t// Order by the selected column(s)\n\t_api_register( [\n\t\t'columns().order()',\n\t\t'column().order()'\n\t], function ( dir ) {\n\t\tvar that = this;\n\t\n\t\tif ( ! dir ) {\n\t\t\treturn this.iterator( 'column', function ( settings, idx ) {\n\t\t\t\tvar sort = _fnSortFlatten( settings );\n\t\n\t\t\t\tfor ( var i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( sort[i].col === idx ) {\n\t\t\t\t\t\treturn sort[i].dir;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn null;\n\t\t\t}, 1 );\n\t\t}\n\t\telse {\n\t\t\treturn this.iterator( 'table', function ( settings, i ) {\n\t\t\t\tsettings.aaSorting = that[i].map( function (col) {\n\t\t\t\t\treturn [ col, dir ];\n\t\t\t\t} );\n\t\t\t} );\n\t\t}\n\t} );\n\t\n\t_api_registerPlural('columns().orderable()', 'column().orderable()', function ( directions ) {\n\t\treturn this.iterator( 'column', function ( settings, idx ) {\n\t\t\tvar col = settings.aoColumns[idx];\n\t\n\t\t\treturn directions ?\n\t\t\t\tcol.asSorting :\n\t\t\t\tcol.bSortable;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_register( 'processing()', function ( show ) {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\t_fnProcessingDisplay( ctx, show );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'search()', function ( input, regex, smart, caseInsen ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( input === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length !== 0 ?\n\t\t\t\tctx[0].oPreviousSearch.search :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// set\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tif (typeof regex === 'object') {\n\t\t\t\t// New style options to pass to the search builder\n\t\t\t\t_fnFilterComplete( settings, $.extend( settings.oPreviousSearch, regex, {\n\t\t\t\t\tsearch: input\n\t\t\t\t} ) );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Compat for the old options\n\t\t\t\t_fnFilterComplete( settings, $.extend( settings.oPreviousSearch, {\n\t\t\t\t\tsearch: input,\n\t\t\t\t\tregex:  regex === null ? false : regex,\n\t\t\t\t\tsmart:  smart === null ? true  : smart,\n\t\t\t\t\tcaseInsensitive: caseInsen === null ? true : caseInsen\n\t\t\t\t} ) );\n\t\t\t}\n\t\t} );\n\t} );\n\t\n\t_api_register( 'search.fixed()', function ( name, search ) {\n\t\tvar ret = this.iterator( true, 'table', function ( settings ) {\n\t\t\tvar fixed = settings.searchFixed;\n\t\n\t\t\tif (! name) {\n\t\t\t\treturn Object.keys(fixed)\n\t\t\t}\n\t\t\telse if (search === undefined) {\n\t\t\t\treturn fixed[name];\n\t\t\t}\n\t\t\telse if (search === null) {\n\t\t\t\tdelete fixed[name];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfixed[name] = search;\n\t\t\t}\n\t\n\t\t\treturn this;\n\t\t} );\n\t\n\t\treturn name !== undefined && search === undefined\n\t\t\t? ret[0]\n\t\t\t: ret;\n\t} );\n\t\n\t_api_registerPlural(\n\t\t'columns().search()',\n\t\t'column().search()',\n\t\tfunction ( input, regex, smart, caseInsen ) {\n\t\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\t\tvar preSearch = settings.aoPreSearchCols;\n\t\n\t\t\t\tif ( input === undefined ) {\n\t\t\t\t\t// get\n\t\t\t\t\treturn preSearch[ column ].search;\n\t\t\t\t}\n\t\n\t\t\t\t// set\n\t\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tif (typeof regex === 'object') {\n\t\t\t\t\t// New style options to pass to the search builder\n\t\t\t\t\t$.extend( preSearch[ column ], regex, {\n\t\t\t\t\t\tsearch: input\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Old style (with not all options available)\n\t\t\t\t\t$.extend( preSearch[ column ], {\n\t\t\t\t\t\tsearch: input,\n\t\t\t\t\t\tregex:  regex === null ? false : regex,\n\t\t\t\t\t\tsmart:  smart === null ? true  : smart,\n\t\t\t\t\t\tcaseInsensitive: caseInsen === null ? true : caseInsen\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\n\t\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t\t\t} );\n\t\t}\n\t);\n\t\n\t_api_register([\n\t\t\t'columns().search.fixed()',\n\t\t\t'column().search.fixed()'\n\t\t],\n\t\tfunction ( name, search ) {\n\t\t\tvar ret = this.iterator( true, 'column', function ( settings, colIdx ) {\n\t\t\t\tvar fixed = settings.aoColumns[colIdx].searchFixed;\n\t\n\t\t\t\tif (! name) {\n\t\t\t\t\treturn Object.keys(fixed)\n\t\t\t\t}\n\t\t\t\telse if (search === undefined) {\n\t\t\t\t\treturn fixed[name];\n\t\t\t\t}\n\t\t\t\telse if (search === null) {\n\t\t\t\t\tdelete fixed[name];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfixed[name] = search;\n\t\t\t\t}\n\t\n\t\t\t\treturn this;\n\t\t\t} );\n\t\n\t\t\treturn name !== undefined && search === undefined\n\t\t\t\t? ret[0]\n\t\t\t\t: ret;\n\t\t}\n\t);\n\t/*\n\t * State API methods\n\t */\n\t\n\t_api_register( 'state()', function ( set, ignoreTime ) {\n\t\t// getter\n\t\tif ( ! set ) {\n\t\t\treturn this.context.length ?\n\t\t\t\tthis.context[0].oSavedState :\n\t\t\t\tnull;\n\t\t}\n\t\n\t\tvar setMutate = $.extend( true, {}, set );\n\t\n\t\t// setter\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( ignoreTime !== false ) {\n\t\t\t\tsetMutate.time = +new Date() + 100;\n\t\t\t}\n\t\n\t\t\t_fnImplementState( settings, setMutate, function(){} );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'state.clear()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t// Save an empty object\n\t\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'state.loaded()', function () {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oLoadedState :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'state.save()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnSaveState( settings );\n\t\t} );\n\t} );\n\t\n\t// Can be assigned in DateTable.use() - note luxon and moment vars are in helpers.js\n\tvar __bootstrap;\n\tvar __foundation;\n\t\n\t/**\n\t * Set the libraries that DataTables uses, or the global objects.\n\t * Note that the arguments can be either way around (legacy support)\n\t * and the second is optional. See docs.\n\t */\n\tDataTable.use = function (arg1, arg2) {\n\t\t// Reverse arguments for legacy support\n\t\tvar module = typeof arg1 === 'string'\n\t\t\t? arg2\n\t\t\t: arg1;\n\t\tvar type = typeof arg2 === 'string'\n\t\t\t? arg2\n\t\t\t: arg1;\n\t\n\t\t// Getter\n\t\tif (module === undefined && typeof type === 'string') {\n\t\t\tswitch (type) {\n\t\t\t\tcase 'lib':\n\t\t\t\tcase 'jq':\n\t\t\t\t\treturn $;\n\t\n\t\t\t\tcase 'win':\n\t\t\t\t\treturn window;\n\t\n\t\t\t\tcase 'datetime':\n\t\t\t\t\treturn DataTable.DateTime;\n\t\n\t\t\t\tcase 'luxon':\n\t\t\t\t\treturn __luxon;\n\t\n\t\t\t\tcase 'moment':\n\t\t\t\t\treturn __moment;\n\t\n\t\t\t\tcase 'bootstrap':\n\t\t\t\t\t// Use local if set, otherwise try window, which could be undefined\n\t\t\t\t\treturn __bootstrap || window.bootstrap;\n\t\n\t\t\t\tcase 'foundation':\n\t\t\t\t\t// Ditto\n\t\t\t\t\treturn __foundation || window.Foundation;\n\t\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\n\t\t// Setter\n\t\tif (type === 'lib' || type === 'jq' || (module && module.fn && module.fn.jquery)) {\n\t\t\t$ = module;\n\t\t}\n\t\telse if (type === 'win' || (module && module.document)) {\n\t\t\twindow = module;\n\t\t\tdocument = module.document;\n\t\t}\n\t\telse if (type === 'datetime' || (module && module.type === 'DateTime')) {\n\t\t\tDataTable.DateTime = module;\n\t\t}\n\t\telse if (type === 'luxon' || (module && module.FixedOffsetZone)) {\n\t\t\t__luxon = module;\n\t\t}\n\t\telse if (type === 'moment' || (module && module.isMoment)) {\n\t\t\t__moment = module;\n\t\t}\n\t\telse if (type === 'bootstrap' || (module && module.Modal && module.Modal.NAME === 'modal'))\n\t\t{\n\t\t\t// This is currently for BS5 only. BS3/4 attach to jQuery, so no need to use `.use()`\n\t\t\t__bootstrap = module;\n\t\t}\n\t\telse if (type === 'foundation' || (module && module.Reveal)) {\n\t\t\t__foundation = module;\n\t\t}\n\t}\n\t\n\t/**\n\t * CommonJS factory function pass through. This will check if the arguments\n\t * given are a window object or a jQuery object. If so they are set\n\t * accordingly.\n\t * @param {*} root Window\n\t * @param {*} jq jQUery\n\t * @returns {boolean} Indicator\n\t */\n\tDataTable.factory = function (root, jq) {\n\t\tvar is = false;\n\t\n\t\t// Test if the first parameter is a window object\n\t\tif (root && root.document) {\n\t\t\twindow = root;\n\t\t\tdocument = root.document;\n\t\t}\n\t\n\t\t// Test if the second parameter is a jQuery object\n\t\tif (jq && jq.fn && jq.fn.jquery) {\n\t\t\t$ = jq;\n\t\t\tis = true;\n\t\t}\n\t\n\t\treturn is;\n\t}\n\t\n\t/**\n\t * Provide a common method for plug-ins to check the version of DataTables being\n\t * used, in order to ensure compatibility.\n\t *\n\t *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n\t *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n\t *  @param {string} [version2=current DataTables version] As above, but optional.\n\t *   If not given the current DataTables version will be used.\n\t *  @returns {boolean} true if this version of DataTables is greater or equal to\n\t *    the required version, or false if this version of DataTales is not\n\t *    suitable\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n\t */\n\tDataTable.versionCheck = function( version, version2 )\n\t{\n\t\tvar aThis = version2 ?\n\t\t\tversion2.split('.') :\n\t\t\tDataTable.version.split('.');\n\t\tvar aThat = version.split('.');\n\t\tvar iThis, iThat;\n\t\n\t\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\n\t\t\tiThis = parseInt( aThis[i], 10 ) || 0;\n\t\t\tiThat = parseInt( aThat[i], 10 ) || 0;\n\t\n\t\t\t// Parts are the same, keep comparing\n\t\t\tif (iThis === iThat) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\t// Parts are different, return immediately\n\t\t\treturn iThis > iThat;\n\t\t}\n\t\n\t\treturn true;\n\t};\n\t\n\t\n\t/**\n\t * Check if a `<table>` node is a DataTable table already or not.\n\t *\n\t *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n\t *      selector for the table to test. Note that if more than more than one\n\t *      table is passed on, only the first will be checked\n\t *  @returns {boolean} true the table given is a DataTable, or false otherwise\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n\t *      $('#example').dataTable();\n\t *    }\n\t */\n\tDataTable.isDataTable = function ( table )\n\t{\n\t\tvar t = $(table).get(0);\n\t\tvar is = false;\n\t\n\t\tif ( table instanceof DataTable.Api ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\t$.each( DataTable.settings, function (i, o) {\n\t\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n\t\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\t\n\t\t\tif ( o.nTable === t || head === t || foot === t ) {\n\t\t\t\tis = true;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn is;\n\t};\n\t\n\t\n\t/**\n\t * Get all DataTable tables that have been initialised - optionally you can\n\t * select to get only currently visible tables.\n\t *\n\t *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n\t *    or visible tables only.\n\t *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n\t *    DataTables\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    $.each( $.fn.dataTable.tables(true), function () {\n\t *      $(table).DataTable().columns.adjust();\n\t *    } );\n\t */\n\tDataTable.tables = function ( visible )\n\t{\n\t\tvar api = false;\n\t\n\t\tif ( $.isPlainObject( visible ) ) {\n\t\t\tapi = visible.api;\n\t\t\tvisible = visible.visible;\n\t\t}\n\t\n\t\tvar a = DataTable.settings\n\t\t\t.filter( function (o) {\n\t\t\t\treturn !visible || (visible && $(o.nTable).is(':visible')) \n\t\t\t\t\t? true\n\t\t\t\t\t: false;\n\t\t\t} )\n\t\t\t.map( function (o) {\n\t\t\t\treturn o.nTable;\n\t\t\t});\n\t\n\t\treturn api ?\n\t\t\tnew _Api( a ) :\n\t\t\ta;\n\t};\n\t\n\t\n\t/**\n\t * Convert from camel case parameters to Hungarian notation. This is made public\n\t * for the extensions to provide the same ability as DataTables core to accept\n\t * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n\t * parameters.\n\t *\n\t *  @param {object} src The model object which holds all parameters that can be\n\t *    mapped.\n\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t *  @param {boolean} force When set to `true`, properties which already have a\n\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t *    won't be.\n\t */\n\tDataTable.camelToHungarian = _fnCamelToHungarian;\n\t\n\t\n\t\n\t/**\n\t *\n\t */\n\t_api_register( '$()', function ( selector, opts ) {\n\t\tvar\n\t\t\trows   = this.rows( opts ).nodes(), // Get all rows\n\t\t\tjqRows = $(rows);\n\t\n\t\treturn $( [].concat(\n\t\t\tjqRows.filter( selector ).toArray(),\n\t\t\tjqRows.find( selector ).toArray()\n\t\t) );\n\t} );\n\t\n\t\n\t// jQuery functions to operate on the tables\n\t$.each( [ 'on', 'one', 'off' ], function (i, key) {\n\t\t_api_register( key+'()', function ( /* event, handler */ ) {\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\n\t\t\t// Add the `dt` namespace automatically if it isn't already present\n\t\t\targs[0] = args[0].split( /\\s/ ).map( function ( e ) {\n\t\t\t\treturn ! e.match(/\\.dt\\b/) ?\n\t\t\t\t\te+'.dt' :\n\t\t\t\t\te;\n\t\t\t\t} ).join( ' ' );\n\t\n\t\t\tvar inst = $( this.tables().nodes() );\n\t\t\tinst[key].apply( inst, args );\n\t\t\treturn this;\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'clear()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnClearTable( settings );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'error()', function (msg) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnLog( settings, 0, msg );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'settings()', function () {\n\t\treturn new _Api( this.context, this.context );\n\t} );\n\t\n\t\n\t_api_register( 'init()', function () {\n\t\tvar ctx = this.context;\n\t\treturn ctx.length ? ctx[0].oInit : null;\n\t} );\n\t\n\t\n\t_api_register( 'data()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\treturn _pluck( settings.aoData, '_aData' );\n\t\t} ).flatten();\n\t} );\n\t\n\t\n\t_api_register( 'trigger()', function ( name, args, bubbles ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\treturn _fnCallbackFire( settings, null, name, args, bubbles );\n\t\t} ).flatten();\n\t} );\n\t\n\t\n\t_api_register( 'ready()', function ( fn ) {\n\t\tvar ctx = this.context;\n\t\n\t\t// Get status of first table\n\t\tif (! fn) {\n\t\t\treturn ctx.length\n\t\t\t\t? (ctx[0]._bInitComplete || false)\n\t\t\t\t: null;\n\t\t}\n\t\n\t\t// Function to run either once the table becomes ready or\n\t\t// immediately if it is already ready.\n\t\treturn this.tables().every(function () {\n\t\t\tvar api = this;\n\t\n\t\t\tif (this.context[0]._bInitComplete) {\n\t\t\t\tfn.call(api);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.on('init.dt.DT', function () {\n\t\t\t\t\tfn.call(api);\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'destroy()', function ( remove ) {\n\t\tremove = remove || false;\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tvar classes   = settings.oClasses;\n\t\t\tvar table     = settings.nTable;\n\t\t\tvar tbody     = settings.nTBody;\n\t\t\tvar thead     = settings.nTHead;\n\t\t\tvar tfoot     = settings.nTFoot;\n\t\t\tvar jqTable   = $(table);\n\t\t\tvar jqTbody   = $(tbody);\n\t\t\tvar jqWrapper = $(settings.nTableWrapper);\n\t\t\tvar rows      = settings.aoData.map( function (r) { return r ? r.nTr : null; } );\n\t\t\tvar orderClasses = classes.order;\n\t\n\t\t\t// Flag to note that the table is currently being destroyed - no action\n\t\t\t// should be taken\n\t\t\tsettings.bDestroying = true;\n\t\n\t\t\t// Fire off the destroy callbacks for plug-ins etc\n\t\t\t_fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings], true );\n\t\n\t\t\t// If not being removed from the document, make all columns visible\n\t\t\tif ( ! remove ) {\n\t\t\t\tnew _Api( settings ).columns().visible( true );\n\t\t\t}\n\t\n\t\t\t// Container width change listener\n\t\t\tif (settings.resizeObserver) {\n\t\t\t\tsettings.resizeObserver.disconnect();\n\t\t\t}\n\t\n\t\t\t// Blitz all `DT` namespaced events (these are internal events, the\n\t\t\t// lowercase, `dt` events are user subscribed and they are responsible\n\t\t\t// for removing them\n\t\t\tjqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n\t\t\t$(window).off('.DT-'+settings.sInstance);\n\t\n\t\t\t// When scrolling we had to break the table up - restore it\n\t\t\tif ( table != thead.parentNode ) {\n\t\t\t\tjqTable.children('thead').detach();\n\t\t\t\tjqTable.append( thead );\n\t\t\t}\n\t\n\t\t\tif ( tfoot && table != tfoot.parentNode ) {\n\t\t\t\tjqTable.children('tfoot').detach();\n\t\t\t\tjqTable.append( tfoot );\n\t\t\t}\n\t\n\t\t\t// Clean up the header\n\t\t\t$(thead).find('span.dt-column-order').remove();\n\t\t\t$(thead).find('span.dt-column-title').each(function () {\n\t\t\t\tvar title = $(this).html();\n\t\t\t\t$(this).parent().append(title);\n\t\t\t\t$(this).remove();\n\t\t\t});\n\t\n\t\t\tsettings.colgroup.remove();\n\t\n\t\t\tsettings.aaSorting = [];\n\t\t\tsettings.aaSortingFixed = [];\n\t\t\t_fnSortingClasses( settings );\n\t\n\t\t\t$(jqTable).find('th, td').removeClass(\n\t\t\t\t$.map(DataTable.ext.type.className, function (v) {\n\t\t\t\t\treturn v;\n\t\t\t\t}).join(' ')\n\t\t\t);\n\t\n\t\t\t$('th, td', thead)\n\t\t\t\t.removeClass(\n\t\t\t\t\torderClasses.none + ' ' +\n\t\t\t\t\torderClasses.canAsc + ' ' +\n\t\t\t\t\torderClasses.canDesc + ' ' +\n\t\t\t\t\torderClasses.isAsc + ' ' +\n\t\t\t\t\torderClasses.isDesc\n\t\t\t\t)\n\t\t\t\t.css('width', '')\n\t\t\t\t.removeAttr('data-dt-column')\n\t\t\t\t.removeAttr('aria-sort');\n\t\n\t\t\t// Add the TR elements back into the table in their original order\n\t\t\tjqTbody.children().detach();\n\t\t\tjqTbody.append( rows );\n\t\n\t\t\tvar orig = settings.nTableWrapper.parentNode;\n\t\t\tvar insertBefore = settings.nTableWrapper.nextSibling;\n\t\n\t\t\t// Remove the DataTables generated nodes, events and classes\n\t\t\tvar removedMethod = remove ? 'remove' : 'detach';\n\t\t\tjqTable[ removedMethod ]();\n\t\t\tjqWrapper[ removedMethod ]();\n\t\n\t\t\t// If we need to reattach the table to the document\n\t\t\tif ( ! remove && orig ) {\n\t\t\t\t// insertBefore acts like appendChild if !arg[1]\n\t\t\t\torig.insertBefore( table, insertBefore );\n\t\n\t\t\t\t// Restore the width of the original table - was read from the style property,\n\t\t\t\t// so we can restore directly to that\n\t\t\t\tjqTable\n\t\t\t\t\t.css( 'width', settings.sDestroyWidth )\n\t\t\t\t\t.removeClass( classes.table );\n\t\t\t}\n\t\n\t\t\t/* Remove the settings object from the settings array */\n\t\t\tvar idx = DataTable.settings.indexOf(settings);\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tDataTable.settings.splice( idx, 1 );\n\t\t\t}\n\t\t} );\n\t} );\n\t\n\t\n\t// Add the `every()` method for rows, columns and cells in a compact form\n\t$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\n\t\t_api_register( type+'s().every()', function ( fn ) {\n\t\t\tvar opts = this.selector.opts;\n\t\t\tvar api = this;\n\t\t\tvar inst;\n\t\t\tvar counter = 0;\n\t\n\t\t\treturn this.iterator( 'every', function ( settings, selectedIdx, tableIdx ) {\n\t\t\t\tinst = api[ type ](selectedIdx, opts);\n\t\n\t\t\t\tif (type === 'cell') {\n\t\t\t\t\tfn.call(inst, inst[0][0].row, inst[0][0].column, tableIdx, counter);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfn.call(inst, selectedIdx, tableIdx, counter);\n\t\t\t\t}\n\t\n\t\t\t\tcounter++;\n\t\t\t} );\n\t\t} );\n\t} );\n\t\n\t\n\t// i18n method for extensions to be able to use the language object from the\n\t// DataTable\n\t_api_register( 'i18n()', function ( token, def, plural ) {\n\t\tvar ctx = this.context[0];\n\t\tvar resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\n\t\n\t\tif ( resolved === undefined ) {\n\t\t\tresolved = def;\n\t\t}\n\t\n\t\tif ( $.isPlainObject( resolved ) ) {\n\t\t\tresolved = plural !== undefined && resolved[ plural ] !== undefined ?\n\t\t\t\tresolved[ plural ] :\n\t\t\t\tresolved._;\n\t\t}\n\t\n\t\treturn typeof resolved === 'string'\n\t\t\t? resolved.replace( '%d', plural ) // nb: plural might be undefined,\n\t\t\t: resolved;\n\t} );\n\t\n\t/**\n\t * Version string for plug-ins to check compatibility. Allowed format is\n\t * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n\t * only for non-release builds. See https://semver.org/ for more information.\n\t *  @member\n\t *  @type string\n\t *  @default Version number\n\t */\n\tDataTable.version = \"2.2.2\";\n\t\n\t/**\n\t * Private data store, containing all of the settings objects that are\n\t * created for the tables on a given page.\n\t *\n\t * Note that the `DataTable.settings` object is aliased to\n\t * `jQuery.fn.dataTableExt` through which it may be accessed and\n\t * manipulated, or `jQuery.fn.dataTable.settings`.\n\t *  @member\n\t *  @type array\n\t *  @default []\n\t *  @private\n\t */\n\tDataTable.settings = [];\n\t\n\t/**\n\t * Object models container, for the various models that DataTables has\n\t * available to it. These models define the objects that are used to hold\n\t * the active state and configuration of the table.\n\t *  @namespace\n\t */\n\tDataTable.models = {};\n\t\n\t\n\t\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * search information for the global filter and individual column filters.\n\t *  @namespace\n\t */\n\tDataTable.models.oSearch = {\n\t\t/**\n\t\t * Flag to indicate if the filtering should be case insensitive or not\n\t\t */\n\t\t\"caseInsensitive\": true,\n\t\n\t\t/**\n\t\t * Applied search term\n\t\t */\n\t\t\"search\": \"\",\n\t\n\t\t/**\n\t\t * Flag to indicate if the search term should be interpreted as a\n\t\t * regular expression (true) or not (false) and therefore and special\n\t\t * regex characters escaped.\n\t\t */\n\t\t\"regex\": false,\n\t\n\t\t/**\n\t\t * Flag to indicate if DataTables is to use its smart filtering or not.\n\t\t */\n\t\t\"smart\": true,\n\t\n\t\t/**\n\t\t * Flag to indicate if DataTables should only trigger a search when\n\t\t * the return key is pressed.\n\t\t */\n\t\t\"return\": false\n\t};\n\t\n\t\n\t\n\t\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * each individual row. This is the object format used for the settings\n\t * aoData array.\n\t *  @namespace\n\t */\n\tDataTable.models.oRow = {\n\t\t/**\n\t\t * TR element for the row\n\t\t */\n\t\t\"nTr\": null,\n\t\n\t\t/**\n\t\t * Array of TD elements for each row. This is null until the row has been\n\t\t * created.\n\t\t */\n\t\t\"anCells\": null,\n\t\n\t\t/**\n\t\t * Data object from the original data source for the row. This is either\n\t\t * an array if using the traditional form of DataTables, or an object if\n\t\t * using mData options. The exact type will depend on the passed in\n\t\t * data from the data source, or will be an array if using DOM a data\n\t\t * source.\n\t\t */\n\t\t\"_aData\": [],\n\t\n\t\t/**\n\t\t * Sorting data cache - this array is ostensibly the same length as the\n\t\t * number of columns (although each index is generated only as it is\n\t\t * needed), and holds the data that is used for sorting each column in the\n\t\t * row. We do this cache generation at the start of the sort in order that\n\t\t * the formatting of the sort data need be done only once for each cell\n\t\t * per sort. This array should not be read from or written to by anything\n\t\t * other than the master sorting methods.\n\t\t */\n\t\t\"_aSortData\": null,\n\t\n\t\t/**\n\t\t * Per cell filtering data cache. As per the sort data cache, used to\n\t\t * increase the performance of the filtering in DataTables\n\t\t */\n\t\t\"_aFilterData\": null,\n\t\n\t\t/**\n\t\t * Filtering data cache. This is the same as the cell filtering cache, but\n\t\t * in this case a string rather than an array. This is easily computed with\n\t\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\n\t\t * needed on every search (memory traded for performance)\n\t\t */\n\t\t\"_sFilterRow\": null,\n\t\n\t\t/**\n\t\t * Denote if the original data source was from the DOM, or the data source\n\t\t * object. This is used for invalidating data, so DataTables can\n\t\t * automatically read data from the original source, unless uninstructed\n\t\t * otherwise.\n\t\t */\n\t\t\"src\": null,\n\t\n\t\t/**\n\t\t * Index in the aoData array. This saves an indexOf lookup when we have the\n\t\t * object, but want to know the index\n\t\t */\n\t\t\"idx\": -1,\n\t\n\t\t/**\n\t\t * Cached display value\n\t\t */\n\t\tdisplayData: null\n\t};\n\t\n\t\n\t/**\n\t * Template object for the column information object in DataTables. This object\n\t * is held in the settings aoColumns array and contains all the information that\n\t * DataTables needs about each individual column.\n\t *\n\t * Note that this object is related to {@link DataTable.defaults.column}\n\t * but this one is the internal data store for DataTables's cache of columns.\n\t * It should NOT be manipulated outside of DataTables. Any configuration should\n\t * be done through the initialisation options.\n\t *  @namespace\n\t */\n\tDataTable.models.oColumn = {\n\t\t/**\n\t\t * Column index.\n\t\t */\n\t\t\"idx\": null,\n\t\n\t\t/**\n\t\t * A list of the columns that sorting should occur on when this column\n\t\t * is sorted. That this property is an array allows multi-column sorting\n\t\t * to be defined for a column (for example first name / last name columns\n\t\t * would benefit from this). The values are integers pointing to the\n\t\t * columns to be sorted on (typically it will be a single integer pointing\n\t\t * at itself, but that doesn't need to be the case).\n\t\t */\n\t\t\"aDataSort\": null,\n\t\n\t\t/**\n\t\t * Define the sorting directions that are applied to the column, in sequence\n\t\t * as the column is repeatedly sorted upon - i.e. the first value is used\n\t\t * as the sorting direction when the column if first sorted (clicked on).\n\t\t * Sort it again (click again) and it will move on to the next index.\n\t\t * Repeat until loop.\n\t\t */\n\t\t\"asSorting\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is searchable, and thus should be included\n\t\t * in the filtering or not.\n\t\t */\n\t\t\"bSearchable\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is sortable or not.\n\t\t */\n\t\t\"bSortable\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is currently visible in the table or not\n\t\t */\n\t\t\"bVisible\": null,\n\t\n\t\t/**\n\t\t * Store for manual type assignment using the `column.type` option. This\n\t\t * is held in store so we can manipulate the column's `sType` property.\n\t\t */\n\t\t\"_sManualType\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if HTML5 data attributes should be used as the data\n\t\t * source for filtering or sorting. True is either are.\n\t\t */\n\t\t\"_bAttrSrc\": false,\n\t\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\t\n\t\t/**\n\t\t * Function to get data from a cell in a column. You should <b>never</b>\n\t\t * access data directly through _aData internally in DataTables - always use\n\t\t * the method attached to this property. It allows mData to function as\n\t\t * required. This function is automatically assigned by the column\n\t\t * initialisation method\n\t\t */\n\t\t\"fnGetData\": null,\n\t\n\t\t/**\n\t\t * Function to set data for a cell in the column. You should <b>never</b>\n\t\t * set the data directly to _aData internally in DataTables - always use\n\t\t * this method. It allows mData to function as required. This function\n\t\t * is automatically assigned by the column initialisation method\n\t\t */\n\t\t\"fnSetData\": null,\n\t\n\t\t/**\n\t\t * Property to read the value for the cells in the column from the data\n\t\t * source array / object. If null, then the default content is used, if a\n\t\t * function is given then the return from the function is used.\n\t\t */\n\t\t\"mData\": null,\n\t\n\t\t/**\n\t\t * Partner property to mData which is used (only when defined) to get\n\t\t * the data - i.e. it is basically the same as mData, but without the\n\t\t * 'set' option, and also the data fed to it is the result from mData.\n\t\t * This is the rendering method to match the data method of mData.\n\t\t */\n\t\t\"mRender\": null,\n\t\n\t\t/**\n\t\t * The class to apply to all TD elements in the table's TBODY for the column\n\t\t */\n\t\t\"sClass\": null,\n\t\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t */\n\t\t\"sContentPadding\": null,\n\t\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because mData\n\t\t * is set to null, or because the data source itself is null).\n\t\t */\n\t\t\"sDefaultContent\": null,\n\t\n\t\t/**\n\t\t * Name for the column, allowing reference to the column by name as well as\n\t\t * by index (needs a lookup to work by name).\n\t\t */\n\t\t\"sName\": null,\n\t\n\t\t/**\n\t\t * Custom sorting data type - defines which of the available plug-ins in\n\t\t * afnSortData the custom sorting will use - if any is defined.\n\t\t */\n\t\t\"sSortDataType\": 'std',\n\t\n\t\t/**\n\t\t * Class to be applied to the header element when sorting on this column\n\t\t */\n\t\t\"sSortingClass\": null,\n\t\n\t\t/**\n\t\t * Title of the column - what is seen in the TH element (nTh).\n\t\t */\n\t\t\"sTitle\": null,\n\t\n\t\t/**\n\t\t * Column sorting and filtering type\n\t\t */\n\t\t\"sType\": null,\n\t\n\t\t/**\n\t\t * Width of the column\n\t\t */\n\t\t\"sWidth\": null,\n\t\n\t\t/**\n\t\t * Width of the column when it was first \"encountered\"\n\t\t */\n\t\t\"sWidthOrig\": null,\n\t\n\t\t/** Cached string which is the longest in the column */\n\t\tmaxLenString: null,\n\t\n\t\t/**\n\t\t * Store for named searches\n\t\t */\n\t\tsearchFixed: null\n\t};\n\t\n\t\n\t/*\n\t * Developer note: The properties of the object below are given in Hungarian\n\t * notation, that was used as the interface for DataTables prior to v1.10, however\n\t * from v1.10 onwards the primary interface is camel case. In order to avoid\n\t * breaking backwards compatibility utterly with this change, the Hungarian\n\t * version is still, internally the primary interface, but is is not documented\n\t * - hence the @name tags in each doc comment. This allows a Javascript function\n\t * to create a map from Hungarian notation to camel case (going the other direction\n\t * would require each property to be listed, which would add around 3K to the size\n\t * of DataTables, while this method is about a 0.5K hit).\n\t *\n\t * Ultimately this does pave the way for Hungarian notation to be dropped\n\t * completely, but that is a massive amount of work and will break current\n\t * installs (therefore is on-hold until v2).\n\t */\n\t\n\t/**\n\t * Initialisation options that can be given to DataTables at initialisation\n\t * time.\n\t *  @namespace\n\t */\n\tDataTable.defaults = {\n\t\t/**\n\t\t * An array of data to use for the table, passed in at initialisation which\n\t\t * will be used in preference to any data which is already in the DOM. This is\n\t\t * particularly useful for constructing tables purely in Javascript, for\n\t\t * example with a custom Ajax call.\n\t\t */\n\t\t\"aaData\": null,\n\t\n\t\n\t\t/**\n\t\t * If ordering is enabled, then DataTables will perform a first pass sort on\n\t\t * initialisation. You can define which column(s) the sort is performed\n\t\t * upon, and the sorting direction, with this variable. The `sorting` array\n\t\t * should contain an array for each column to be sorted initially containing\n\t\t * the column's index and a direction string ('asc' or 'desc').\n\t\t */\n\t\t\"aaSorting\": [[0,'asc']],\n\t\n\t\n\t\t/**\n\t\t * This parameter is basically identical to the `sorting` parameter, but\n\t\t * cannot be overridden by user interaction with the table. What this means\n\t\t * is that you could have a column (visible or hidden) which the sorting\n\t\t * will always be forced on first - any sorting after that (from the user)\n\t\t * will then be performed as required. This can be useful for grouping rows\n\t\t * together.\n\t\t */\n\t\t\"aaSortingFixed\": [],\n\t\n\t\n\t\t/**\n\t\t * DataTables can be instructed to load data to display in the table from a\n\t\t * Ajax source. This option defines how that Ajax call is made and where to.\n\t\t *\n\t\t * The `ajax` property has three different modes of operation, depending on\n\t\t * how it is defined. These are:\n\t\t *\n\t\t * * `string` - Set the URL from where the data should be loaded from.\n\t\t * * `object` - Define properties for `jQuery.ajax`.\n\t\t * * `function` - Custom data get function\n\t\t *\n\t\t * `string`\n\t\t * --------\n\t\t *\n\t\t * As a string, the `ajax` property simply defines the URL from which\n\t\t * DataTables will load data.\n\t\t *\n\t\t * `object`\n\t\t * --------\n\t\t *\n\t\t * As an object, the parameters in the object are passed to\n\t\t * [jQuery.ajax](https://api.jquery.com/jQuery.ajax/) allowing fine control\n\t\t * of the Ajax request. DataTables has a number of default parameters which\n\t\t * you can override using this option. Please refer to the jQuery\n\t\t * documentation for a full description of the options available, although\n\t\t * the following parameters provide additional options in DataTables or\n\t\t * require special consideration:\n\t\t *\n\t\t * * `data` - As with jQuery, `data` can be provided as an object, but it\n\t\t *   can also be used as a function to manipulate the data DataTables sends\n\t\t *   to the server. The function takes a single parameter, an object of\n\t\t *   parameters with the values that DataTables has readied for sending. An\n\t\t *   object may be returned which will be merged into the DataTables\n\t\t *   defaults, or you can add the items to the object that was passed in and\n\t\t *   not return anything from the function. This supersedes `fnServerParams`\n\t\t *   from DataTables 1.9-.\n\t\t *\n\t\t * * `dataSrc` - By default DataTables will look for the property `data` (or\n\t\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n\t\t *   from an Ajax source or for server-side processing - this parameter\n\t\t *   allows that property to be changed. You can use Javascript dotted\n\t\t *   object notation to get a data source for multiple levels of nesting, or\n\t\t *   it my be used as a function. As a function it takes a single parameter,\n\t\t *   the JSON returned from the server, which can be manipulated as\n\t\t *   required, with the returned value being that used by DataTables as the\n\t\t *   data source for the table.\n\t\t *\n\t\t * * `success` - Should not be overridden it is used internally in\n\t\t *   DataTables. To manipulate / transform the data returned by the server\n\t\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n\t\t *\n\t\t * `function`\n\t\t * ----------\n\t\t *\n\t\t * As a function, making the Ajax call is left up to yourself allowing\n\t\t * complete control of the Ajax request. Indeed, if desired, a method other\n\t\t * than Ajax could be used to obtain the required data, such as Web storage\n\t\t * or an AIR database.\n\t\t *\n\t\t * The function is given four parameters and no return is required. The\n\t\t * parameters are:\n\t\t *\n\t\t * 1. _object_ - Data to send to the server\n\t\t * 2. _function_ - Callback function that must be executed when the required\n\t\t *    data has been obtained. That data should be passed into the callback\n\t\t *    as the only parameter\n\t\t * 3. _object_ - DataTables settings object for the table\n\t\t */\n\t\t\"ajax\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter allows you to readily specify the entries in the length drop\n\t\t * down menu that DataTables shows when pagination is enabled. It can be\n\t\t * either a 1D array of options which will be used for both the displayed\n\t\t * option and the value, or a 2D array which will use the array in the first\n\t\t * position as the value, and the array in the second position as the\n\t\t * displayed options (useful for language strings such as 'All').\n\t\t *\n\t\t * Note that the `pageLength` property will be automatically set to the\n\t\t * first value given in this array, unless `pageLength` is also provided.\n\t\t */\n\t\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\n\t\n\t\n\t\t/**\n\t\t * The `columns` option in the initialisation parameter allows you to define\n\t\t * details about the way individual columns behave. For a full list of\n\t\t * column options that can be set, please see\n\t\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\n\t\t * define your columns, you must have an entry in the array for every single\n\t\t * column that you have in your table (these can be null if you don't which\n\t\t * to specify any options).\n\t\t */\n\t\t\"aoColumns\": null,\n\t\n\t\t/**\n\t\t * Very similar to `columns`, `columnDefs` allows you to target a specific\n\t\t * column, multiple columns, or all columns, using the `targets` property of\n\t\t * each object in the array. This allows great flexibility when creating\n\t\t * tables, as the `columnDefs` arrays can be of any length, targeting the\n\t\t * columns you specifically want. `columnDefs` may use any of the column\n\t\t * options available: {@link DataTable.defaults.column}, but it _must_\n\t\t * have `targets` defined in each object in the array. Values in the `targets`\n\t\t * array may be:\n\t\t *   <ul>\n\t\t *     <li>a string - class name will be matched on the TH for the column</li>\n\t\t *     <li>0 or a positive integer - column index counting from the left</li>\n\t\t *     <li>a negative integer - column index counting from the right</li>\n\t\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n\t\t *   </ul>\n\t\t */\n\t\t\"aoColumnDefs\": null,\n\t\n\t\n\t\t/**\n\t\t * Basically the same as `search`, this parameter defines the individual column\n\t\t * filtering state at initialisation time. The array must be of the same size\n\t\t * as the number of columns, and each element be an object with the parameters\n\t\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\n\t\t * accepted and the default will be used.\n\t\t */\n\t\t\"aoSearchCols\": [],\n\t\n\t\n\t\t/**\n\t\t * Enable or disable automatic column width calculation. This can be disabled\n\t\t * as an optimisation (it takes some time to calculate the widths) if the\n\t\t * tables widths are passed in using `columns`.\n\t\t */\n\t\t\"bAutoWidth\": true,\n\t\n\t\n\t\t/**\n\t\t * Deferred rendering can provide DataTables with a huge speed boost when you\n\t\t * are using an Ajax or JS data source for the table. This option, when set to\n\t\t * true, will cause DataTables to defer the creation of the table elements for\n\t\t * each row until they are needed for a draw - saving a significant amount of\n\t\t * time.\n\t\t */\n\t\t\"bDeferRender\": true,\n\t\n\t\n\t\t/**\n\t\t * Replace a DataTable which matches the given selector and replace it with\n\t\t * one which has the properties of the new initialisation object passed. If no\n\t\t * table matches the selector, then the new DataTable will be constructed as\n\t\t * per normal.\n\t\t */\n\t\t\"bDestroy\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n\t\t * that it allows the end user to input multiple words (space separated) and\n\t\t * will match a row containing those words, even if not in the order that was\n\t\t * specified (this allow matching across multiple columns). Note that if you\n\t\t * wish to use filtering in DataTables this must remain 'true' - to remove the\n\t\t * default filtering input box and retain filtering abilities, please use\n\t\t * {@link DataTable.defaults.dom}.\n\t\t */\n\t\t\"bFilter\": true,\n\t\n\t\t/**\n\t\t * Used only for compatiblity with DT1\n\t\t * @deprecated\n\t\t */\n\t\t\"bInfo\": true,\n\t\n\t\t/**\n\t\t * Used only for compatiblity with DT1\n\t\t * @deprecated\n\t\t */\n\t\t\"bLengthChange\": true,\n\t\n\t\t/**\n\t\t * Enable or disable pagination.\n\t\t */\n\t\t\"bPaginate\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the display of a 'processing' indicator when the table is\n\t\t * being processed (e.g. a sort). This is particularly useful for tables with\n\t\t * large amounts of data where it can take a noticeable amount of time to sort\n\t\t * the entries.\n\t\t */\n\t\t\"bProcessing\": false,\n\t\n\t\n\t\t/**\n\t\t * Retrieve the DataTables object for the given selector. Note that if the\n\t\t * table has already been initialised, this parameter will cause DataTables\n\t\t * to simply return the object that has already been set up - it will not take\n\t\t * account of any changes you might have made to the initialisation object\n\t\t * passed to DataTables (setting this parameter to true is an acknowledgement\n\t\t * that you understand this). `destroy` can be used to reinitialise a table if\n\t\t * you need.\n\t\t */\n\t\t\"bRetrieve\": false,\n\t\n\t\n\t\t/**\n\t\t * When vertical (y) scrolling is enabled, DataTables will force the height of\n\t\t * the table's viewport to the given height at all times (useful for layout).\n\t\t * However, this can look odd when filtering data down to a small data set,\n\t\t * and the footer is left \"floating\" further down. This parameter (when\n\t\t * enabled) will cause DataTables to collapse the table's viewport down when\n\t\t * the result set will fit within the given Y height.\n\t\t */\n\t\t\"bScrollCollapse\": false,\n\t\n\t\n\t\t/**\n\t\t * Configure DataTables to use server-side processing. Note that the\n\t\t * `ajax` parameter must also be given in order to give DataTables a\n\t\t * source to obtain the required data for each draw.\n\t\t */\n\t\t\"bServerSide\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable sorting of columns. Sorting of individual columns can be\n\t\t * disabled by the `sortable` option for each column.\n\t\t */\n\t\t\"bSort\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or display DataTables' ability to sort multiple columns at the\n\t\t * same time (activated by shift-click by the user).\n\t\t */\n\t\t\"bSortMulti\": true,\n\t\n\t\n\t\t/**\n\t\t * Allows control over whether DataTables should use the top (true) unique\n\t\t * cell that is found for a single column, or the bottom (false - default).\n\t\t * This is useful when using complex headers.\n\t\t */\n\t\t\"bSortCellsTop\": null,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n\t\t * `sorting\\_3` to the columns which are currently being sorted on. This is\n\t\t * presented as a feature switch as it can increase processing time (while\n\t\t * classes are removed and added) so for large data sets you might want to\n\t\t * turn this off.\n\t\t */\n\t\t\"bSortClasses\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n\t\t * used to save table display information such as pagination information,\n\t\t * display length, filtering and sorting. As such when the end user reloads\n\t\t * the page the display display will match what thy had previously set up.\n\t\t */\n\t\t\"bStateSave\": false,\n\t\n\t\n\t\t/**\n\t\t * This function is called when a TR element is created (and all TD child\n\t\t * elements have been inserted), or registered if using a DOM source, allowing\n\t\t * manipulation of the TR element (adding classes etc).\n\t\t */\n\t\t\"fnCreatedRow\": null,\n\t\n\t\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify any aspect you want about the created DOM.\n\t\t */\n\t\t\"fnDrawCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * Identical to fnHeaderCallback() but for the table footer this function\n\t\t * allows you to modify the table footer on every 'draw' event.\n\t\t */\n\t\t\"fnFooterCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * When rendering large numbers in the information element for the table\n\t\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n\t\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\n\t\t * rendered as \"1,000,000\") to help readability for the end user. This\n\t\t * function will override the default method DataTables uses.\n\t\t */\n\t\t\"fnFormatNumber\": function ( toFormat ) {\n\t\t\treturn toFormat.toString().replace(\n\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\n\t\t\t\tthis.oLanguage.sThousands\n\t\t\t);\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify the header row. This can be used to calculate and\n\t\t * display useful information about the table.\n\t\t */\n\t\t\"fnHeaderCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * The information element can be used to convey information about the current\n\t\t * state of the table. Although the internationalisation options presented by\n\t\t * DataTables are quite capable of dealing with most customisations, there may\n\t\t * be times where you wish to customise the string further. This callback\n\t\t * allows you to do exactly that.\n\t\t */\n\t\t\"fnInfoCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * Called when the table has been initialised. Normally DataTables will\n\t\t * initialise sequentially and there will be no need for this function,\n\t\t * however, this does not hold true when using external language information\n\t\t * since that is obtained using an async XHR call.\n\t\t */\n\t\t\"fnInitComplete\": null,\n\t\n\t\n\t\t/**\n\t\t * Called at the very start of each table draw and can be used to cancel the\n\t\t * draw by returning false, any other return (including undefined) results in\n\t\t * the full draw occurring).\n\t\t */\n\t\t\"fnPreDrawCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * This function allows you to 'post process' each row after it have been\n\t\t * generated for each table draw, but before it is rendered on screen. This\n\t\t * function might be used for setting the row class name etc.\n\t\t */\n\t\t\"fnRowCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * Load the table state. With this function you can define from where, and how, the\n\t\t * state of a table is loaded. By default DataTables will load from `localStorage`\n\t\t * but you might wish to use a server-side database or cookies.\n\t\t */\n\t\t\"fnStateLoadCallback\": function ( settings ) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(\n\t\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n\t\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} catch (e) {\n\t\t\t\treturn {};\n\t\t\t}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Callback which allows modification of the saved state prior to loading that state.\n\t\t * This callback is called when the table is loading state from the stored data, but\n\t\t * prior to the settings object being modified by the saved state. Note that for\n\t\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n\t\t * a plug-in.\n\t\t */\n\t\t\"fnStateLoadParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Callback that is called when the state has been loaded from the state saving method\n\t\t * and the DataTables settings object has been modified as a result of the loaded state.\n\t\t */\n\t\t\"fnStateLoaded\": null,\n\t\n\t\n\t\t/**\n\t\t * Save the table state. This function allows you to define where and how the state\n\t\t * information for the table is stored By default DataTables will use `localStorage`\n\t\t * but you might wish to use a server-side database or cookies.\n\t\t */\n\t\t\"fnStateSaveCallback\": function ( settings, data ) {\n\t\t\ttry {\n\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname,\n\t\t\t\t\tJSON.stringify( data )\n\t\t\t\t);\n\t\t\t} catch (e) {\n\t\t\t\t// noop\n\t\t\t}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Callback which allows modification of the state to be saved. Called when the table\n\t\t * has changed state a new state save is required. This method allows modification of\n\t\t * the state saving object prior to actually doing the save, including addition or\n\t\t * other state properties or modification. Note that for plug-in authors, you should\n\t\t * use the `stateSaveParams` event to save parameters for a plug-in.\n\t\t */\n\t\t\"fnStateSaveParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Duration for which the saved state information is considered valid. After this period\n\t\t * has elapsed the state will be returned to the default.\n\t\t * Value is given in seconds.\n\t\t */\n\t\t\"iStateDuration\": 7200,\n\t\n\t\n\t\t/**\n\t\t * Number of rows to display on a single page when using pagination. If\n\t\t * feature enabled (`lengthChange`) then the end user will be able to override\n\t\t * this to a custom setting using a pop-up menu.\n\t\t */\n\t\t\"iDisplayLength\": 10,\n\t\n\t\n\t\t/**\n\t\t * Define the starting point for data display when using DataTables with\n\t\t * pagination. Note that this parameter is the number of records, rather than\n\t\t * the page number, so if you have 10 records per page and want to start on\n\t\t * the third page, it should be \"20\".\n\t\t */\n\t\t\"iDisplayStart\": 0,\n\t\n\t\n\t\t/**\n\t\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\n\t\t * and filtering) by adding a `tabindex` attribute to the required elements. This\n\t\t * allows you to tab through the controls and press the enter key to activate them.\n\t\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\n\t\t * You can overrule this using this parameter if you wish. Use a value of -1 to\n\t\t * disable built-in keyboard navigation.\n\t\t */\n\t\t\"iTabIndex\": 0,\n\t\n\t\n\t\t/**\n\t\t * Classes that DataTables assigns to the various components and features\n\t\t * that it adds to the HTML table. This allows classes to be configured\n\t\t * during initialisation in addition to through the static\n\t\t * {@link DataTable.ext.oStdClasses} object).\n\t\t */\n\t\t\"oClasses\": {},\n\t\n\t\n\t\t/**\n\t\t * All strings that DataTables uses in the user interface that it creates\n\t\t * are defined in this object, allowing you to modified them individually or\n\t\t * completely replace them all as required.\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\n\t\t\t * actually visible on the page, but will be read by screenreaders, and thus\n\t\t\t * must be internationalised as well).\n\t\t\t */\n\t\t\t\"oAria\": {\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column may be sorted\n\t\t\t\t */\n\t\t\t\t\"orderable\": \": Activate to sort\",\n\t\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column is currently being sorted\n\t\t\t\t */\n\t\t\t\t\"orderableReverse\": \": Activate to invert sorting\",\n\t\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column is currently being \n\t\t\t\t * sorted and next step is to remove sorting\n\t\t\t\t */\n\t\t\t\t\"orderableRemove\": \": Activate to remove sorting\",\n\t\n\t\t\t\tpaginate: {\n\t\t\t\t\tfirst: 'First',\n\t\t\t\t\tlast: 'Last',\n\t\t\t\t\tnext: 'Next',\n\t\t\t\t\tprevious: 'Previous',\n\t\t\t\t\tnumber: ''\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Pagination string used by DataTables for the built-in pagination\n\t\t\t * control types.\n\t\t\t */\n\t\t\t\"oPaginate\": {\n\t\t\t\t/**\n\t\t\t\t * Label and character for first page button (Â«)\n\t\t\t\t */\n\t\t\t\t\"sFirst\": \"\\u00AB\",\n\t\n\t\t\t\t/**\n\t\t\t\t * Last page button (Â»)\n\t\t\t\t */\n\t\t\t\t\"sLast\": \"\\u00BB\",\n\t\n\t\t\t\t/**\n\t\t\t\t * Next page button (âº)\n\t\t\t\t */\n\t\t\t\t\"sNext\": \"\\u203A\",\n\t\n\t\t\t\t/**\n\t\t\t\t * Previous page button (â¹)\n\t\t\t\t */\n\t\t\t\t\"sPrevious\": \"\\u2039\",\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Plural object for the data type the table is showing\n\t\t\t */\n\t\t\tentries: {\n\t\t\t\t_: \"entries\",\n\t\t\t\t1: \"entry\"\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * This string is shown in preference to `zeroRecords` when the table is\n\t\t\t * empty of data (regardless of filtering). Note that this is an optional\n\t\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\n\t\t\t * instead (either the default or given value).\n\t\t\t */\n\t\t\t\"sEmptyTable\": \"No data available in table\",\n\t\n\t\n\t\t\t/**\n\t\t\t * This string gives information to the end user about the information\n\t\t\t * that is current on display on the page. The following tokens can be\n\t\t\t * used in the string and will be dynamically replaced as the table\n\t\t\t * display updates. This tokens can be placed anywhere in the string, or\n\t\t\t * removed as needed by the language requires:\n\t\t\t *\n\t\t\t * * `\\_START\\_` - Display index of the first record on the current page\n\t\t\t * * `\\_END\\_` - Display index of the last record on the current page\n\t\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\n\t\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\n\t\t\t * * `\\_PAGE\\_` - Current page number\n\t\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\n\t\t\t */\n\t\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ _ENTRIES-TOTAL_\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Display information string for when the table is empty. Typically the\n\t\t\t * format of this string should match `info`.\n\t\t\t */\n\t\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 _ENTRIES-TOTAL_\",\n\t\n\t\n\t\t\t/**\n\t\t\t * When a user filters the information in a table, this string is appended\n\t\t\t * to the information (`info`) to give an idea of how strong the filtering\n\t\t\t * is. The variable _MAX_ is dynamically updated.\n\t\t\t */\n\t\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total _ENTRIES-MAX_)\",\n\t\n\t\n\t\t\t/**\n\t\t\t * If can be useful to append extra information to the info string at times,\n\t\t\t * and this variable does exactly that. This information will be appended to\n\t\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n\t\t\t * being used) at all times.\n\t\t\t */\n\t\t\t\"sInfoPostFix\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * This decimal place operator is a little different from the other\n\t\t\t * language options since DataTables doesn't output floating point\n\t\t\t * numbers, so it won't ever use this for display of a number. Rather,\n\t\t\t * what this parameter does is modify the sort methods of the table so\n\t\t\t * that numbers which are in a format which has a character other than\n\t\t\t * a period (`.`) as a decimal place will be sorted numerically.\n\t\t\t *\n\t\t\t * Note that numbers with different decimal places cannot be shown in\n\t\t\t * the same table and still be sortable, the table must be consistent.\n\t\t\t * However, multiple different tables on the page can use different\n\t\t\t * decimal place characters.\n\t\t\t */\n\t\t\t\"sDecimal\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * DataTables has a build in number formatter (`formatNumber`) which is\n\t\t\t * used to format large numbers that are used in the table information.\n\t\t\t * By default a comma is used, but this can be trivially changed to any\n\t\t\t * character you wish with this parameter.\n\t\t\t */\n\t\t\t\"sThousands\": \",\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Detail the action that will be taken when the drop down menu for the\n\t\t\t * pagination length option is changed. The '_MENU_' variable is replaced\n\t\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\n\t\t\t * with a custom select box if required.\n\t\t\t */\n\t\t\t\"sLengthMenu\": \"_MENU_ _ENTRIES_ per page\",\n\t\n\t\n\t\t\t/**\n\t\t\t * When using Ajax sourced data and during the first draw when DataTables is\n\t\t\t * gathering the data, this message is shown in an empty row in the table to\n\t\t\t * indicate to the end user the the data is being loaded. Note that this\n\t\t\t * parameter is not used when loading data by server-side processing, just\n\t\t\t * Ajax sourced data with client-side processing.\n\t\t\t */\n\t\t\t\"sLoadingRecords\": \"Loading...\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Text which is displayed when the table is processing a user action\n\t\t\t * (usually a sort command or similar).\n\t\t\t */\n\t\t\t\"sProcessing\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Details the actions that will be taken when the user types into the\n\t\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\n\t\t\t * is replaced with the HTML text box for the filtering input allowing\n\t\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\n\t\t\t * then the input box is appended to the string automatically.\n\t\t\t */\n\t\t\t\"sSearch\": \"Search:\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Assign a `placeholder` attribute to the search `input` element\n\t\t\t *  @type string\n\t\t\t *  @default \n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.searchPlaceholder\n\t\t\t */\n\t\t\t\"sSearchPlaceholder\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * All of the language information can be stored in a file on the\n\t\t\t * server-side, which DataTables will look up if this parameter is passed.\n\t\t\t * It must store the URL of the language file, which is in a JSON format,\n\t\t\t * and the object has the same properties as the oLanguage object in the\n\t\t\t * initialiser object (i.e. the above parameters). Please refer to one of\n\t\t\t * the example language files to see how this works in action.\n\t\t\t */\n\t\t\t\"sUrl\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Text shown inside the table records when the is no information to be\n\t\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\n\t\t\t * information in the table at all (regardless of filtering).\n\t\t\t */\n\t\t\t\"sZeroRecords\": \"No matching records found\"\n\t\t},\n\t\n\t\n\t\t/** The initial data order is reversed when `desc` ordering */\n\t\torderDescReverse: true,\n\t\n\t\n\t\t/**\n\t\t * This parameter allows you to have define the global filtering state at\n\t\t * initialisation time. As an object the `search` parameter must be\n\t\t * defined, but all other parameters are optional. When `regex` is true,\n\t\t * the search string will be treated as a regular expression, when false\n\t\t * (default) it will be treated as a straight string. When `smart`\n\t\t * DataTables will use it's smart filtering methods (to word match at\n\t\t * any point in the data), when false this will not be done.\n\t\t */\n\t\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\n\t\n\t\n\t\t/**\n\t\t * Table and control layout. This replaces the legacy `dom` option.\n\t\t */\n\t\tlayout: {\n\t\t\ttopStart: 'pageLength',\n\t\t\ttopEnd: 'search',\n\t\t\tbottomStart: 'info',\n\t\t\tbottomEnd: 'paging'\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Legacy DOM layout option\n\t\t */\n\t\t\"sDom\": null,\n\t\n\t\n\t\t/**\n\t\t * Search delay option. This will throttle full table searches that use the\n\t\t * DataTables provided search input element (it does not effect calls to\n\t\t * `dt-api search()`, providing a delay before the search is made.\n\t\t */\n\t\t\"searchDelay\": null,\n\t\n\t\n\t\t/**\n\t\t * DataTables features six different built-in options for the buttons to\n\t\t * display for pagination control:\n\t\t *\n\t\t * * `numbers` - Page number buttons only\n\t\t * * `simple` - 'Previous' and 'Next' buttons only\n\t\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n\t\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n\t\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n\t\t * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n\t\t */\n\t\t\"sPaginationType\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Enable horizontal scrolling. When a table is too wide to fit into a\n\t\t * certain layout, or you have a large number of columns in the table, you\n\t\t * can enable x-scrolling to show the table in a viewport, which can be\n\t\t * scrolled. This property can be `true` which will allow the table to\n\t\t * scroll horizontally when needed, or any CSS unit, or a number (in which\n\t\t * case it will be treated as a pixel measurement). Setting as simply `true`\n\t\t * is recommended.\n\t\t */\n\t\t\"sScrollX\": \"\",\n\t\n\t\n\t\t/**\n\t\t * This property can be used to force a DataTable to use more width than it\n\t\t * might otherwise do when x-scrolling is enabled. For example if you have a\n\t\t * table which requires to be well spaced, this parameter is useful for\n\t\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n\t\t * any CSS unit, or a number (in which case it will be treated as a pixel\n\t\t * measurement).\n\t\t */\n\t\t\"sScrollXInner\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n\t\t * to the given height, and enable scrolling for any data which overflows the\n\t\t * current viewport. This can be used as an alternative to paging to display\n\t\t * a lot of data in a small area (although paging and scrolling can both be\n\t\t * enabled at the same time). This property can be any CSS unit, or a number\n\t\t * (in which case it will be treated as a pixel measurement).\n\t\t */\n\t\t\"sScrollY\": \"\",\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * Set the HTTP method that is used to make the Ajax call for server-side\n\t\t * processing or Ajax sourced data.\n\t\t */\n\t\t\"sServerMethod\": \"GET\",\n\t\n\t\n\t\t/**\n\t\t * DataTables makes use of renderers when displaying HTML elements for\n\t\t * a table. These renderers can be added or modified by plug-ins to\n\t\t * generate suitable mark-up for a site. For example the Bootstrap\n\t\t * integration plug-in for DataTables uses a paging button renderer to\n\t\t * display pagination buttons in the mark-up required by Bootstrap.\n\t\t *\n\t\t * For further information about the renderers available see\n\t\t * DataTable.ext.renderer\n\t\t */\n\t\t\"renderer\": null,\n\t\n\t\n\t\t/**\n\t\t * Set the data property name that DataTables should use to get a row's id\n\t\t * to set as the `id` property in the node.\n\t\t */\n\t\t\"rowId\": \"DT_RowId\",\n\t\n\t\n\t\t/**\n\t\t * Caption value\n\t\t */\n\t\t\"caption\": null,\n\t\n\t\n\t\t/**\n\t\t * For server-side processing - use the data from the DOM for the first draw\n\t\t */\n\t\tiDeferLoading: null\n\t};\n\t\n\t_fnHungarianMap( DataTable.defaults );\n\t\n\t\n\t\n\t/*\n\t * Developer note - See note in model.defaults.js about the use of Hungarian\n\t * notation and camel case.\n\t */\n\t\n\t/**\n\t * Column options that can be given to DataTables at initialisation time.\n\t *  @namespace\n\t */\n\tDataTable.defaults.column = {\n\t\t/**\n\t\t * Define which column(s) an order will occur on for this column. This\n\t\t * allows a column's ordering to take multiple columns into account when\n\t\t * doing a sort or use the data from a different column. For example first\n\t\t * name / last name columns make sense to do a multi-column sort over the\n\t\t * two columns.\n\t\t */\n\t\t\"aDataSort\": null,\n\t\t\"iDataSort\": -1,\n\t\n\t\tariaTitle: '',\n\t\n\t\n\t\t/**\n\t\t * You can control the default ordering direction, and even alter the\n\t\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n\t\t * using this parameter.\n\t\t */\n\t\t\"asSorting\": [ 'asc', 'desc', '' ],\n\t\n\t\n\t\t/**\n\t\t * Enable or disable filtering on the data in this column.\n\t\t */\n\t\t\"bSearchable\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable ordering on this column.\n\t\t */\n\t\t\"bSortable\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the display of this column.\n\t\t */\n\t\t\"bVisible\": true,\n\t\n\t\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\t\n\t\n\t\t/**\n\t\t * This property can be used to read data from any data source property,\n\t\t * including deeply nested objects / properties. `data` can be given in a\n\t\t * number of different ways which effect its behaviour:\n\t\t *\n\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t * * `string` - read an object property from the data source. There are\n\t\t *   three 'special' options that can be used in the string to alter how\n\t\t *   DataTables reads the data from the source object:\n\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t *      Javascript to read from nested objects, so to can the options\n\t\t *      specified in `data`. For example: `browser.version` or\n\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t *      from and array source, joining the data with the characters provided\n\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t *      comma-space separated list from the source array. If no characters\n\t\t *      are provided between the brackets, the original array source is\n\t\t *      returned.\n\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t *      simple function on the data source, `browser.version()` for a\n\t\t *      function in a nested property or even `browser().version` to get an\n\t\t *      object property if the function called returns an object. Note that\n\t\t *      function notation is recommended for use in `render` rather than\n\t\t *      `data` as it is much simpler to use as a renderer.\n\t\t * * `null` - use the original data source for the row rather than plucking\n\t\t *   data directly from it. This action has effects on two other\n\t\t *   initialisation options:\n\t\t *    * `defaultContent` - When null is given as the `data` option and\n\t\t *      `defaultContent` is specified for the column, the value defined by\n\t\t *      `defaultContent` will be used for the cell.\n\t\t *    * `render` - When null is used for the `data` option and the `render`\n\t\t *      option is specified for the column, the whole data source for the\n\t\t *      row is used for the renderer.\n\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t *   takes three parameters:\n\t\t *    * Parameters:\n\t\t *      * `{array|object}` The data source for the row\n\t\t *      * `{string}` The type call data requested - this will be 'set' when\n\t\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n\t\t *        when gathering data. Note that when `undefined` is given for the\n\t\t *        type DataTables expects to get the raw data for the object back<\n\t\t *      * `{*}` Data to set when the second parameter is 'set'.\n\t\t *    * Return:\n\t\t *      * The return value from the function is not required when 'set' is\n\t\t *        the type of call, but otherwise the return is what will be used\n\t\t *        for the data requested.\n\t\t *\n\t\t * Note that `data` is a getter and setter option. If you just require\n\t\t * formatting of data for output, you will likely want to use `render` which\n\t\t * is simply a getter and thus simpler to use.\n\t\t *\n\t\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n\t\t * name change reflects the flexibility of this property and is consistent\n\t\t * with the naming of mRender. If 'mDataProp' is given, then it will still\n\t\t * be used by DataTables, as it automatically maps the old name to the new\n\t\t * if required.\n\t\t */\n\t\t\"mData\": null,\n\t\n\t\n\t\t/**\n\t\t * This property is the rendering partner to `data` and it is suggested that\n\t\t * when you want to manipulate data for display (including filtering,\n\t\t * sorting etc) without altering the underlying data for the table, use this\n\t\t * property. `render` can be considered to be the the read only companion to\n\t\t * `data` which is read / write (then as such more complex). Like `data`\n\t\t * this option can be given in a number of different ways to effect its\n\t\t * behaviour:\n\t\t *\n\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t * * `string` - read an object property from the data source. There are\n\t\t *   three 'special' options that can be used in the string to alter how\n\t\t *   DataTables reads the data from the source object:\n\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t *      Javascript to read from nested objects, so to can the options\n\t\t *      specified in `data`. For example: `browser.version` or\n\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t *      from and array source, joining the data with the characters provided\n\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t *      comma-space separated list from the source array. If no characters\n\t\t *      are provided between the brackets, the original array source is\n\t\t *      returned.\n\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t *      simple function on the data source, `browser.version()` for a\n\t\t *      function in a nested property or even `browser().version` to get an\n\t\t *      object property if the function called returns an object.\n\t\t * * `object` - use different data for the different data types requested by\n\t\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n\t\t *   of the object is the data type the property refers to and the value can\n\t\t *   defined using an integer, string or function using the same rules as\n\t\t *   `render` normally does. Note that an `_` option _must_ be specified.\n\t\t *   This is the default value to use if you haven't specified a value for\n\t\t *   the data type requested by DataTables.\n\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t *   takes three parameters:\n\t\t *    * Parameters:\n\t\t *      * {array|object} The data source for the row (based on `data`)\n\t\t *      * {string} The type call data requested - this will be 'filter',\n\t\t *        'display', 'type' or 'sort'.\n\t\t *      * {array|object} The full data source for the row (not based on\n\t\t *        `data`)\n\t\t *    * Return:\n\t\t *      * The return value from the function is what will be used for the\n\t\t *        data requested.\n\t\t */\n\t\t\"mRender\": null,\n\t\n\t\n\t\t/**\n\t\t * Change the cell type created for the column - either TD cells or TH cells. This\n\t\t * can be useful as TH cells have semantic meaning in the table body, allowing them\n\t\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n\t\t */\n\t\t\"sCellType\": \"td\",\n\t\n\t\n\t\t/**\n\t\t * Class to give to each cell in this column.\n\t\t */\n\t\t\"sClass\": \"\",\n\t\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t * Generally you shouldn't need this!\n\t\t */\n\t\t\"sContentPadding\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because `data`\n\t\t * is set to null, or because the data source itself is null).\n\t\t */\n\t\t\"sDefaultContent\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter is only used in DataTables' server-side processing. It can\n\t\t * be exceptionally useful to know what columns are being displayed on the\n\t\t * client side, and to map these to database fields. When defined, the names\n\t\t * also allow DataTables to reorder information from the server if it comes\n\t\t * back in an unexpected order (i.e. if you switch your columns around on the\n\t\t * client-side, your server-side code does not also need updating).\n\t\t */\n\t\t\"sName\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Defines a data source type for the ordering which can be used to read\n\t\t * real-time information from the table (updating the internally cached\n\t\t * version) prior to ordering. This allows ordering to occur on user\n\t\t * editable elements such as form inputs.\n\t\t */\n\t\t\"sSortDataType\": \"std\",\n\t\n\t\n\t\t/**\n\t\t * The title of this column.\n\t\t */\n\t\t\"sTitle\": null,\n\t\n\t\n\t\t/**\n\t\t * The type allows you to specify how the data for this column will be\n\t\t * ordered. Four types (string, numeric, date and html (which will strip\n\t\t * HTML tags before ordering)) are currently available. Note that only date\n\t\t * formats understood by Javascript's Date() object will be accepted as type\n\t\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n\t\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\n\t\t * through plug-ins.\n\t\t */\n\t\t\"sType\": null,\n\t\n\t\n\t\t/**\n\t\t * Defining the width of the column, this parameter may take any CSS value\n\t\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n\t\t * been given a specific width through this interface ensuring that the table\n\t\t * remains readable.\n\t\t */\n\t\t\"sWidth\": null\n\t};\n\t\n\t_fnHungarianMap( DataTable.defaults.column );\n\t\n\t\n\t\n\t/**\n\t * DataTables settings object - this holds all the information needed for a\n\t * given table, including configuration, data and current application of the\n\t * table options. DataTables does not have a single instance for each DataTable\n\t * with the settings attached to that instance, but rather instances of the\n\t * DataTable \"class\" are created on-the-fly as needed (typically by a\n\t * $().dataTable() call) and the settings object is then applied to that\n\t * instance.\n\t *\n\t * Note that this object is related to {@link DataTable.defaults} but this\n\t * one is the internal data store for DataTables's cache of columns. It should\n\t * NOT be manipulated outside of DataTables. Any configuration should be done\n\t * through the initialisation options.\n\t */\n\tDataTable.models.oSettings = {\n\t\t/**\n\t\t * Primary features of DataTables and their enablement state.\n\t\t */\n\t\t\"oFeatures\": {\n\t\n\t\t\t/**\n\t\t\t * Flag to say if DataTables should automatically try to calculate the\n\t\t\t * optimum table and columns widths (true) or not (false).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t */\n\t\t\t\"bAutoWidth\": null,\n\t\n\t\t\t/**\n\t\t\t * Delay the creation of TR and TD elements until they are actually\n\t\t\t * needed by a driven page draw. This can give a significant speed\n\t\t\t * increase for Ajax source and Javascript source data, but makes no\n\t\t\t * difference at all for DOM and server-side processing tables.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t */\n\t\t\t\"bDeferRender\": null,\n\t\n\t\t\t/**\n\t\t\t * Enable filtering on the table or not. Note that if this is disabled\n\t\t\t * then there is no filtering at all on the table, including fnFilter.\n\t\t\t * To just remove the filtering input use sDom and remove the 'f' option.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t */\n\t\t\t\"bFilter\": null,\n\t\n\t\t\t/**\n\t\t\t * Used only for compatiblity with DT1\n\t\t\t * @deprecated\n\t\t\t */\n\t\t\t\"bInfo\": true,\n\t\n\t\t\t/**\n\t\t\t * Used only for compatiblity with DT1\n\t\t\t * @deprecated\n\t\t\t */\n\t\t\t\"bLengthChange\": true,\n\t\n\t\t\t/**\n\t\t\t * Pagination enabled or not. Note that if this is disabled then length\n\t\t\t * changing must also be disabled.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t */\n\t\t\t\"bPaginate\": null,\n\t\n\t\t\t/**\n\t\t\t * Processing indicator enable flag whenever DataTables is enacting a\n\t\t\t * user request - typically an Ajax request for server-side processing.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t */\n\t\t\t\"bProcessing\": null,\n\t\n\t\t\t/**\n\t\t\t * Server-side processing enabled flag - when enabled DataTables will\n\t\t\t * get all data from the server for every draw - there is no filtering,\n\t\t\t * sorting or paging done on the client-side.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t */\n\t\t\t\"bServerSide\": null,\n\t\n\t\t\t/**\n\t\t\t * Sorting enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t */\n\t\t\t\"bSort\": null,\n\t\n\t\t\t/**\n\t\t\t * Multi-column sorting\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t */\n\t\t\t\"bSortMulti\": null,\n\t\n\t\t\t/**\n\t\t\t * Apply a class to the columns which are being sorted to provide a\n\t\t\t * visual highlight or not. This can slow things down when enabled since\n\t\t\t * there is a lot of DOM interaction.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t */\n\t\t\t\"bSortClasses\": null,\n\t\n\t\t\t/**\n\t\t\t * State saving enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t */\n\t\t\t\"bStateSave\": null\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Scrolling settings for a table.\n\t\t */\n\t\t\"oScroll\": {\n\t\t\t/**\n\t\t\t * When the table is shorter in height than sScrollY, collapse the\n\t\t\t * table container down to the height of the table (when true).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t */\n\t\t\t\"bCollapse\": null,\n\t\n\t\t\t/**\n\t\t\t * Width of the scrollbar for the web-browser's platform. Calculated\n\t\t\t * during table initialisation.\n\t\t\t */\n\t\t\t\"iBarWidth\": 0,\n\t\n\t\t\t/**\n\t\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\n\t\t\t * disabled if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t */\n\t\t\t\"sX\": null,\n\t\n\t\t\t/**\n\t\t\t * Width to expand the table to when using x-scrolling. Typically you\n\t\t\t * should not need to use this.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @deprecated\n\t\t\t */\n\t\t\t\"sXInner\": null,\n\t\n\t\t\t/**\n\t\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\n\t\t\t * if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t */\n\t\t\t\"sY\": null\n\t\t},\n\t\n\t\t/**\n\t\t * Language information for the table.\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Information callback function. See\n\t\t\t * {@link DataTable.defaults.fnInfoCallback}\n\t\t\t */\n\t\t\t\"fnInfoCallback\": null\n\t\t},\n\t\n\t\t/**\n\t\t * Browser support parameters\n\t\t */\n\t\t\"oBrowser\": {\n\t\t\t/**\n\t\t\t * Determine if the vertical scrollbar is on the right or left of the\n\t\t\t * scrolling container - needed for rtl language layout, although not\n\t\t\t * all browsers move the scrollbar (Safari).\n\t\t\t */\n\t\t\t\"bScrollbarLeft\": false,\n\t\n\t\t\t/**\n\t\t\t * Browser scrollbar width\n\t\t\t */\n\t\t\t\"barWidth\": 0\n\t\t},\n\t\n\t\n\t\t\"ajax\": null,\n\t\n\t\n\t\t/**\n\t\t * Array referencing the nodes which are used for the features. The\n\t\t * parameters of this object match what is allowed by sDom - i.e.\n\t\t *   <ul>\n\t\t *     <li>'l' - Length changing</li>\n\t\t *     <li>'f' - Filtering input</li>\n\t\t *     <li>'t' - The table!</li>\n\t\t *     <li>'i' - Information</li>\n\t\t *     <li>'p' - Pagination</li>\n\t\t *     <li>'r' - pRocessing</li>\n\t\t *   </ul>\n\t\t */\n\t\t\"aanFeatures\": [],\n\t\n\t\t/**\n\t\t * Store data information - see {@link DataTable.models.oRow} for detailed\n\t\t * information.\n\t\t */\n\t\t\"aoData\": [],\n\t\n\t\t/**\n\t\t * Array of indexes which are in the current display (after filtering etc)\n\t\t */\n\t\t\"aiDisplay\": [],\n\t\n\t\t/**\n\t\t * Array of indexes for display - no filtering\n\t\t */\n\t\t\"aiDisplayMaster\": [],\n\t\n\t\t/**\n\t\t * Map of row ids to data indexes\n\t\t */\n\t\t\"aIds\": {},\n\t\n\t\t/**\n\t\t * Store information about each column that is in use\n\t\t */\n\t\t\"aoColumns\": [],\n\t\n\t\t/**\n\t\t * Store information about the table's header\n\t\t */\n\t\t\"aoHeader\": [],\n\t\n\t\t/**\n\t\t * Store information about the table's footer\n\t\t */\n\t\t\"aoFooter\": [],\n\t\n\t\t/**\n\t\t * Store the applied global search information in case we want to force a\n\t\t * research or compare the old search to a new one.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"oPreviousSearch\": {},\n\t\n\t\t/**\n\t\t * Store for named searches\n\t\t */\n\t\tsearchFixed: {},\n\t\n\t\t/**\n\t\t * Store the applied search for each column - see\n\t\t * {@link DataTable.models.oSearch} for the format that is used for the\n\t\t * filtering information for each column.\n\t\t */\n\t\t\"aoPreSearchCols\": [],\n\t\n\t\t/**\n\t\t * Sorting that is applied to the table. Note that the inner arrays are\n\t\t * used in the following manner:\n\t\t * <ul>\n\t\t *   <li>Index 0 - column number</li>\n\t\t *   <li>Index 1 - current sorting direction</li>\n\t\t * </ul>\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"aaSorting\": null,\n\t\n\t\t/**\n\t\t * Sorting that is always applied to the table (i.e. prefixed in front of\n\t\t * aaSorting).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"aaSortingFixed\": [],\n\t\n\t\t/**\n\t\t * If restoring a table - we should restore its width\n\t\t */\n\t\t\"sDestroyWidth\": 0,\n\t\n\t\t/**\n\t\t * Callback functions array for every time a row is inserted (i.e. on a draw).\n\t\t */\n\t\t\"aoRowCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for the header on each draw.\n\t\t */\n\t\t\"aoHeaderCallback\": [],\n\t\n\t\t/**\n\t\t * Callback function for the footer on each draw.\n\t\t */\n\t\t\"aoFooterCallback\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for draw callback functions\n\t\t */\n\t\t\"aoDrawCallback\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for row created function\n\t\t */\n\t\t\"aoRowCreatedCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for just before the table is redrawn. A return of\n\t\t * false will be used to cancel the draw.\n\t\t */\n\t\t\"aoPreDrawCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for when the table has been initialised.\n\t\t */\n\t\t\"aoInitComplete\": [],\n\t\n\t\n\t\t/**\n\t\t * Callbacks for modifying the settings to be stored for state saving, prior to\n\t\t * saving state.\n\t\t */\n\t\t\"aoStateSaveParams\": [],\n\t\n\t\t/**\n\t\t * Callbacks for modifying the settings that have been stored for state saving\n\t\t * prior to using the stored values to restore the state.\n\t\t */\n\t\t\"aoStateLoadParams\": [],\n\t\n\t\t/**\n\t\t * Callbacks for operating on the settings object once the saved state has been\n\t\t * loaded\n\t\t */\n\t\t\"aoStateLoaded\": [],\n\t\n\t\t/**\n\t\t * Cache the table ID for quick access\n\t\t */\n\t\t\"sTableId\": \"\",\n\t\n\t\t/**\n\t\t * The TABLE node for the main table\n\t\t */\n\t\t\"nTable\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the thead element\n\t\t */\n\t\t\"nTHead\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the tfoot element - if it exists\n\t\t */\n\t\t\"nTFoot\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the tbody element\n\t\t */\n\t\t\"nTBody\": null,\n\t\n\t\t/**\n\t\t * Cache the wrapper node (contains all DataTables controlled elements)\n\t\t */\n\t\t\"nTableWrapper\": null,\n\t\n\t\t/**\n\t\t * Indicate if all required information has been read in\n\t\t */\n\t\t\"bInitialised\": false,\n\t\n\t\t/**\n\t\t * Information about open rows. Each object in the array has the parameters\n\t\t * 'nTr' and 'nParent'\n\t\t */\n\t\t\"aoOpenRows\": [],\n\t\n\t\t/**\n\t\t * Dictate the positioning of DataTables' control elements - see\n\t\t * {@link DataTable.model.oInit.sDom}.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"sDom\": null,\n\t\n\t\t/**\n\t\t * Search delay (in mS)\n\t\t */\n\t\t\"searchDelay\": null,\n\t\n\t\t/**\n\t\t * Which type of pagination should be used.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"sPaginationType\": \"two_button\",\n\t\n\t\t/**\n\t\t * Number of paging controls on the page. Only used for backwards compatibility\n\t\t */\n\t\tpagingControls: 0,\n\t\n\t\t/**\n\t\t * The state duration (for `stateSave`) in seconds.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"iStateDuration\": 0,\n\t\n\t\t/**\n\t\t * Array of callback functions for state saving. Each array element is an\n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t *       and the JSON string to save that has been thus far created. Returns\n\t\t *       a JSON string to be inserted into a json object\n\t\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t */\n\t\t\"aoStateSave\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for state loading. Each array element is an\n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t *       and the object stored. May return false to cancel state loading</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t */\n\t\t\"aoStateLoad\": [],\n\t\n\t\t/**\n\t\t * State that was saved. Useful for back reference\n\t\t */\n\t\t\"oSavedState\": null,\n\t\n\t\t/**\n\t\t * State that was loaded. Useful for back reference\n\t\t */\n\t\t\"oLoadedState\": null,\n\t\n\t\t/**\n\t\t * Note if draw should be blocked while getting data\n\t\t */\n\t\t\"bAjaxDataGet\": true,\n\t\n\t\t/**\n\t\t * The last jQuery XHR object that was used for server-side data gathering.\n\t\t * This can be used for working with the XHR information in one of the\n\t\t * callbacks\n\t\t */\n\t\t\"jqXHR\": null,\n\t\n\t\t/**\n\t\t * JSON returned from the server in the last Ajax request\n\t\t */\n\t\t\"json\": undefined,\n\t\n\t\t/**\n\t\t * Data submitted as part of the last Ajax request\n\t\t */\n\t\t\"oAjaxData\": undefined,\n\t\n\t\t/**\n\t\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n\t\t * required).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"sServerMethod\": null,\n\t\n\t\t/**\n\t\t * Format numbers for display.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"fnFormatNumber\": null,\n\t\n\t\t/**\n\t\t * List of options that can be used for the user selectable length menu.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"aLengthMenu\": null,\n\t\n\t\t/**\n\t\t * Counter for the draws that the table does. Also used as a tracker for\n\t\t * server-side processing\n\t\t */\n\t\t\"iDraw\": 0,\n\t\n\t\t/**\n\t\t * Indicate if a redraw is being done - useful for Ajax\n\t\t */\n\t\t\"bDrawing\": false,\n\t\n\t\t/**\n\t\t * Draw index (iDraw) of the last error when parsing the returned data\n\t\t */\n\t\t\"iDrawError\": -1,\n\t\n\t\t/**\n\t\t * Paging display length\n\t\t */\n\t\t\"_iDisplayLength\": 10,\n\t\n\t\t/**\n\t\t * Paging start point - aiDisplay index\n\t\t */\n\t\t\"_iDisplayStart\": 0,\n\t\n\t\t/**\n\t\t * Server-side processing - number of records in the result set\n\t\t * (i.e. before filtering), Use fnRecordsTotal rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t */\n\t\t\"_iRecordsTotal\": 0,\n\t\n\t\t/**\n\t\t * Server-side processing - number of records in the current display set\n\t\t * (i.e. after filtering). Use fnRecordsDisplay rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t */\n\t\t\"_iRecordsDisplay\": 0,\n\t\n\t\t/**\n\t\t * The classes to use for the table\n\t\t */\n\t\t\"oClasses\": {},\n\t\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw\n\t\t * callback if filtering has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @deprecated\n\t\t */\n\t\t\"bFiltered\": false,\n\t\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw\n\t\t * callback if sorting has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @deprecated\n\t\t */\n\t\t\"bSorted\": false,\n\t\n\t\t/**\n\t\t * Indicate that if multiple rows are in the header and there is more than\n\t\t * one unique cell per column, if the top one (true) or bottom one (false)\n\t\t * should be used for sorting / title by DataTables.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bSortCellsTop\": null,\n\t\n\t\t/**\n\t\t * Initialisation object that is used for the table\n\t\t */\n\t\t\"oInit\": null,\n\t\n\t\t/**\n\t\t * Destroy callback functions - for plug-ins to attach themselves to the\n\t\t * destroy so they can clean up markup and events.\n\t\t */\n\t\t\"aoDestroyCallback\": [],\n\t\n\t\n\t\t/**\n\t\t * Get the number of records in the current record set, before filtering\n\t\t */\n\t\t\"fnRecordsTotal\": function ()\n\t\t{\n\t\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\t\tthis._iRecordsTotal * 1 :\n\t\t\t\tthis.aiDisplayMaster.length;\n\t\t},\n\t\n\t\t/**\n\t\t * Get the number of records in the current record set, after filtering\n\t\t */\n\t\t\"fnRecordsDisplay\": function ()\n\t\t{\n\t\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\t\tthis._iRecordsDisplay * 1 :\n\t\t\t\tthis.aiDisplay.length;\n\t\t},\n\t\n\t\t/**\n\t\t * Get the display end point - aiDisplay index\n\t\t */\n\t\t\"fnDisplayEnd\": function ()\n\t\t{\n\t\t\tvar\n\t\t\t\tlen      = this._iDisplayLength,\n\t\t\t\tstart    = this._iDisplayStart,\n\t\t\t\tcalc     = start + len,\n\t\t\t\trecords  = this.aiDisplay.length,\n\t\t\t\tfeatures = this.oFeatures,\n\t\t\t\tpaginate = features.bPaginate;\n\t\n\t\t\tif ( features.bServerSide ) {\n\t\t\t\treturn paginate === false || len === -1 ?\n\t\t\t\t\tstart + records :\n\t\t\t\t\tMath.min( start+len, this._iRecordsDisplay );\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn ! paginate || calc>records || len===-1 ?\n\t\t\t\t\trecords :\n\t\t\t\t\tcalc;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * The DataTables object for this table\n\t\t */\n\t\t\"oInstance\": null,\n\t\n\t\t/**\n\t\t * Unique identifier for each instance of the DataTables object. If there\n\t\t * is an ID on the table node, then it takes that value, otherwise an\n\t\t * incrementing internal counter is used.\n\t\t */\n\t\t\"sInstance\": null,\n\t\n\t\t/**\n\t\t * tabindex attribute value that is added to DataTables control elements, allowing\n\t\t * keyboard navigation of the table and its controls.\n\t\t */\n\t\t\"iTabIndex\": 0,\n\t\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollHead\": null,\n\t\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollFoot\": null,\n\t\n\t\t/**\n\t\t * Last applied sort\n\t\t */\n\t\t\"aLastSort\": [],\n\t\n\t\t/**\n\t\t * Stored plug-in instances\n\t\t */\n\t\t\"oPlugins\": {},\n\t\n\t\t/**\n\t\t * Function used to get a row's id from the row's data\n\t\t */\n\t\t\"rowIdFn\": null,\n\t\n\t\t/**\n\t\t * Data location where to store a row's id\n\t\t */\n\t\t\"rowId\": null,\n\t\n\t\tcaption: '',\n\t\n\t\tcaptionNode: null,\n\t\n\t\tcolgroup: null,\n\t\n\t\t/** Delay loading of data */\n\t\tdeferLoading: null,\n\t\n\t\t/** Allow auto type detection */\n\t\ttypeDetect: true,\n\t\n\t\t/** ResizeObserver for the container div */\n\t\tresizeObserver: null,\n\t\n\t\t/** Keep a record of the last size of the container, so we can skip duplicates */\n\t\tcontainerWidth: -1\n\t};\n\t\n\t/**\n\t * Extension object for DataTables that is used to provide all extension\n\t * options.\n\t *\n\t * Note that the `DataTable.ext` object is available through\n\t * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n\t * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n\t *  @namespace\n\t *  @extends DataTable.models.ext\n\t */\n\t\n\t\n\tvar extPagination = DataTable.ext.pager;\n\t\n\t// Paging buttons configuration\n\t$.extend( extPagination, {\n\t\tsimple: function () {\n\t\t\treturn [ 'previous', 'next' ];\n\t\t},\n\t\n\t\tfull: function () {\n\t\t\treturn [ 'first', 'previous', 'next', 'last' ];\n\t\t},\n\t\n\t\tnumbers: function () {\n\t\t\treturn [ 'numbers' ];\n\t\t},\n\t\n\t\tsimple_numbers: function () {\n\t\t\treturn [ 'previous', 'numbers', 'next' ];\n\t\t},\n\t\n\t\tfull_numbers: function () {\n\t\t\treturn [ 'first', 'previous', 'numbers', 'next', 'last' ];\n\t\t},\n\t\n\t\tfirst_last: function () {\n\t\t\treturn ['first', 'last'];\n\t\t},\n\t\n\t\tfirst_last_numbers: function () {\n\t\t\treturn ['first', 'numbers', 'last'];\n\t\t},\n\t\n\t\t// For testing and plug-ins to use\n\t\t_numbers: _pagingNumbers,\n\t\n\t\t// Number of number buttons - legacy, use `numbers` option for paging feature\n\t\tnumbers_length: 7\n\t} );\n\t\n\t\n\t$.extend( true, DataTable.ext.renderer, {\n\t\tpagingButton: {\n\t\t\t_: function (settings, buttonType, content, active, disabled) {\n\t\t\t\tvar classes = settings.oClasses.paging;\n\t\t\t\tvar btnClasses = [classes.button];\n\t\t\t\tvar btn;\n\t\n\t\t\t\tif (active) {\n\t\t\t\t\tbtnClasses.push(classes.active);\n\t\t\t\t}\n\t\n\t\t\t\tif (disabled) {\n\t\t\t\t\tbtnClasses.push(classes.disabled)\n\t\t\t\t}\n\t\n\t\t\t\tif (buttonType === 'ellipsis') {\n\t\t\t\t\tbtn = $('<span class=\"ellipsis\"></span>').html(content)[0];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbtn = $('<button>', {\n\t\t\t\t\t\tclass: btnClasses.join(' '),\n\t\t\t\t\t\trole: 'link',\n\t\t\t\t\t\ttype: 'button'\n\t\t\t\t\t}).html(content);\n\t\t\t\t}\n\t\n\t\t\t\treturn {\n\t\t\t\t\tdisplay: btn,\n\t\t\t\t\tclicker: btn\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\tpagingContainer: {\n\t\t\t_: function (settings, buttons) {\n\t\t\t\t// No wrapping element - just append directly to the host\n\t\t\t\treturn buttons;\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t// Common function to remove new lines, strip HTML and diacritic control\n\tvar _filterString = function (stripHtml, normalize) {\n\t\treturn function (str) {\n\t\t\tif (_empty(str) || typeof str !== 'string') {\n\t\t\t\treturn str;\n\t\t\t}\n\t\n\t\t\tstr = str.replace( _re_new_lines, \" \" );\n\t\n\t\t\tif (stripHtml) {\n\t\t\t\tstr = _stripHtml(str);\n\t\t\t}\n\t\n\t\t\tif (normalize) {\n\t\t\t\tstr = _normalize(str, false);\n\t\t\t}\n\t\n\t\t\treturn str;\n\t\t};\n\t}\n\t\n\t/*\n\t * Public helper functions. These aren't used internally by DataTables, or\n\t * called by any of the options passed into DataTables, but they can be used\n\t * externally by developers working with DataTables. They are helper functions\n\t * to make working with DataTables a little bit easier.\n\t */\n\t\n\t/**\n\t * Common logic for moment, luxon or a date action.\n\t *\n\t * Happens after __mldObj, so don't need to call `resolveWindowsLibs` again\n\t */\n\tfunction __mld( dtLib, momentFn, luxonFn, dateFn, arg1 ) {\n\t\tif (__moment) {\n\t\t\treturn dtLib[momentFn]( arg1 );\n\t\t}\n\t\telse if (__luxon) {\n\t\t\treturn dtLib[luxonFn]( arg1 );\n\t\t}\n\t\t\n\t\treturn dateFn ? dtLib[dateFn]( arg1 ) : dtLib;\n\t}\n\t\n\t\n\tvar __mlWarning = false;\n\tvar __luxon; // Can be assigned in DateTable.use()\n\tvar __moment; // Can be assigned in DateTable.use()\n\t\n\t/**\n\t * \n\t */\n\tfunction resolveWindowLibs() {\n\t\tif (window.luxon && ! __luxon) {\n\t\t\t__luxon = window.luxon;\n\t\t}\n\t\t\n\t\tif (window.moment && ! __moment) {\n\t\t\t__moment = window.moment;\n\t\t}\n\t}\n\t\n\tfunction __mldObj (d, format, locale) {\n\t\tvar dt;\n\t\n\t\tresolveWindowLibs();\n\t\n\t\tif (__moment) {\n\t\t\tdt = __moment.utc( d, format, locale, true );\n\t\n\t\t\tif (! dt.isValid()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\telse if (__luxon) {\n\t\t\tdt = format && typeof d === 'string'\n\t\t\t\t? __luxon.DateTime.fromFormat( d, format )\n\t\t\t\t: __luxon.DateTime.fromISO( d );\n\t\n\t\t\tif (! dt.isValid) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\n\t\t\tdt = dt.setLocale(locale);\n\t\t}\n\t\telse if (! format) {\n\t\t\t// No format given, must be ISO\n\t\t\tdt = new Date(d);\n\t\t}\n\t\telse {\n\t\t\tif (! __mlWarning) {\n\t\t\t\talert('DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17');\n\t\t\t}\n\t\n\t\t\t__mlWarning = true;\n\t\t}\n\t\n\t\treturn dt;\n\t}\n\t\n\t// Wrapper for date, datetime and time which all operate the same way with the exception of\n\t// the output string for auto locale support\n\tfunction __mlHelper (localeString) {\n\t\treturn function ( from, to, locale, def ) {\n\t\t\t// Luxon and Moment support\n\t\t\t// Argument shifting\n\t\t\tif ( arguments.length === 0 ) {\n\t\t\t\tlocale = 'en';\n\t\t\t\tto = null; // means toLocaleString\n\t\t\t\tfrom = null; // means iso8601\n\t\t\t}\n\t\t\telse if ( arguments.length === 1 ) {\n\t\t\t\tlocale = 'en';\n\t\t\t\tto = from;\n\t\t\t\tfrom = null;\n\t\t\t}\n\t\t\telse if ( arguments.length === 2 ) {\n\t\t\t\tlocale = to;\n\t\t\t\tto = from;\n\t\t\t\tfrom = null;\n\t\t\t}\n\t\n\t\t\tvar typeName = 'datetime' + (to ? '-' + to : '');\n\t\n\t\t\t// Add type detection and sorting specific to this date format - we need to be able to identify\n\t\t\t// date type columns as such, rather than as numbers in extensions. Hence the need for this.\n\t\t\tif (! DataTable.ext.type.order[typeName + '-pre']) {\n\t\t\t\tDataTable.type(typeName, {\n\t\t\t\t\tdetect: function (d) {\n\t\t\t\t\t\t// The renderer will give the value to type detect as the type!\n\t\t\t\t\t\treturn d === typeName ? typeName : false;\n\t\t\t\t\t},\n\t\t\t\t\torder: {\n\t\t\t\t\t\tpre: function (d) {\n\t\t\t\t\t\t\t// The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a\n\t\t\t\t\t\t\t// `valueOf` which gives milliseconds epoch\n\t\t\t\t\t\t\treturn d.valueOf();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tclassName: 'dt-right'\n\t\t\t\t});\n\t\t\t}\n\t\t\n\t\t\treturn function ( d, type ) {\n\t\t\t\t// Allow for a default value\n\t\t\t\tif (d === null || d === undefined) {\n\t\t\t\t\tif (def === '--now') {\n\t\t\t\t\t\t// We treat everything as UTC further down, so no changes are\n\t\t\t\t\t\t// made, as such need to get the local date / time as if it were\n\t\t\t\t\t\t// UTC\n\t\t\t\t\t\tvar local = new Date();\n\t\t\t\t\t\td = new Date( Date.UTC(\n\t\t\t\t\t\t\tlocal.getFullYear(), local.getMonth(), local.getDate(),\n\t\t\t\t\t\t\tlocal.getHours(), local.getMinutes(), local.getSeconds()\n\t\t\t\t\t\t) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\td = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif (type === 'type') {\n\t\t\t\t\t// Typing uses the type name for fast matching\n\t\t\t\t\treturn typeName;\n\t\t\t\t}\n\t\n\t\t\t\tif (d === '') {\n\t\t\t\t\treturn type !== 'sort'\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: __mldObj('0000-01-01 00:00:00', null, locale);\n\t\t\t\t}\n\t\n\t\t\t\t// Shortcut. If `from` and `to` are the same, we are using the renderer to\n\t\t\t\t// format for ordering, not display - its already in the display format.\n\t\t\t\tif ( to !== null && from === to && type !== 'sort' && type !== 'type' && ! (d instanceof Date) ) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\t\n\t\t\t\tvar dt = __mldObj(d, from, locale);\n\t\n\t\t\t\tif (dt === null) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\t\n\t\t\t\tif (type === 'sort') {\n\t\t\t\t\treturn dt;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar formatted = to === null\n\t\t\t\t\t? __mld(dt, 'toDate', 'toJSDate', '')[localeString]()\n\t\t\t\t\t: __mld(dt, 'format', 'toFormat', 'toISOString', to);\n\t\n\t\t\t\t// XSS protection\n\t\t\t\treturn type === 'display' ?\n\t\t\t\t\t_escapeHtml( formatted ) :\n\t\t\t\t\tformatted;\n\t\t\t};\n\t\t}\n\t}\n\t\n\t// Based on locale, determine standard number formatting\n\t// Fallback for legacy browsers is US English\n\tvar __thousands = ',';\n\tvar __decimal = '.';\n\t\n\tif (window.Intl !== undefined) {\n\t\ttry {\n\t\t\tvar num = new Intl.NumberFormat().formatToParts(100000.1);\n\t\t\n\t\t\tfor (var i=0 ; i<num.length ; i++) {\n\t\t\t\tif (num[i].type === 'group') {\n\t\t\t\t\t__thousands = num[i].value;\n\t\t\t\t}\n\t\t\t\telse if (num[i].type === 'decimal') {\n\t\t\t\t\t__decimal = num[i].value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (e) {\n\t\t\t// noop\n\t\t}\n\t}\n\t\n\t// Formatted date time detection - use by declaring the formats you are going to use\n\tDataTable.datetime = function ( format, locale ) {\n\t\tvar typeName = 'datetime-' + format;\n\t\n\t\tif (! locale) {\n\t\t\tlocale = 'en';\n\t\t}\n\t\n\t\tif (! DataTable.ext.type.order[typeName]) {\n\t\t\tDataTable.type(typeName, {\n\t\t\t\tdetect: function (d) {\n\t\t\t\t\tvar dt = __mldObj(d, format, locale);\n\t\t\t\t\treturn d === '' || dt ? typeName : false;\n\t\t\t\t},\n\t\t\t\torder: {\n\t\t\t\t\tpre: function (d) {\n\t\t\t\t\t\treturn __mldObj(d, format, locale) || 0;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tclassName: 'dt-right'\n\t\t\t});\n\t\t}\n\t}\n\t\n\t/**\n\t * Helpers for `columns.render`.\n\t *\n\t * The options defined here can be used with the `columns.render` initialisation\n\t * option to provide a display renderer. The following functions are defined:\n\t *\n\t * * `moment` - Uses the MomentJS library to convert from a given format into another.\n\t * This renderer has three overloads:\n\t *   * 1 parameter:\n\t *     * `string` - Format to convert to (assumes input is ISO8601 and locale is `en`)\n\t *   * 2 parameters:\n\t *     * `string` - Format to convert from\n\t *     * `string` - Format to convert to. Assumes `en` locale\n\t *   * 3 parameters:\n\t *     * `string` - Format to convert from\n\t *     * `string` - Format to convert to\n\t *     * `string` - Locale\n\t * * `number` - Will format numeric data (defined by `columns.data`) for\n\t *   display, retaining the original unformatted data for sorting and filtering.\n\t *   It takes 5 parameters:\n\t *   * `string` - Thousands grouping separator\n\t *   * `string` - Decimal point indicator\n\t *   * `integer` - Number of decimal points to show\n\t *   * `string` (optional) - Prefix.\n\t *   * `string` (optional) - Postfix (/suffix).\n\t * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n\t *   parameters.\n\t *\n\t * @example\n\t *   // Column definition using the number renderer\n\t *   {\n\t *     data: \"salary\",\n\t *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n\t *   }\n\t *\n\t * @namespace\n\t */\n\tDataTable.render = {\n\t\tdate: __mlHelper('toLocaleDateString'),\n\t\tdatetime: __mlHelper('toLocaleString'),\n\t\ttime: __mlHelper('toLocaleTimeString'),\n\t\tnumber: function ( thousands, decimal, precision, prefix, postfix ) {\n\t\t\t// Auto locale detection\n\t\t\tif (thousands === null || thousands === undefined) {\n\t\t\t\tthousands = __thousands;\n\t\t\t}\n\t\n\t\t\tif (decimal === null || decimal === undefined) {\n\t\t\t\tdecimal = __decimal;\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\tdisplay: function ( d ) {\n\t\t\t\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\n\t\t\t\t\t\treturn d;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (d === '' || d === null) {\n\t\t\t\t\t\treturn d;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar negative = d < 0 ? '-' : '';\n\t\t\t\t\tvar flo = parseFloat( d );\n\t\t\t\t\tvar abs = Math.abs(flo);\n\t\n\t\t\t\t\t// Scientific notation for large and small numbers\n\t\t\t\t\tif (abs >= 100000000000 || (abs < 0.0001 && abs !== 0) ) {\n\t\t\t\t\t\tvar exp = flo.toExponential(precision).split(/e\\+?/);\n\t\t\t\t\t\treturn exp[0] + ' x 10<sup>' + exp[1] + '</sup>';\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If NaN then there isn't much formatting that we can do - just\n\t\t\t\t\t// return immediately, escaping any HTML (this was supposed to\n\t\t\t\t\t// be a number after all)\n\t\t\t\t\tif ( isNaN( flo ) ) {\n\t\t\t\t\t\treturn _escapeHtml( d );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tflo = flo.toFixed( precision );\n\t\t\t\t\td = Math.abs( flo );\n\t\n\t\t\t\t\tvar intPart = parseInt( d, 10 );\n\t\t\t\t\tvar floatPart = precision ?\n\t\t\t\t\t\tdecimal+(d - intPart).toFixed( precision ).substring( 2 ):\n\t\t\t\t\t\t'';\n\t\n\t\t\t\t\t// If zero, then can't have a negative prefix\n\t\t\t\t\tif (intPart === 0 && parseFloat(floatPart) === 0) {\n\t\t\t\t\t\tnegative = '';\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn negative + (prefix||'') +\n\t\t\t\t\t\tintPart.toString().replace(\n\t\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\n\t\t\t\t\t\t) +\n\t\t\t\t\t\tfloatPart +\n\t\t\t\t\t\t(postfix||'');\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\n\t\ttext: function () {\n\t\t\treturn {\n\t\t\t\tdisplay: _escapeHtml,\n\t\t\t\tfilter: _escapeHtml\n\t\t\t};\n\t\t}\n\t};\n\t\n\t\n\tvar _extTypes = DataTable.ext.type;\n\t\n\t// Get / set type\n\tDataTable.type = function (name, prop, val) {\n\t\tif (! prop) {\n\t\t\treturn {\n\t\t\t\tclassName: _extTypes.className[name],\n\t\t\t\tdetect: _extTypes.detect.find(function (fn) {\n\t\t\t\t\treturn fn._name === name;\n\t\t\t\t}),\n\t\t\t\torder: {\n\t\t\t\t\tpre: _extTypes.order[name + '-pre'],\n\t\t\t\t\tasc: _extTypes.order[name + '-asc'],\n\t\t\t\t\tdesc: _extTypes.order[name + '-desc']\n\t\t\t\t},\n\t\t\t\trender: _extTypes.render[name],\n\t\t\t\tsearch: _extTypes.search[name]\n\t\t\t};\n\t\t}\n\t\n\t\tvar setProp = function(prop, propVal) {\n\t\t\t_extTypes[prop][name] = propVal;\n\t\t};\n\t\tvar setDetect = function (detect) {\n\t\t\t// `detect` can be a function or an object - we set a name\n\t\t\t// property for either - that is used for the detection\n\t\t\tObject.defineProperty(detect, \"_name\", {value: name});\n\t\n\t\t\tvar idx = _extTypes.detect.findIndex(function (item) {\n\t\t\t\treturn item._name === name;\n\t\t\t});\n\t\n\t\t\tif (idx === -1) {\n\t\t\t\t_extTypes.detect.unshift(detect);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_extTypes.detect.splice(idx, 1, detect);\n\t\t\t}\n\t\t};\n\t\tvar setOrder = function (obj) {\n\t\t\t_extTypes.order[name + '-pre'] = obj.pre; // can be undefined\n\t\t\t_extTypes.order[name + '-asc'] = obj.asc; // can be undefined\n\t\t\t_extTypes.order[name + '-desc'] = obj.desc; // can be undefined\n\t\t};\n\t\n\t\t// prop is optional\n\t\tif (val === undefined) {\n\t\t\tval = prop;\n\t\t\tprop = null;\n\t\t}\n\t\n\t\tif (prop === 'className') {\n\t\t\tsetProp('className', val);\n\t\t}\n\t\telse if (prop === 'detect') {\n\t\t\tsetDetect(val);\n\t\t}\n\t\telse if (prop === 'order') {\n\t\t\tsetOrder(val);\n\t\t}\n\t\telse if (prop === 'render') {\n\t\t\tsetProp('render', val);\n\t\t}\n\t\telse if (prop === 'search') {\n\t\t\tsetProp('search', val);\n\t\t}\n\t\telse if (! prop) {\n\t\t\tif (val.className) {\n\t\t\t\tsetProp('className', val.className);\n\t\t\t}\n\t\n\t\t\tif (val.detect !== undefined) {\n\t\t\t\tsetDetect(val.detect);\n\t\t\t}\n\t\n\t\t\tif (val.order) {\n\t\t\t\tsetOrder(val.order);\n\t\t\t}\n\t\n\t\t\tif (val.render !== undefined) {\n\t\t\t\tsetProp('render', val.render);\n\t\t\t}\n\t\n\t\t\tif (val.search !== undefined) {\n\t\t\t\tsetProp('search', val.search);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Get a list of types\n\tDataTable.types = function () {\n\t\treturn _extTypes.detect.map(function (fn) {\n\t\t\treturn fn._name;\n\t\t});\n\t};\n\t\n\tvar __diacriticSort = function (a, b) {\n\t\ta = a !== null && a !== undefined ? a.toString().toLowerCase() : '';\n\t\tb = b !== null && b !== undefined ? b.toString().toLowerCase() : '';\n\t\n\t\t// Checked for `navigator.languages` support in `oneOf` so this code can't execute in old\n\t\t// Safari and thus can disable this check\n\t\t// eslint-disable-next-line compat/compat\n\t\treturn a.localeCompare(b, navigator.languages[0] || navigator.language, {\n\t\t\tnumeric: true,\n\t\t\tignorePunctuation: true,\n\t\t});\n\t}\n\t\n\tvar __diacriticHtmlSort = function (a, b) {\n\t\ta = _stripHtml(a);\n\t\tb = _stripHtml(b);\n\t\n\t\treturn __diacriticSort(a, b);\n\t}\n\t\n\t//\n\t// Built in data types\n\t//\n\t\n\tDataTable.type('string', {\n\t\tdetect: function () {\n\t\t\treturn 'string';\n\t\t},\n\t\torder: {\n\t\t\tpre: function ( a ) {\n\t\t\t\t// This is a little complex, but faster than always calling toString,\n\t\t\t\t// http://jsperf.com/tostring-v-check\n\t\t\t\treturn _empty(a) && typeof a !== 'boolean' ?\n\t\t\t\t\t'' :\n\t\t\t\t\ttypeof a === 'string' ?\n\t\t\t\t\t\ta.toLowerCase() :\n\t\t\t\t\t\t! a.toString ?\n\t\t\t\t\t\t\t'' :\n\t\t\t\t\t\t\ta.toString();\n\t\t\t}\n\t\t},\n\t\tsearch: _filterString(false, true)\n\t});\n\t\n\tDataTable.type('string-utf8', {\n\t\tdetect: {\n\t\t\tallOf: function ( d ) {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\toneOf: function ( d ) {\n\t\t\t\t// At least one data point must contain a non-ASCII character\n\t\t\t\t// This line will also check if navigator.languages is supported or not. If not (Safari 10.0-)\n\t\t\t\t// this data type won't be supported.\n\t\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t\treturn ! _empty( d ) && navigator.languages && typeof d === 'string' && d.match(/[^\\x00-\\x7F]/);\n\t\t\t}\n\t\t},\n\t\torder: {\n\t\t\tasc: __diacriticSort,\n\t\t\tdesc: function (a, b) {\n\t\t\t\treturn __diacriticSort(a, b) * -1;\n\t\t\t}\n\t\t},\n\t\tsearch: _filterString(false, true)\n\t});\n\t\n\t\n\tDataTable.type('html', {\n\t\tdetect: {\n\t\t\tallOf: function ( d ) {\n\t\t\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1);\n\t\t\t},\n\t\t\toneOf: function ( d ) {\n\t\t\t\t// At least one data point must contain a `<`\n\t\t\t\treturn ! _empty( d ) && typeof d === 'string' && d.indexOf('<') !== -1;\n\t\t\t}\n\t\t},\n\t\torder: {\n\t\t\tpre: function ( a ) {\n\t\t\t\treturn _empty(a) ?\n\t\t\t\t\t'' :\n\t\t\t\t\ta.replace ?\n\t\t\t\t\t\t_stripHtml(a).trim().toLowerCase() :\n\t\t\t\t\t\ta+'';\n\t\t\t}\n\t\t},\n\t\tsearch: _filterString(true, true)\n\t});\n\t\n\t\n\tDataTable.type('html-utf8', {\n\t\tdetect: {\n\t\t\tallOf: function ( d ) {\n\t\t\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1);\n\t\t\t},\n\t\t\toneOf: function ( d ) {\n\t\t\t\t// At least one data point must contain a `<` and a non-ASCII character\n\t\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t\treturn navigator.languages &&\n\t\t\t\t\t! _empty( d ) &&\n\t\t\t\t\ttypeof d === 'string' &&\n\t\t\t\t\td.indexOf('<') !== -1 &&\n\t\t\t\t\ttypeof d === 'string' && d.match(/[^\\x00-\\x7F]/);\n\t\t\t}\n\t\t},\n\t\torder: {\n\t\t\tasc: __diacriticHtmlSort,\n\t\t\tdesc: function (a, b) {\n\t\t\t\treturn __diacriticHtmlSort(a, b) * -1;\n\t\t\t}\n\t\t},\n\t\tsearch: _filterString(true, true)\n\t});\n\t\n\t\n\tDataTable.type('date', {\n\t\tclassName: 'dt-type-date',\n\t\tdetect: {\n\t\t\tallOf: function ( d ) {\n\t\t\t\t// V8 tries _very_ hard to make a string passed into `Date.parse()`\n\t\t\t\t// valid, so we need to use a regex to restrict date formats. Use a\n\t\t\t\t// plug-in for anything other than ISO8601 style strings\n\t\t\t\tif ( d && !(d instanceof Date) && ! _re_date.test(d) ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tvar parsed = Date.parse(d);\n\t\t\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d);\n\t\t\t},\n\t\t\toneOf: function ( d ) {\n\t\t\t\t// At least one entry must be a date or a string with a date\n\t\t\t\treturn (d instanceof Date) || (typeof d === 'string' && _re_date.test(d));\n\t\t\t}\n\t\t},\n\t\torder: {\n\t\t\tpre: function ( d ) {\n\t\t\t\tvar ts = Date.parse( d );\n\t\t\t\treturn isNaN(ts) ? -Infinity : ts;\n\t\t\t}\n\t\t}\n\t});\n\t\n\t\n\tDataTable.type('html-num-fmt', {\n\t\tclassName: 'dt-type-numeric',\n\t\tdetect: {\n\t\t\tallOf: function ( d, settings ) {\n\t\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\t\treturn _htmlNumeric( d, decimal, true, false );\n\t\t\t},\n\t\t\toneOf: function (d, settings) {\n\t\t\t\t// At least one data point must contain a numeric value\n\t\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\t\treturn _htmlNumeric( d, decimal, true, false );\n\t\t\t}\n\t\t},\n\t\torder: {\n\t\t\tpre: function ( d, s ) {\n\t\t\t\tvar dp = s.oLanguage.sDecimal;\n\t\t\t\treturn __numericReplace( d, dp, _re_html, _re_formatted_numeric );\n\t\t\t}\n\t\t},\n\t\tsearch: _filterString(true, true)\n\t});\n\t\n\t\n\tDataTable.type('html-num', {\n\t\tclassName: 'dt-type-numeric',\n\t\tdetect: {\n\t\t\tallOf: function ( d, settings ) {\n\t\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\t\treturn _htmlNumeric( d, decimal, false, true );\n\t\t\t},\n\t\t\toneOf: function (d, settings) {\n\t\t\t\t// At least one data point must contain a numeric value\n\t\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\t\treturn _htmlNumeric( d, decimal, false, false );\n\t\t\t}\n\t\t},\n\t\torder: {\n\t\t\tpre: function ( d, s ) {\n\t\t\t\tvar dp = s.oLanguage.sDecimal;\n\t\t\t\treturn __numericReplace( d, dp, _re_html );\n\t\t\t}\n\t\t},\n\t\tsearch: _filterString(true, true)\n\t});\n\t\n\t\n\tDataTable.type('num-fmt', {\n\t\tclassName: 'dt-type-numeric',\n\t\tdetect: {\n\t\t\tallOf: function ( d, settings ) {\n\t\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\t\treturn _isNumber( d, decimal, true, true );\n\t\t\t},\n\t\t\toneOf: function (d, settings) {\n\t\t\t\t// At least one data point must contain a numeric value\n\t\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\t\treturn _isNumber( d, decimal, true, false );\n\t\t\t}\n\t\t},\n\t\torder: {\n\t\t\tpre: function ( d, s ) {\n\t\t\t\tvar dp = s.oLanguage.sDecimal;\n\t\t\t\treturn __numericReplace( d, dp, _re_formatted_numeric );\n\t\t\t}\n\t\t}\n\t});\n\t\n\t\n\tDataTable.type('num', {\n\t\tclassName: 'dt-type-numeric',\n\t\tdetect: {\n\t\t\tallOf: function ( d, settings ) {\n\t\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\t\treturn _isNumber( d, decimal, false, true );\n\t\t\t},\n\t\t\toneOf: function (d, settings) {\n\t\t\t\t// At least one data point must contain a numeric value\n\t\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\t\treturn _isNumber( d, decimal, false, false );\n\t\t\t}\n\t\t},\n\t\torder: {\n\t\t\tpre: function (d, s) {\n\t\t\t\tvar dp = s.oLanguage.sDecimal;\n\t\t\t\treturn __numericReplace( d, dp );\n\t\t\t}\n\t\t}\n\t});\n\t\n\t\n\t\n\t\n\tvar __numericReplace = function ( d, decimalPlace, re1, re2 ) {\n\t\tif ( d !== 0 && (!d || d === '-') ) {\n\t\t\treturn -Infinity;\n\t\t}\n\t\t\n\t\tvar type = typeof d;\n\t\n\t\tif (type === 'number' || type === 'bigint') {\n\t\t\treturn d;\n\t\t}\n\t\n\t\t// If a decimal place other than `.` is used, it needs to be given to the\n\t\t// function so we can detect it and replace with a `.` which is the only\n\t\t// decimal place Javascript recognises - it is not locale aware.\n\t\tif ( decimalPlace ) {\n\t\t\td = _numToDecimal( d, decimalPlace );\n\t\t}\n\t\n\t\tif ( d.replace ) {\n\t\t\tif ( re1 ) {\n\t\t\t\td = d.replace( re1, '' );\n\t\t\t}\n\t\n\t\t\tif ( re2 ) {\n\t\t\t\td = d.replace( re2, '' );\n\t\t\t}\n\t\t}\n\t\n\t\treturn d * 1;\n\t};\n\t\n\t\n\t$.extend( true, DataTable.ext.renderer, {\n\t\tfooter: {\n\t\t\t_: function ( settings, cell, classes ) {\n\t\t\t\tcell.addClass(classes.tfoot.cell);\n\t\t\t}\n\t\t},\n\t\n\t\theader: {\n\t\t\t_: function ( settings, cell, classes ) {\n\t\t\t\tcell.addClass(classes.thead.cell);\n\t\n\t\t\t\tif (! settings.oFeatures.bSort) {\n\t\t\t\t\tcell.addClass(classes.order.none);\n\t\t\t\t}\n\t\n\t\t\t\tvar legacyTop = settings.bSortCellsTop;\n\t\t\t\tvar headerRows = cell.closest('thead').find('tr');\n\t\t\t\tvar rowIdx = cell.parent().index();\n\t\n\t\t\t\t// Conditions to not apply the ordering icons\n\t\t\t\tif (\n\t\t\t\t\t// Cells and rows which have the attribute to disable the icons\n\t\t\t\t\tcell.attr('data-dt-order') === 'disable' ||\n\t\t\t\t\tcell.parent().attr('data-dt-order') === 'disable' ||\n\t\n\t\t\t\t\t// Legacy support for `orderCellsTop`. If it is set, then cells\n\t\t\t\t\t// which are not in the top or bottom row of the header (depending\n\t\t\t\t\t// on the value) do not get the sorting classes applied to them\n\t\t\t\t\t(legacyTop === true && rowIdx !== 0) ||\n\t\t\t\t\t(legacyTop === false && rowIdx !== headerRows.length - 1)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// No additional mark-up required\n\t\t\t\t// Attach a sort listener to update on sort - note that using the\n\t\t\t\t// `DT` namespace will allow the event to be removed automatically\n\t\t\t\t// on destroy, while the `dt` namespaced event is the one we are\n\t\t\t\t// listening for\n\t\t\t\t$(settings.nTable).on( 'order.dt.DT column-visibility.dt.DT', function ( e, ctx ) {\n\t\t\t\t\tif ( settings !== ctx ) { // need to check this this is the host\n\t\t\t\t\t\treturn;               // table, not a nested one\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar sorting = ctx.sortDetails;\n\t\n\t\t\t\t\tif (! sorting) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar i;\n\t\t\t\t\tvar orderClasses = classes.order;\n\t\t\t\t\tvar columns = ctx.api.columns( cell );\n\t\t\t\t\tvar col = settings.aoColumns[columns.flatten()[0]];\n\t\t\t\t\tvar orderable = columns.orderable().includes(true);\n\t\t\t\t\tvar ariaType = '';\n\t\t\t\t\tvar indexes = columns.indexes();\n\t\t\t\t\tvar sortDirs = columns.orderable(true).flatten();\n\t\t\t\t\tvar orderedColumns = _pluck(sorting, 'col');\n\t\t\t\t\tvar tabIndex = settings.iTabIndex;\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.removeClass(\n\t\t\t\t\t\t\torderClasses.isAsc +' '+\n\t\t\t\t\t\t\torderClasses.isDesc\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.toggleClass( orderClasses.none, ! orderable )\n\t\t\t\t\t\t.toggleClass( orderClasses.canAsc, orderable && sortDirs.includes('asc') )\n\t\t\t\t\t\t.toggleClass( orderClasses.canDesc, orderable && sortDirs.includes('desc') );\n\t\n\t\t\t\t\t// Determine if all of the columns that this cell covers are included in the\n\t\t\t\t\t// current ordering\n\t\t\t\t\tvar isOrdering = true;\n\t\t\t\t\t\n\t\t\t\t\tfor (i=0; i<indexes.length; i++) {\n\t\t\t\t\t\tif (! orderedColumns.includes(indexes[i])) {\n\t\t\t\t\t\t\tisOrdering = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( isOrdering ) {\n\t\t\t\t\t\t// Get the ordering direction for the columns under this cell\n\t\t\t\t\t\t// Note that it is possible for a cell to be asc and desc sorting\n\t\t\t\t\t\t// (column spanning cells)\n\t\t\t\t\t\tvar orderDirs = columns.order();\n\t\n\t\t\t\t\t\tcell.addClass(\n\t\t\t\t\t\t\torderDirs.includes('asc') ? orderClasses.isAsc : '' +\n\t\t\t\t\t\t\torderDirs.includes('desc') ? orderClasses.isDesc : ''\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Find the first visible column that has ordering applied to it - it get's\n\t\t\t\t\t// the aria information, as the ARIA spec says that only one column should\n\t\t\t\t\t// be marked with aria-sort\n\t\t\t\t\tvar firstVis = -1; // column index\n\t\n\t\t\t\t\tfor (i=0; i<orderedColumns.length; i++) {\n\t\t\t\t\t\tif (settings.aoColumns[orderedColumns[i]].bVisible) {\n\t\t\t\t\t\t\tfirstVis = orderedColumns[i];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (indexes[0] == firstVis) {\n\t\t\t\t\t\tvar firstSort = sorting[0];\n\t\t\t\t\t\tvar sortOrder = col.asSorting;\n\t\n\t\t\t\t\t\tcell.attr('aria-sort', firstSort.dir === 'asc' ? 'ascending' : 'descending');\n\t\n\t\t\t\t\t\t// Determine if the next click will remove sorting or change the sort\n\t\t\t\t\t\tariaType = ! sortOrder[firstSort.index + 1] ? 'Remove' : 'Reverse';\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcell.removeAttr('aria-sort');\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Make the headers tab-able for keyboard navigation\n\t\t\t\t\tif (orderable) {\n\t\t\t\t\t\tvar orderSpan = cell.find('.dt-column-order');\n\t\t\t\t\t\t\n\t\t\t\t\t\torderSpan\n\t\t\t\t\t\t\t.attr('role', 'button')\n\t\t\t\t\t\t\t.attr('aria-label', orderable\n\t\t\t\t\t\t\t\t? col.ariaTitle + ctx.api.i18n('oAria.orderable' + ariaType)\n\t\t\t\t\t\t\t\t: col.ariaTitle\n\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\tif (tabIndex !== -1) {\n\t\t\t\t\t\t\torderSpan.attr('tabindex', tabIndex);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\t\n\t\tlayout: {\n\t\t\t_: function ( settings, container, items ) {\n\t\t\t\tvar classes = settings.oClasses.layout;\n\t\t\t\tvar row = $('<div/>')\n\t\t\t\t\t.attr('id', items.id || null)\n\t\t\t\t\t.addClass(items.className || classes.row)\n\t\t\t\t\t.appendTo( container );\n\t\n\t\t\t\tDataTable.ext.renderer.layout._forLayoutRow(items, function (key, val) {\n\t\t\t\t\tif (key === 'id' || key === 'className') {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar klass = '';\n\t\n\t\t\t\t\tif (val.table) {\n\t\t\t\t\t\trow.addClass(classes.tableRow);\n\t\t\t\t\t\tklass += classes.tableCell + ' ';\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (key === 'start') {\n\t\t\t\t\t\tklass += classes.start;\n\t\t\t\t\t}\n\t\t\t\t\telse if (key === 'end') {\n\t\t\t\t\t\tklass += classes.end;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tklass += classes.full;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t.attr({\n\t\t\t\t\t\t\tid: val.id || null,\n\t\t\t\t\t\t\t\"class\": val.className\n\t\t\t\t\t\t\t\t? val.className\n\t\t\t\t\t\t\t\t: classes.cell + ' ' + klass\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.append( val.contents )\n\t\t\t\t\t\t.appendTo( row );\n\t\t\t\t});\n\t\t\t},\n\t\n\t\t\t// Shared for use by the styling frameworks\n\t\t\t_forLayoutRow: function (items, fn) {\n\t\t\t\t// As we are inserting dom elements, we need start / end in a\n\t\t\t\t// specific order, this function is used for sorting the layout\n\t\t\t\t// keys.\n\t\t\t\tvar layoutEnum = function (x) {\n\t\t\t\t\tswitch (x) {\n\t\t\t\t\t\tcase '': return 0;\n\t\t\t\t\t\tcase 'start': return 1;\n\t\t\t\t\t\tcase 'end': return 2;\n\t\t\t\t\t\tdefault: return 3;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\tObject\n\t\t\t\t\t.keys(items)\n\t\t\t\t\t.sort(function (a, b) {\n\t\t\t\t\t\treturn layoutEnum(a) - layoutEnum(b);\n\t\t\t\t\t})\n\t\t\t\t\t.forEach(function (key) {\n\t\t\t\t\t\tfn(key, items[key]);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t\n\tDataTable.feature = {};\n\t\n\t// Third parameter is internal only!\n\tDataTable.feature.register = function ( name, cb, legacy ) {\n\t\tDataTable.ext.features[ name ] = cb;\n\t\n\t\tif (legacy) {\n\t\t\t_ext.feature.push({\n\t\t\t\tcFeature: legacy,\n\t\t\t\tfnInit: cb\n\t\t\t});\n\t\t}\n\t};\n\t\n\tfunction _divProp(el, prop, val) {\n\t\tif (val) {\n\t\t\tel[prop] = val;\n\t\t}\n\t}\n\t\n\tDataTable.feature.register( 'div', function ( settings, opts ) {\n\t\tvar n = $('<div>')[0];\n\t\n\t\tif (opts) {\n\t\t\t_divProp(n, 'className', opts.className);\n\t\t\t_divProp(n, 'id', opts.id);\n\t\t\t_divProp(n, 'innerHTML', opts.html);\n\t\t\t_divProp(n, 'textContent', opts.text);\n\t\t}\n\t\n\t\treturn n;\n\t} );\n\t\n\tDataTable.feature.register( 'info', function ( settings, opts ) {\n\t\t// For compatibility with the legacy `info` top level option\n\t\tif (! settings.oFeatures.bInfo) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tvar\n\t\t\tlang  = settings.oLanguage,\n\t\t\ttid = settings.sTableId,\n\t\t\tn = $('<div/>', {\n\t\t\t\t'class': settings.oClasses.info.container,\n\t\t\t} );\n\t\n\t\topts = $.extend({\n\t\t\tcallback: lang.fnInfoCallback,\n\t\t\tempty: lang.sInfoEmpty,\n\t\t\tpostfix: lang.sInfoPostFix,\n\t\t\tsearch: lang.sInfoFiltered,\n\t\t\ttext: lang.sInfo,\n\t\t}, opts);\n\t\n\t\n\t\t// Update display on each draw\n\t\tsettings.aoDrawCallback.push(function (s) {\n\t\t\t_fnUpdateInfo(s, opts, n);\n\t\t});\n\t\n\t\t// For the first info display in the table, we add a callback and aria information.\n\t\tif (! settings._infoEl) {\n\t\t\tn.attr({\n\t\t\t\t'aria-live': 'polite',\n\t\t\t\tid: tid+'_info',\n\t\t\t\trole: 'status'\n\t\t\t});\n\t\n\t\t\t// Table is described by our info div\n\t\t\t$(settings.nTable).attr( 'aria-describedby', tid+'_info' );\n\t\n\t\t\tsettings._infoEl = n;\n\t\t}\n\t\n\t\treturn n;\n\t}, 'i' );\n\t\n\t/**\n\t * Update the information elements in the display\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnUpdateInfo ( settings, opts, node )\n\t{\n\t\tvar\n\t\t\tstart = settings._iDisplayStart+1,\n\t\t\tend   = settings.fnDisplayEnd(),\n\t\t\tmax   = settings.fnRecordsTotal(),\n\t\t\ttotal = settings.fnRecordsDisplay(),\n\t\t\tout   = total\n\t\t\t\t? opts.text\n\t\t\t\t: opts.empty;\n\t\n\t\tif ( total !== max ) {\n\t\t\t// Record set after filtering\n\t\t\tout += ' ' + opts.search;\n\t\t}\n\t\n\t\t// Convert the macros\n\t\tout += opts.postfix;\n\t\tout = _fnMacros( settings, out );\n\t\n\t\tif ( opts.callback ) {\n\t\t\tout = opts.callback.call( settings.oInstance,\n\t\t\t\tsettings, start, end, max, total, out\n\t\t\t);\n\t\t}\n\t\n\t\tnode.html( out );\n\t\n\t\t_fnCallbackFire(settings, null, 'info', [settings, node[0], out]);\n\t}\n\t\n\tvar __searchCounter = 0;\n\t\n\t// opts\n\t// - text\n\t// - placeholder\n\tDataTable.feature.register( 'search', function ( settings, opts ) {\n\t\t// Don't show the input if filtering isn't available on the table\n\t\tif (! settings.oFeatures.bFilter) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tvar classes = settings.oClasses.search;\n\t\tvar tableId = settings.sTableId;\n\t\tvar language = settings.oLanguage;\n\t\tvar previousSearch = settings.oPreviousSearch;\n\t\tvar input = '<input type=\"search\" class=\"'+classes.input+'\"/>';\n\t\n\t\topts = $.extend({\n\t\t\tplaceholder: language.sSearchPlaceholder,\n\t\t\tprocessing: false,\n\t\t\ttext: language.sSearch\n\t\t}, opts);\n\t\n\t\t// The _INPUT_ is optional - is appended if not present\n\t\tif (opts.text.indexOf('_INPUT_') === -1) {\n\t\t\topts.text += '_INPUT_';\n\t\t}\n\t\n\t\topts.text = _fnMacros(settings, opts.text);\n\t\n\t\t// We can put the <input> outside of the label if it is at the start or end\n\t\t// which helps improve accessability (not all screen readers like implicit\n\t\t// for elements).\n\t\tvar end = opts.text.match(/_INPUT_$/);\n\t\tvar start = opts.text.match(/^_INPUT_/);\n\t\tvar removed = opts.text.replace(/_INPUT_/, '');\n\t\tvar str = '<label>' + opts.text + '</label>';\n\t\n\t\tif (start) {\n\t\t\tstr = '_INPUT_<label>' + removed + '</label>';\n\t\t}\n\t\telse if (end) {\n\t\t\tstr = '<label>' + removed + '</label>_INPUT_';\n\t\t}\n\t\n\t\tvar filter = $('<div>')\n\t\t\t.addClass(classes.container)\n\t\t\t.append(str.replace(/_INPUT_/, input));\n\t\n\t\t// add for and id to label and input\n\t\tfilter.find('label').attr('for', 'dt-search-' + __searchCounter);\n\t\tfilter.find('input').attr('id', 'dt-search-' + __searchCounter);\n\t\t__searchCounter++;\n\t\n\t\tvar searchFn = function(event) {\n\t\t\tvar val = this.value;\n\t\n\t\t\tif(previousSearch.return && event.key !== \"Enter\") {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t/* Now do the filter */\n\t\t\tif ( val != previousSearch.search ) {\n\t\t\t\t_fnProcessingRun(settings, opts.processing, function () {\n\t\t\t\t\tpreviousSearch.search = val;\n\t\t\t\n\t\t\t\t\t_fnFilterComplete( settings, previousSearch );\n\t\t\t\n\t\t\t\t\t// Need to redraw, without resorting\n\t\t\t\t\tsettings._iDisplayStart = 0;\n\t\t\t\t\t_fnDraw( settings );\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\n\t\tvar searchDelay = settings.searchDelay !== null ?\n\t\t\tsettings.searchDelay :\n\t\t\t0;\n\t\n\t\tvar jqFilter = $('input', filter)\n\t\t\t.val( previousSearch.search )\n\t\t\t.attr( 'placeholder', opts.placeholder )\n\t\t\t.on(\n\t\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\n\t\t\t\tsearchDelay ?\n\t\t\t\t\tDataTable.util.debounce( searchFn, searchDelay ) :\n\t\t\t\t\tsearchFn\n\t\t\t)\n\t\t\t.on( 'mouseup.DT', function(e) {\n\t\t\t\t// Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\n\t\t\t\t// on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\n\t\t\t\t// checks the value to see if it has changed. In other browsers it won't have.\n\t\t\t\tsetTimeout( function () {\n\t\t\t\t\tsearchFn.call(jqFilter[0], e);\n\t\t\t\t}, 10);\n\t\t\t} )\n\t\t\t.on( 'keypress.DT', function(e) {\n\t\t\t\t/* Prevent form submission */\n\t\t\t\tif ( e.keyCode == 13 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.attr('aria-controls', tableId);\n\t\n\t\t// Update the input elements whenever the table is filtered\n\t\t$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\n\t\t\tif ( settings === s && jqFilter[0] !== document.activeElement ) {\n\t\t\t\tjqFilter.val( typeof previousSearch.search !== 'function'\n\t\t\t\t\t? previousSearch.search\n\t\t\t\t\t: ''\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\t\n\t\treturn filter;\n\t}, 'f' );\n\t\n\t// opts\n\t// - type - button configuration\n\t// - buttons - number of buttons to show - must be odd\n\tDataTable.feature.register( 'paging', function ( settings, opts ) {\n\t\t// Don't show the paging input if the table doesn't have paging enabled\n\t\tif (! settings.oFeatures.bPaginate) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\topts = $.extend({\n\t\t\tbuttons: DataTable.ext.pager.numbers_length,\n\t\t\ttype: settings.sPaginationType,\n\t\t\tboundaryNumbers: true,\n\t\t\tfirstLast: true,\n\t\t\tpreviousNext: true,\n\t\t\tnumbers: true\n\t\t}, opts);\n\t\n\t\tvar host = $('<div/>')\n\t\t\t.addClass(settings.oClasses.paging.container + (opts.type ? ' paging_' + opts.type : ''))\n\t\t\t.append(\n\t\t\t\t$('<nav>')\n\t\t\t\t\t.attr('aria-label', 'pagination')\n\t\t\t\t\t.addClass(settings.oClasses.paging.nav)\n\t\t\t);\n\t\tvar draw = function () {\n\t\t\t_pagingDraw(settings, host.children(), opts);\n\t\t};\n\t\n\t\tsettings.aoDrawCallback.push(draw);\n\t\n\t\t// Responsive redraw of paging control\n\t\t$(settings.nTable).on('column-sizing.dt.DT', draw);\n\t\n\t\treturn host;\n\t}, 'p' );\n\t\n\t/**\n\t * Dynamically create the button type array based on the configuration options.\n\t * This will only happen if the paging type is not defined.\n\t */\n\tfunction _pagingDynamic(opts) {\n\t\tvar out = [];\n\t\n\t\tif (opts.numbers) {\n\t\t\tout.push('numbers');\n\t\t}\n\t\n\t\tif (opts.previousNext) {\n\t\t\tout.unshift('previous');\n\t\t\tout.push('next');\n\t\t}\n\t\n\t\tif (opts.firstLast) {\n\t\t\tout.unshift('first');\n\t\t\tout.push('last');\n\t\t}\n\t\n\t\treturn out;\n\t}\n\t\n\tfunction _pagingDraw(settings, host, opts) {\n\t\tif (! settings._bInitComplete) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\tplugin = opts.type\n\t\t\t\t? DataTable.ext.pager[ opts.type ]\n\t\t\t\t: _pagingDynamic,\n\t\t\taria = settings.oLanguage.oAria.paginate || {},\n\t\t\tstart      = settings._iDisplayStart,\n\t\t\tlen        = settings._iDisplayLength,\n\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\tall        = len === -1,\n\t\t\tpage = all ? 0 : Math.ceil( start / len ),\n\t\t\tpages = all ? 1 : Math.ceil( visRecords / len ),\n\t\t\tbuttons = [],\n\t\t\tbuttonEls = [],\n\t\t\tbuttonsNested = plugin(opts)\n\t\t\t\t.map(function (val) {\n\t\t\t\t\treturn val === 'numbers'\n\t\t\t\t\t\t? _pagingNumbers(page, pages, opts.buttons, opts.boundaryNumbers)\n\t\t\t\t\t\t: val;\n\t\t\t\t});\n\t\n\t\t// .flat() would be better, but not supported in old Safari\n\t\tbuttons = buttons.concat.apply(buttons, buttonsNested);\n\t\n\t\tfor (var i=0 ; i<buttons.length ; i++) {\n\t\t\tvar button = buttons[i];\n\t\n\t\t\tvar btnInfo = _pagingButtonInfo(settings, button, page, pages);\n\t\t\tvar btn = _fnRenderer( settings, 'pagingButton' )(\n\t\t\t\tsettings,\n\t\t\t\tbutton,\n\t\t\t\tbtnInfo.display,\n\t\t\t\tbtnInfo.active,\n\t\t\t\tbtnInfo.disabled\n\t\t\t);\n\t\n\t\t\tvar ariaLabel = typeof button === 'string'\n\t\t\t\t? aria[ button ]\n\t\t\t\t: aria.number\n\t\t\t\t\t? aria.number + (button+1)\n\t\t\t\t\t: null;\n\t\n\t\t\t// Common attributes\n\t\t\t$(btn.clicker).attr({\n\t\t\t\t'aria-controls': settings.sTableId,\n\t\t\t\t'aria-disabled': btnInfo.disabled ? 'true' : null,\n\t\t\t\t'aria-current': btnInfo.active ? 'page' : null,\n\t\t\t\t'aria-label': ariaLabel,\n\t\t\t\t'data-dt-idx': button,\n\t\t\t\t'tabIndex': btnInfo.disabled\n\t\t\t\t\t? -1\n\t\t\t\t\t: settings.iTabIndex && btn.clicker[0].nodeName.toLowerCase() !== 'span'\n\t\t\t\t\t\t? settings.iTabIndex\n\t\t\t\t\t\t: null, // `0` doesn't need a tabIndex since it is the default\n\t\t\t});\n\t\n\t\t\tif (typeof button !== 'number') {\n\t\t\t\t$(btn.clicker).addClass(button);\n\t\t\t}\n\t\n\t\t\t_fnBindAction(\n\t\t\t\tbtn.clicker, {action: button}, function(e) {\n\t\t\t\t\te.preventDefault();\n\t\n\t\t\t\t\t_fnPageChange( settings, e.data.action, true );\n\t\t\t\t}\n\t\t\t);\n\t\n\t\t\tbuttonEls.push(btn.display);\n\t\t}\n\t\n\t\tvar wrapped = _fnRenderer(settings, 'pagingContainer')(\n\t\t\tsettings, buttonEls\n\t\t);\n\t\n\t\tvar activeEl = host.find(document.activeElement).data('dt-idx');\n\t\n\t\thost.empty().append(wrapped);\n\t\n\t\tif ( activeEl !== undefined ) {\n\t\t\thost.find( '[data-dt-idx='+activeEl+']' ).trigger('focus');\n\t\t}\n\t\n\t\t// Responsive - check if the buttons are over two lines based on the\n\t\t// height of the buttons and the container.\n\t\tif (buttonEls.length) {\n\t\t\tvar outerHeight = $(buttonEls[0]).outerHeight();\n\t\t\n\t\t\tif (\n\t\t\t\topts.buttons > 1 && // prevent infinite\n\t\t\t\touterHeight > 0 && // will be 0 if hidden\n\t\t\t\t$(host).height() >= (outerHeight * 2) - 10\n\t\t\t) {\n\t\t\t\t_pagingDraw(settings, host, $.extend({}, opts, { buttons: opts.buttons - 2 }));\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Get properties for a button based on the current paging state of the table\n\t *\n\t * @param {*} settings DT settings object\n\t * @param {*} button The button type in question\n\t * @param {*} page Table's current page\n\t * @param {*} pages Number of pages\n\t * @returns Info object\n\t */\n\tfunction _pagingButtonInfo(settings, button, page, pages) {\n\t\tvar lang = settings.oLanguage.oPaginate;\n\t\tvar o = {\n\t\t\tdisplay: '',\n\t\t\tactive: false,\n\t\t\tdisabled: false\n\t\t};\n\t\n\t\tswitch ( button ) {\n\t\t\tcase 'ellipsis':\n\t\t\t\to.display = '&#x2026;';\n\t\t\t\tbreak;\n\t\n\t\t\tcase 'first':\n\t\t\t\to.display = lang.sFirst;\n\t\n\t\t\t\tif (page === 0) {\n\t\t\t\t\to.disabled = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\n\t\t\tcase 'previous':\n\t\t\t\to.display = lang.sPrevious;\n\t\n\t\t\t\tif ( page === 0 ) {\n\t\t\t\t\to.disabled = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\n\t\t\tcase 'next':\n\t\t\t\to.display = lang.sNext;\n\t\n\t\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\t\to.disabled = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\n\t\t\tcase 'last':\n\t\t\t\to.display = lang.sLast;\n\t\n\t\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\t\to.disabled = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\n\t\t\tdefault:\n\t\t\t\tif ( typeof button === 'number' ) {\n\t\t\t\t\to.display = settings.fnFormatNumber( button + 1 );\n\t\t\t\t\t\n\t\t\t\t\tif (page === button) {\n\t\t\t\t\t\to.active = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\n\t\treturn o;\n\t}\n\t\n\t/**\n\t * Compute what number buttons to show in the paging control\n\t *\n\t * @param {*} page Current page\n\t * @param {*} pages Total number of pages\n\t * @param {*} buttons Target number of number buttons\n\t * @param {boolean} addFirstLast Indicate if page 1 and end should be included\n\t * @returns Buttons to show\n\t */\n\tfunction _pagingNumbers ( page, pages, buttons, addFirstLast ) {\n\t\tvar\n\t\t\tnumbers = [],\n\t\t\thalf = Math.floor(buttons / 2),\n\t\t\tbefore = addFirstLast ? 2 : 1,\n\t\t\tafter = addFirstLast ? 1 : 0;\n\t\n\t\tif ( pages <= buttons ) {\n\t\t\tnumbers = _range(0, pages);\n\t\t}\n\t\telse if (buttons === 1) {\n\t\t\t// Single button - current page only\n\t\t\tnumbers = [page];\n\t\t}\n\t\telse if (buttons === 3) {\n\t\t\t// Special logic for just three buttons\n\t\t\tif (page <= 1) {\n\t\t\t\tnumbers = [0, 1, 'ellipsis'];\n\t\t\t}\n\t\t\telse if (page >= pages - 2) {\n\t\t\t\tnumbers = _range(pages-2, pages);\n\t\t\t\tnumbers.unshift('ellipsis');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnumbers = ['ellipsis', page, 'ellipsis'];\n\t\t\t}\n\t\t}\n\t\telse if ( page <= half ) {\n\t\t\tnumbers = _range(0, buttons-before);\n\t\t\tnumbers.push('ellipsis');\n\t\n\t\t\tif (addFirstLast) {\n\t\t\t\tnumbers.push(pages-1);\n\t\t\t}\n\t\t}\n\t\telse if ( page >= pages - 1 - half ) {\n\t\t\tnumbers = _range(pages-(buttons-before), pages);\n\t\t\tnumbers.unshift('ellipsis');\n\t\n\t\t\tif (addFirstLast) {\n\t\t\t\tnumbers.unshift(0);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tnumbers = _range(page-half+before, page+half-after);\n\t\t\tnumbers.push('ellipsis');\n\t\t\tnumbers.unshift('ellipsis');\n\t\n\t\t\tif (addFirstLast) {\n\t\t\t\tnumbers.push(pages-1);\n\t\t\t\tnumbers.unshift(0);\n\t\t\t}\n\t\t}\n\t\n\t\treturn numbers;\n\t}\n\t\n\tvar __lengthCounter = 0;\n\t\n\t// opts\n\t// - menu\n\t// - text\n\tDataTable.feature.register( 'pageLength', function ( settings, opts ) {\n\t\tvar features = settings.oFeatures;\n\t\n\t\t// For compatibility with the legacy `pageLength` top level option\n\t\tif (! features.bPaginate || ! features.bLengthChange) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\topts = $.extend({\n\t\t\tmenu: settings.aLengthMenu,\n\t\t\ttext: settings.oLanguage.sLengthMenu\n\t\t}, opts);\n\t\n\t\tvar\n\t\t\tclasses  = settings.oClasses.length,\n\t\t\ttableId  = settings.sTableId,\n\t\t\tmenu     = opts.menu,\n\t\t\tlengths  = [],\n\t\t\tlanguage = [],\n\t\t\ti;\n\t\n\t\t// Options can be given in a number of ways\n\t\tif (Array.isArray( menu[0] )) {\n\t\t\t// Old 1.x style - 2D array\n\t\t\tlengths = menu[0];\n\t\t\tlanguage = menu[1];\n\t\t}\n\t\telse {\n\t\t\tfor ( i=0 ; i<menu.length ; i++ ) {\n\t\t\t\t// An object with different label and value\n\t\t\t\tif ($.isPlainObject(menu[i])) {\n\t\t\t\t\tlengths.push(menu[i].value);\n\t\t\t\t\tlanguage.push(menu[i].label);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Or just a number to display and use\n\t\t\t\t\tlengths.push(menu[i]);\n\t\t\t\t\tlanguage.push(menu[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// We can put the <select> outside of the label if it is at the start or\n\t\t// end which helps improve accessability (not all screen readers like\n\t\t// implicit for elements).\n\t\tvar end = opts.text.match(/_MENU_$/);\n\t\tvar start = opts.text.match(/^_MENU_/);\n\t\tvar removed = opts.text.replace(/_MENU_/, '');\n\t\tvar str = '<label>' + opts.text + '</label>';\n\t\n\t\tif (start) {\n\t\t\tstr = '_MENU_<label>' + removed + '</label>';\n\t\t}\n\t\telse if (end) {\n\t\t\tstr = '<label>' + removed + '</label>_MENU_';\n\t\t}\n\t\n\t\t// Wrapper element - use a span as a holder for where the select will go\n\t\tvar tmpId = 'tmp-' + (+new Date())\n\t\tvar div = $('<div/>')\n\t\t\t.addClass( classes.container )\n\t\t\t.append(\n\t\t\t\tstr.replace( '_MENU_', '<span id=\"'+tmpId+'\"></span>' )\n\t\t\t);\n\t\n\t\t// Save text node content for macro updating\n\t\tvar textNodes = [];\n\t\tArray.prototype.slice.call(div.find('label')[0].childNodes).forEach(function (el) {\n\t\t\tif (el.nodeType === Node.TEXT_NODE) {\n\t\t\t\ttextNodes.push({\n\t\t\t\t\tel: el,\n\t\t\t\t\ttext: el.textContent\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\n\t\t// Update the label text in case it has an entries value\n\t\tvar updateEntries = function (len) {\n\t\t\ttextNodes.forEach(function (node) {\n\t\t\t\tnode.el.textContent = _fnMacros(settings, node.text, len);\n\t\t\t});\n\t\t}\n\t\n\t\t// Next, the select itself, along with the options\n\t\tvar select = $('<select/>', {\n\t\t\t'aria-controls': tableId,\n\t\t\t'class':         classes.select\n\t\t} );\n\t\n\t\tfor ( i=0 ; i<lengths.length ; i++ ) {\n\t\t\tselect[0][ i ] = new Option(\n\t\t\t\ttypeof language[i] === 'number' ?\n\t\t\t\t\tsettings.fnFormatNumber( language[i] ) :\n\t\t\t\t\tlanguage[i],\n\t\t\t\tlengths[i]\n\t\t\t);\n\t\t}\n\t\n\t\t// add for and id to label and input\n\t\tdiv.find('label').attr('for', 'dt-length-' + __lengthCounter);\n\t\tselect.attr('id', 'dt-length-' + __lengthCounter);\n\t\t__lengthCounter++;\n\t\n\t\t// Swap in the select list\n\t\tdiv.find('#' + tmpId).replaceWith(select);\n\t\n\t\t// Can't use `select` variable as user might provide their own and the\n\t\t// reference is broken by the use of outerHTML\n\t\t$('select', div)\n\t\t\t.val( settings._iDisplayLength )\n\t\t\t.on( 'change.DT', function() {\n\t\t\t\t_fnLengthChange( settings, $(this).val() );\n\t\t\t\t_fnDraw( settings );\n\t\t\t} );\n\t\n\t\t// Update node value whenever anything changes the table's length\n\t\t$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {\n\t\t\tif ( settings === s ) {\n\t\t\t\t$('select', div).val( len );\n\t\n\t\t\t\t// Resolve plurals in the text for the new length\n\t\t\t\tupdateEntries(len);\n\t\t\t}\n\t\t} );\n\t\n\t\tupdateEntries(settings._iDisplayLength);\n\t\n\t\treturn div;\n\t}, 'l' );\n\t\n\t// jQuery access\n\t$.fn.dataTable = DataTable;\n\t\n\t// Provide access to the host jQuery object (circular reference)\n\tDataTable.$ = $;\n\t\n\t// Legacy aliases\n\t$.fn.dataTableSettings = DataTable.settings;\n\t$.fn.dataTableExt = DataTable.ext;\n\t\n\t// With a capital `D` we return a DataTables API instance rather than a\n\t// jQuery object\n\t$.fn.DataTable = function ( opts ) {\n\t\treturn $(this).dataTable( opts ).api();\n\t};\n\t\n\t// All properties that are available to $.fn.dataTable should also be\n\t// available on $.fn.DataTable\n\t$.each( DataTable, function ( prop, val ) {\n\t\t$.fn.DataTable[ prop ] = val;\n\t} );\n\n\treturn DataTable;\n}));"],"names":["factory","define","amd","$","window","document","exports","jq","require","module","root","DataTable","jQuery","_ext","_Api","_api_register","_api_registerPlural","selector","options","this","_that","emptyInit","undefined","len","length","api","each","iLen","oInit","_fnExtend","i","sId","getAttribute","defaults","$this","nodeName","toLowerCase","trigger","_fnCompatOpts","_fnCompatCols","column","_fnCamelToHungarian","extend","data","allSettings","settings","s","nTable","nTHead","parentNode","nTFoot","bRetrieve","bDestroy","oInstance","Api","destroy","_fnLog","sTableId","id","splice","ext","_unique","oSettings","models","style","width","colgroup","prependTo","fastData","row","type","_fnGetCellData","push","dataTable","aLengthMenu","iDisplayLength","Array","isArray","isPlainObject","value","_fnMap","oFeatures","oScroll","oLanguage","_fnCallbackReg","fnDrawCallback","fnStateSaveParams","fnStateLoadParams","fnStateLoaded","fnRowCallback","fnCreatedRow","fnHeaderCallback","fnFooterCallback","fnInitComplete","fnPreDrawCallback","rowIdFn","_fnGetObjectDataFn","rowId","__browser","browser","n","css","position","top","left","pageXOffset","height","overflow","append","appendTo","outer","children","inner","barWidth","offsetWidth","clientWidth","bScrollbarLeft","Math","round","offset","remove","oBrowser","iBarWidth","_fnBrowserDetect","oClasses","classes","addClass","table","bPaginate","iDisplayStart","iInitDisplayStart","_iDisplayStart","defer","iDeferLoading","deferLoading","tmp","_iRecordsDisplay","_iRecordsTotal","columnsInit","thead","getElementsByTagName","initHeaderLayout","_fnDetectHeader","aoColumns","_fnAddColumn","aoColDefs","aoCols","headerLayout","fn","j","jLen","k","kLen","def","columns","name","sName","aTargets","target","targets","indexOf","replace","forEach","cell","match","is","_fnApplyColumnDefs","aoColumnDefs","iCol","oDef","_fnColumnOptions","rowOne","find","eq","a","col","mData","sort","filter","_","_isArrayHost","_fnSaveState","features","bStateSave","aaSorting","sorting","asSorting","_fnSortingClasses","bSorted","_fnDataSource","bDeferRender","caption","html","_captionSide","captionNode","tbody","insertAfter","nTBody","tfoot","aiDisplay","aiDisplayMaster","slice","bInitialised","sUrl","ajax","dataType","url","success","json","_fnCallbackFire","_fnInitialise","error","buttons","builder","errMode","feature","search","legacy","pager","renderer","pageButton","header","order","className","detect","render","fnVersionCheck","iApiIndex","sVersion","version","afnFiltering","aTypes","ofnSearch","oSort","afnSortData","aoFeatures","oStdClasses","oPagination","container","empty","info","layout","tableRow","tableCell","start","end","full","select","canAsc","canDesc","isAsc","isDesc","none","processing","scrolling","body","footer","self","input","paging","active","button","disabled","nav","_re_dic","_re_new_lines","_re_html","_max_str_len","pow","_re_date","_re_escape_regex","RegExp","join","_re_formatted_numeric","_empty","d","_intVal","integer","parseInt","isNaN","isFinite","_numToDecimal","num","decimalPoint","_fnEscapeRegex","_isNumber","formatted","allowEmpty","strType","parseFloat","_htmlNumeric","_isHtml","_stripHtml","_pluck","prop","prop2","out","ien","_pluck_order","_range","_removeEmpty","Error","previous","_escapeHtml","_normalize","str","both","res","normalize","src","from","Set","sorted","last","_areAllUnique","val","again","_flatten","_addClass","el","split","classList","add","_fnHungarianMap","o","newKey","map","key","_hungarianMap","user","force","hungarianKey","charAt","util","diacritics","mixed","debounce","timeout","timer","that","args","arguments","clearTimeout","setTimeout","apply","throttle","freq","frequency","now","Date","escapeRegex","set","source","meta","setData","b","arrayNotation","funcNotation","innerSrc","_fnSplitObjNotation","aLast","__reArray","__reFn","get","t","fetchData","substring","stripHtml","escapeHtml","unique","_fnCompatMap","knew","old","init","sScrollX","scrollX","searchCols","aoSearchCols","oSearch","serverSide","searchDelay","dataSort","aDataSort","oDefaults","oCol","oColumn","idx","searchFixed","colEl","attr","aoPreSearchCols","oOptions","mDataProp","sType","_sManualType","sClass","origClass","iDataSort","mDataSrc","mRender","copy","shift","_render","attrTest","_bAttrSrc","_setter","fnGetData","rowData","innerData","fnSetData","_fnSetObjectDataFn","_rowReadObject","bSort","bSortable","_fnAdjustColumnSizing","bAutoWidth","columnIdx","scroll","scrollY","sY","sX","scrollXInner","sXInner","visibleColumns","_fnGetColumns","tableWidthAttr","tableContainer","styleWidth","containerWidth","_fnWrapperWidth","visible","tmpTable","cloneNode","removeAttr","tr","clone","_fnColumnsSumWidth","minWidth","margin","padding","border","longest","_fnGetMaxLenString","autoClass","text","sContentPadding","insert","createTextNode","holder","right","outerWidth","total","bodyCells","bounding","getBoundingClientRect","sWidth","_fnStringToCss","_reszEvt","resize","newWidth","bDestroying","ResizeObserver","first","nTableWrapper","resizer","resizeObserver","e","observe","on","sInstance","_fnCalculateColumnWidths","cols","_fnColumnSizes","_fnScrollDraw","_fnVisibleToColumnIndex","iMatch","aiVis","_fnColumnIndexToVisible","iPos","_fnVisbleColumns","aoHeader","vis","bVisible","sParam","_typeResult","typeDetect","_name","_fnColumnTypes","jen","ken","detectedType","cache","aoData","types","oneOf","allOf","one","_columnAutoClass","aoFooter","_columnAutoRender","colIdx","nTr","display","displayData","_fnWriteCell","anCells","original","incVisible","_fnColumnsFromHeader","unit","sum","definedWidth","sWidthOrig","matched","closest","_fnAddData","dataIn","tds","rowIdx","rowModel","oRow","_aData","aIds","_fnCreateTr","_fnAddTr","trs","_fnGetRowElements","cells","draw","iDraw","defaultContent","sDefaultContent","cellData","innerHTML","iDrawError","call","fomatters","td","_fnGetDataMaster","_fnClearTable","_fnInvalidate","_aSortData","_aFilterData","_fnGetRowDisplay","maxLenString","_fnRowAttributes","contents","firstChild","objectRead","setter","cellProcess","trim","toUpperCase","nextSibling","rowNode","rowModal","iRow","nTrIn","anTds","nTd","create","trClass","createElement","_DT_RowIndex","sCellType","_DT_CellIndex","appendChild","removeChild","fnCreatedCell","DT_RowClass","__rowc","concat","removeClass","DT_RowAttr","DT_RowData","_fnBuildHead","side","titleProp","cellCount","colSpan","detected","_fnRenderer","_fnHeaderLayout","incColumns","rowspan","colspan","local","structure","columnCount","includes","titleSpan","title","_fnDrawHead","point","_fnDraw","ajaxComplete","bServerSide","fnRecordsDisplay","_fnStart","anRows","iRowCount","iDisplayEnd","fnDisplayEnd","bDrawing","_fnProcessingDisplay","_emptyRow","_fnBuildAjax","preSearch","oPreviousSearch","preColSearch","colData","searchable","bSearchable","orderable","regex","fixed","Object","keys","term","toString","_fnSortFlatten","dir","_iDisplayLength","_fnAjaxParameters","_fnAjaxDataSrc","_fnAjaxDataSrcParam","recordsTotal","recordsFiltered","_fnInitComplete","_fnAjaxUpdateDraw","iStart","iEnd","iDataIndex","nRow","replaceChildren","detach","toggleClass","bFiltered","_fnReDraw","holdPosition","recompute","bFilter","_fnSort","_fnFilterComplete","_drawHold","oLang","zero","sZeroRecords","dataSrc","sLoadingRecords","sEmptyTable","fnRecordsTotal","_layoutItems","align","items","rowCell","rowClass","opts","_layoutArray","rows","pos","parts","rowNum","_layoutGetRow","order1","order2","ret","reverse","_layoutResolve","getFeature","resolve","item","line","node","inst","_fnAddOptionsHtml","insertBefore","sDom","dom","featureNode","option","newNode","next","parent","_fnFeatureHtmlTable","cFeature","fnInit","_fnLayoutDom","bottom","bProcessing","sProcessing","show","_processingHtml","write","l","shifted","isHeader","columnDef","sTitle","autoTitle","ariaTitle","childNodes","setAttribute","ajaxData","instance","callback","status","jqXHR","sError","JSON","parse","newData","baseAjax","sServerMethod","xhr","readyState","oAjaxData","dataProp","aaData","param","columnsSearch","filterData","wasInvalidated","__filter_div","__filter_div_textContent","textContent","innerText","_sFilterRow","_fnFilterData","_fnFilter","filters","displayRows","_fnArrayApply","_fnFilterCustom","searchRows","searchFunc","rpSearch","inOpts","not","boundary","caseInsensitive","exact","smart","word","m","negative","_fnFilterCreateSearch","test","loaded","state","_fnImplementState","fnStateLoadCallback","_fnLoadState","iAjaxStart","headerRows","querySelectorAll","legacyTop","bSortCellsTop","notSelector","_fnSortAttachListener","_fnSortResolve","_fnSortInit","_colGroup","aData","_bInitComplete","_fnLengthChange","_fnLengthOverflow","_fnPageChange","action","redraw","records","floor","changed","_fnProcessingRun","enable","run","captionSide","headerClone","footerClone","_div","size","scroller","scrollHead","scrollBody","scrollFoot","scrollLeft","bCollapse","nScrollHead","nScrollBody","nScrollFoot","aoDrawCallback","headerCopy","footerCopy","divHeaderInner","divHeaderTable","divBodyEl","divBody","divFooterInner","divFooterTable","scrollBarVis","scrollHeight","clientHeight","firstTr","colSizes","wrapAll","isScrolling","paddingSide","scrollTop","max","maxLen","cellString","nodeType","_fnBindAction","_fnSortAdd","shiftKey","_fnSortDisplay","master","masterMap","nestedSort","z","srcCol","aSort","extSort","aaSortingFixed","fixedObj","pre","post","_idx","index","formatter","sorter","aiOrig","displayMaster","_fnSortData","orderDescReverse","x","y","dataA","dataB","sortDetails","addIndex","nextSortIdx","bSortMulti","sortIdx","oldSort","aLastSort","sortClass","bSortClasses","customData","customSort","sSortDataType","_bLoadingState","time","oSavedState","fnStateSaveCallback","currentNames","duration","iStateDuration","oLoadedState","page","incoming","adjust","level","msg","tn","console","log","sErrMode","alert","mappedName","extender","breakRefs","prototype","hasOwnProperty","which","preventDefault","store","callbackArr","eventName","bubbles","Event","dt","parents","result","host","_fnMacros","entries","fnFormatNumber","all","ceil","i18n","arr","__apiStruct","__arrayProto","_api_scope","scope","struc","methodExt","_api_find","context","ctxSettings","tables","toArray","v","_toSettings","any","count","flatten","ctx","iterator","alwaysNew","apiInst","_selector_row_indexes","apiSelector","lastIndexOf","pluck","pop","reduce","reduceRight","to$","toJQuery","unshift","obj","struct","__dt_wrapper","propExt","register","method","heir","registerPlural","pluralName","singularName","__table_selector","sel","nodes","indexes","prepend","visRecords","__reload","abort","resetPaging","_selector_run","selectFn","selectorType","_selector_opts","_selector_first","displayFiltered","displayFilteredMap","ordered","selInt","cellIdx","rowObj","__row_selector","r","hash","newRows","modRows","idFn","ids","_detailsShow","childRows","__details_state_load","every","__details_state","__details_remove","_details","__details_display","__details_events","off","drawEvent","_child_obj","klass","child","addRow","created","__details_add","_child_mth","__re_column_selector","__columnData","r1","r2","__column_header","names","titles","visColumns","jqResult","__column_selector","span","calc","__setColumnVis","widths","visIdx","__bootstrap","__foundation","rowSelector","columnSelector","allCells","fnSelector","__cell_selector","internalOpts","cellsNoOpts","selected","columnVisible","directions","caseInsen","ignoreTime","setMutate","use","arg1","arg2","DateTime","__luxon","__moment","bootstrap","Foundation","jquery","FixedOffsetZone","isMoment","Modal","NAME","Reveal","versionCheck","version2","iThis","iThat","aThis","aThat","isDataTable","head","foot","camelToHungarian","jqRows","jqTable","jqTbody","jqWrapper","orderClasses","disconnect","orig","removedMethod","sDestroyWidth","counter","selectedIdx","tableIdx","token","plural","resolved","toFormat","sThousands","sessionStorage","localStorage","getItem","location","pathname","setItem","stringify","paginate","number","topStart","topEnd","bottomStart","bottomEnd","pagingControls","min","extPagination","simple","numbers","simple_numbers","full_numbers","first_last","first_last_numbers","_numbers","_pagingNumbers","numbers_length","pagingButton","buttonType","content","btn","btnClasses","class","role","clicker","pagingContainer","_filterString","__mld","dtLib","momentFn","luxonFn","dateFn","__mlWarning","__mldObj","format","locale","luxon","moment","utc","isValid","fromFormat","fromISO","setLocale","__mlHelper","localeString","to","typeName","valueOf","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","__thousands","__decimal","Intl","NumberFormat","formatToParts","datetime","date","thousands","decimal","precision","prefix","postfix","flo","abs","exp","toExponential","toFixed","intPart","floatPart","_extTypes","asc","desc","setProp","propVal","setDetect","defineProperty","findIndex","setOrder","__diacriticSort","localeCompare","navigator","languages","language","numeric","ignorePunctuation","__diacriticHtmlSort","parsed","ts","Infinity","sDecimal","dp","__numericReplace","decimalPlace","re1","re2","_divProp","ariaType","sortDirs","orderedColumns","tabIndex","iTabIndex","isOrdering","orderDirs","firstVis","firstSort","sortOrder","orderSpan","_forLayoutRow","layoutEnum","cb","bInfo","lang","tid","fnInfoCallback","sInfoEmpty","sInfoPostFix","sInfoFiltered","sInfo","_fnUpdateInfo","_infoEl","__searchCounter","_pagingDynamic","previousNext","firstLast","_pagingDraw","plugin","aria","oAria","pages","buttonEls","buttonsNested","boundaryNumbers","btnInfo","_pagingButtonInfo","ariaLabel","wrapped","activeEl","activeElement","outerHeight","oPaginate","sFirst","sPrevious","sNext","sLast","addFirstLast","half","before","after","tableId","previousSearch","placeholder","sSearchPlaceholder","sSearch","removed","searchFn","event","return","jqFilter","keyCode","ev","sPaginationType","__lengthCounter","bLengthChange","menu","sLengthMenu","lengths","label","tmpId","div","textNodes","Node","TEXT_NODE","updateEntries","Option","replaceWith","dataTableSettings","dataTableExt"],"mappings":"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"}